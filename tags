!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AOPFactory	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^class AOPFactory extends Factory$/;"	c
AOPMysqlPoolCoroutine	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^        $AOPMysqlPoolCoroutine = new Wrapper($mysqlPoolCoroutine);$/;"	v
AOPPool	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^        $AOPPool = new Wrapper($pool);$/;"	v
AOPRedisPoolCoroutine	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^        $AOPRedisPoolCoroutine = new Wrapper($redisPoolCoroutine);$/;"	v
APPLICATION_ENV	console.php	/^define('APPLICATION_ENV', $_ENV['MSF_ENV'] ?? 'docker');$/;"	d
APPLICATION_ENV	server.php	/^define('APPLICATION_ENV', $_ENV['MSF_ENV'] ?? 'docker');$/;"	d
APP_DIR	console.php	/^define('APP_DIR', ROOT_PATH . '\/app');$/;"	d
APP_DIR	server.php	/^define('APP_DIR', ROOT_PATH . '\/app');$/;"	d
AbstractConfig	vendor/hassankhan/config/src/AbstractConfig.php	/^abstract class AbstractConfig implements ArrayAccess, ConfigInterface, Iterator$/;"	c
AbstractContext	vendor/pinguo/php-context/src/AbstractContext.php	/^abstract class AbstractContext implements \\ArrayAccess$/;"	c
AbstractCursor	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^abstract class AbstractCursor$/;"	c
AbstractFileParser	vendor/hassankhan/config/src/FileParser/AbstractFileParser.php	/^abstract class AbstractFileParser implements FileParserInterface$/;"	c
AbstractHandler	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^abstract class AbstractHandler extends Handler$/;"	c
AbstractHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^class AbstractHandlerTest extends TestCase$/;"	c
AbstractLogger	vendor/psr/log/Psr/Log/AbstractLogger.php	/^abstract class AbstractLogger implements LoggerInterface$/;"	c
AbstractProcessingHandler	vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^abstract class AbstractProcessingHandler extends AbstractHandler implements ProcessableHandlerInterface, FormattableHandlerInterface$/;"	c
AbstractProcessingHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^class AbstractProcessingHandlerTest extends TestCase$/;"	c
AbstractSyslogHandler	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^abstract class AbstractSyslogHandler extends AbstractProcessingHandler$/;"	c
ActivationStrategyInterface	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php	/^interface ActivationStrategyInterface$/;"	i
Aggregate	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^class Aggregate implements Executable$/;"	c
AggregateFunctionalTest	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^class AggregateFunctionalTest extends FunctionalTestCase$/;"	c
AggregateTest	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^class AggregateTest extends TestCase$/;"	c
AmqpHandler	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^class AmqpHandler extends AbstractProcessingHandler$/;"	c
AmqpHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^class AmqpHandlerTest extends TestCase$/;"	c
AppServer	app/AppServer.php	/^class AppServer extends MSFServer$/;"	c
Asset	vendor/pinguo/plates/src/Extension/Asset.php	/^class Asset implements ExtensionInterface$/;"	c
AsynPool	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^abstract class AsynPool implements IAsynPool$/;"	c
AsynPoolManager	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^class AsynPoolManager$/;"	c
BSONArray	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^class BSONArray extends ArrayObject implements JsonSerializable, Serializable, Unserializable$/;"	c
BSONArrayTest	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^class BSONArrayTest extends TestCase$/;"	c
BSONDocument	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^class BSONDocument extends ArrayObject implements JsonSerializable, Serializable, Unserializable$/;"	c
BSONDocumentTest	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^class BSONDocumentTest extends TestCase$/;"	c
BadMethodCallException	vendor/mongodb/mongodb/src/Exception/BadMethodCallException.php	/^class BadMethodCallException extends \\BadMethodCallException implements Exception$/;"	c
Base	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^abstract class Base implements IBase$/;"	c
Batch	app/Console/Batch.php	/^class Batch extends Controller$/;"	c
Bench	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^class Bench extends Controller$/;"	c
BenchmarkTest	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^class BenchmarkTest extends PHPUnit_Framework_TestCase$/;"	c
BrowserConsoleHandler	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^class BrowserConsoleHandler extends AbstractProcessingHandler$/;"	c
BrowserConsoleHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^class BrowserConsoleHandlerTest extends TestCase$/;"	c
Bucket	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^class Bucket$/;"	c
BucketFunctionalTest	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^class BucketFunctionalTest extends FunctionalTestCase$/;"	c
BufferHandler	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^class BufferHandler extends AbstractHandler implements ProcessableHandlerInterface$/;"	c
BufferHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^class BufferHandlerTest extends TestCase$/;"	c
BulkWrite	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^class BulkWrite implements Executable$/;"	c
BulkWriteFunctionalTest	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^class BulkWriteFunctionalTest extends FunctionalTestCase$/;"	c
BulkWriteResult	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^class BulkWriteResult$/;"	c
BulkWriteTest	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^class BulkWriteTest extends TestCase$/;"	c
CNull	vendor/pinguo/php-msf/src/Coroutine/CNull.php	/^class CNull$/;"	c
COMPOSER_ARGS	vendor/mongodb/mongodb/Makefile	/^COMPOSER_ARGS=update --no-interaction --prefer-source$/;"	m
CTask	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^class CTask extends Base$/;"	c
ChannelLevelActivationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^class ChannelLevelActivationStrategy implements ActivationStrategyInterface$/;"	c
Child	vendor/pinguo/php-msf/src/Base/Child.php	/^class Child$/;"	c
ChromePHPFormatter	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^class ChromePHPFormatter implements FormatterInterface$/;"	c
ChromePHPFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^class ChromePHPFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
ChromePHPHandler	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^class ChromePHPHandler extends AbstractProcessingHandler$/;"	c
ChromePHPHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^class ChromePHPHandlerTest extends TestCase$/;"	c
ClassLoader	vendor/composer/ClassLoader.php	/^class ClassLoader$/;"	c
Client	vendor/mongodb/mongodb/src/Client.php	/^class Client$/;"	c
Client	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^class Client extends Core$/;"	c
ClientFunctionalTest	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^class ClientFunctionalTest extends FunctionalTestCase$/;"	c
ClientTest	vendor/mongodb/mongodb/tests/ClientTest.php	/^class ClientTest extends TestCase$/;"	c
Collection	vendor/mongodb/mongodb/src/Collection.php	/^class Collection$/;"	c
CollectionFunctionalTest	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^class CollectionFunctionalTest extends FunctionalTestCase$/;"	c
CollectionInfo	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^class CollectionInfo$/;"	c
CollectionInfoCommandIterator	vendor/mongodb/mongodb/src/Model/CollectionInfoCommandIterator.php	/^class CollectionInfoCommandIterator extends IteratorIterator implements CollectionInfoIterator$/;"	c
CollectionInfoIterator	vendor/mongodb/mongodb/src/Model/CollectionInfoIterator.php	/^interface CollectionInfoIterator extends Iterator$/;"	i
CollectionInfoLegacyIterator	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^class CollectionInfoLegacyIterator extends FilterIterator implements CollectionInfoIterator$/;"	c
CollectionInfoTest	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^class CollectionInfoTest extends TestCase$/;"	c
CollectionManagementFunctionalTest	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^class CollectionManagementFunctionalTest extends FunctionalTestCase$/;"	c
CollectionWrapper	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^class CollectionWrapper$/;"	c
ComposerAutoloaderInit0b38b3a26e76b1c1cca49aaf455c88c6	vendor/composer/autoload_real.php	/^class ComposerAutoloaderInit0b38b3a26e76b1c1cca49aaf455c88c6$/;"	c
ComposerStaticInit0b38b3a26e76b1c1cca49aaf455c88c6	vendor/composer/autoload_static.php	/^class ComposerStaticInit0b38b3a26e76b1c1cca49aaf455c88c6$/;"	c
Config	vendor/hassankhan/config/src/Config.php	/^class Config extends AbstractConfig$/;"	c
Config	vendor/pinguo/php-msf/src/Process/Config.php	/^class Config extends ProcessBase$/;"	c
ConfigInterface	vendor/hassankhan/config/src/ConfigInterface.php	/^interface ConfigInterface$/;"	i
Context	vendor/pinguo/php-msf/src/Helpers/Context.php	/^class Context extends AbstractContext$/;"	c
Controller	vendor/pinguo/php-msf/src/Console/Controller.php	/^class Controller extends BController$/;"	c
Controller	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^class Controller extends Core$/;"	c
Controller	vendor/pinguo/php-msf/src/Rest/Controller.php	/^class Controller extends \\PG\\MSF\\Controllers\\Controller$/;"	c
Core	vendor/pinguo/php-msf/src/Base/Core.php	/^class Core extends Child$/;"	c
CoroutineRedisProxy	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^class CoroutineRedisProxy$/;"	c
CoroutineTest	app/Controllers/CoroutineTest.php	/^class CoroutineTest extends Controller$/;"	c
CorruptFileException	vendor/mongodb/mongodb/src/GridFS/Exception/CorruptFileException.php	/^class CorruptFileException extends RuntimeException$/;"	c
CouchDBHandler	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^class CouchDBHandler extends AbstractProcessingHandler$/;"	c
CouchDBHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^class CouchDBHandlerTest extends TestCase$/;"	c
Count	vendor/mongodb/mongodb/src/Operation/Count.php	/^class Count implements Executable$/;"	c
CountTest	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^class CountTest extends TestCase$/;"	c
Crc32Hasher	vendor/flexihash/flexihash/src/Hasher/Crc32Hasher.php	/^class Crc32Hasher implements HasherInterface$/;"	c
CreateCollection	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^class CreateCollection implements Executable$/;"	c
CreateCollectionTest	vendor/mongodb/mongodb/tests/Operation/CreateCollectionTest.php	/^class CreateCollectionTest extends TestCase$/;"	c
CreateIndexes	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^class CreateIndexes implements Executable$/;"	c
CreateIndexesFunctionalTest	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^class CreateIndexesFunctionalTest extends FunctionalTestCase$/;"	c
CreateIndexesTest	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^class CreateIndexesTest extends TestCase$/;"	c
CrudSpecFunctionalTest	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^class CrudSpecFunctionalTest extends FunctionalTestCase$/;"	c
CubeHandler	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^class CubeHandler extends AbstractProcessingHandler$/;"	c
CustomCustomException	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^class CustomCustomException extends CustomTestException$/;"	c
CustomTestException	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^class CustomTestException extends \\Exception$/;"	c
DUMP_TRUNCATED	server.php	/^define('DUMP_TRUNCATED', true);$/;"	d
Data	vendor/pinguo/plates/src/Template/Data.php	/^class Data$/;"	c
Database	vendor/mongodb/mongodb/src/Database.php	/^class Database$/;"	c
DatabaseCommand	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^class DatabaseCommand implements Executable$/;"	c
DatabaseCommandTest	vendor/mongodb/mongodb/tests/Operation/DatabaseCommandTest.php	/^class DatabaseCommandTest extends TestCase$/;"	c
DatabaseFunctionalTest	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^class DatabaseFunctionalTest extends FunctionalTestCase$/;"	c
DatabaseInfo	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^class DatabaseInfo$/;"	c
DatabaseInfoIterator	vendor/mongodb/mongodb/src/Model/DatabaseInfoIterator.php	/^interface DatabaseInfoIterator extends Iterator$/;"	i
DatabaseInfoLegacyIterator	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^class DatabaseInfoLegacyIterator implements DatabaseInfoIterator$/;"	c
DatabaseInfoTest	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^class DatabaseInfoTest extends TestCase$/;"	c
DateTimeImmutable	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^class DateTimeImmutable extends \\DateTimeImmutable implements \\JsonSerializable$/;"	c
DeduplicationHandler	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^class DeduplicationHandler extends BufferHandler$/;"	c
DeduplicationHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^class DeduplicationHandlerTest extends TestCase$/;"	c
Delete	vendor/mongodb/mongodb/src/Operation/Delete.php	/^class Delete implements Executable$/;"	c
DeleteFunctionalTest	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^class DeleteFunctionalTest extends FunctionalTestCase$/;"	c
DeleteMany	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^class DeleteMany implements Executable$/;"	c
DeleteOne	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^class DeleteOne implements Executable$/;"	c
DeleteResult	vendor/mongodb/mongodb/src/DeleteResult.php	/^class DeleteResult$/;"	c
DeleteTest	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^class DeleteTest extends TestCase$/;"	c
Demo	app/Controllers/Demo.php	/^class Demo extends Controller$/;"	c
Demo	app/Models/Demo.php	/^class Demo extends Model$/;"	c
Demo	app/Tasks/Demo.php	/^class Demo extends Task$/;"	c
Directory	vendor/pinguo/plates/src/Template/Directory.php	/^class Directory$/;"	c
Distinct	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^class Distinct implements Executable$/;"	c
DistinctTest	vendor/mongodb/mongodb/tests/Operation/DistinctTest.php	/^class DistinctTest extends TestCase$/;"	c
Dns	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^class Dns extends Base$/;"	c
DoctrineCouchDBHandler	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^class DoctrineCouchDBHandler extends AbstractProcessingHandler$/;"	c
DoctrineCouchDBHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^class DoctrineCouchDBHandlerTest extends TestCase$/;"	c
DropCollection	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^class DropCollection implements Executable$/;"	c
DropCollectionFunctionalTest	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^class DropCollectionFunctionalTest extends FunctionalTestCase$/;"	c
DropCollectionTest	vendor/mongodb/mongodb/tests/Operation/DropCollectionTest.php	/^class DropCollectionTest extends TestCase$/;"	c
DropDatabase	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^class DropDatabase implements Executable$/;"	c
DropDatabaseFunctionalTest	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^class DropDatabaseFunctionalTest extends FunctionalTestCase$/;"	c
DropDatabaseTest	vendor/mongodb/mongodb/tests/Operation/DropDatabaseTest.php	/^class DropDatabaseTest extends TestCase$/;"	c
DropIndexes	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^class DropIndexes implements Executable$/;"	c
DropIndexesFunctionalTest	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^class DropIndexesFunctionalTest extends FunctionalTestCase$/;"	c
DropIndexesTest	vendor/mongodb/mongodb/tests/Operation/DropIndexesTest.php	/^class DropIndexesTest extends TestCase$/;"	c
DummyTest	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^class DummyTest$/;"	c
DynamoDbHandler	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^class DynamoDbHandler extends AbstractProcessingHandler$/;"	c
DynamoDbHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^class DynamoDbHandlerTest extends TestCase$/;"	c
ElasticSearchHandler	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^class ElasticSearchHandler extends AbstractProcessingHandler$/;"	c
ElasticSearchHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^class ElasticSearchHandlerTest extends TestCase$/;"	c
ElasticaFormatter	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^class ElasticaFormatter extends NormalizerFormatter$/;"	c
ElasticaFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^class ElasticaFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
EmptyDirectoryException	vendor/hassankhan/config/src/Exception/EmptyDirectoryException.php	/^class EmptyDirectoryException extends Exception$/;"	c
Engine	vendor/pinguo/plates/src/Engine.php	/^class Engine$/;"	c
ErrorException	vendor/hassankhan/config/src/ErrorException.php	/^class ErrorException extends \\ErrorException$/;"	c
ErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^class ErrorHandler$/;"	c
ErrorHandlerTest	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^class ErrorHandlerTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
ErrorLevelActivationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^class ErrorLevelActivationStrategy implements ActivationStrategyInterface$/;"	c
ErrorLogHandler	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^class ErrorLogHandler extends AbstractProcessingHandler$/;"	c
ErrorLogHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^class ErrorLogHandlerTest extends TestCase$/;"	c
Exception	vendor/flexihash/flexihash/src/Exception.php	/^class Exception extends \\Exception$/;"	c
Exception	vendor/hassankhan/config/src/Exception.php	/^class Exception extends \\Exception$/;"	c
Exception	vendor/mongodb/mongodb/src/Exception/Exception.php	/^interface Exception extends \\MongoDB\\Driver\\Exception\\Exception$/;"	i
Exception	vendor/pinguo/php-msf/src/Base/Exception.php	/^class Exception extends \\Exception$/;"	c
Exception	vendor/pinguo/php-msf/src/Client/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Coroutine/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Pack/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Pools/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Process/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Proxy/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Route/Exception.php	/^class Exception extends BaseException$/;"	c
Exception	vendor/pinguo/php-msf/src/Tasks/Exception.php	/^class Exception extends BaseException$/;"	c
ExceptionConverter	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^class ExceptionConverter$/;"	c
ExceptionConverterTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/ExceptionConverterTest.php	/^class ExceptionConverterTest extends TestCase$/;"	c
ExceptionTestHandler	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^class ExceptionTestHandler extends TestHandler$/;"	c
Executable	vendor/mongodb/mongodb/src/Operation/Executable.php	/^interface Executable$/;"	i
ExtensionInterface	vendor/pinguo/plates/src/Extension/ExtensionInterface.php	/^interface ExtensionInterface$/;"	i
Factory	vendor/pinguo/php-aop/src/Factory.php	/^class Factory$/;"	c
FileExtension	vendor/pinguo/plates/src/Template/FileExtension.php	/^class FileExtension$/;"	c
FileNotFoundException	vendor/hassankhan/config/src/Exception/FileNotFoundException.php	/^class FileNotFoundException extends Exception$/;"	c
FileNotFoundException	vendor/mongodb/mongodb/src/GridFS/Exception/FileNotFoundException.php	/^class FileNotFoundException extends RuntimeException$/;"	c
FileParserInterface	vendor/hassankhan/config/src/FileParser/FileParserInterface.php	/^interface FileParserInterface$/;"	i
FilterHandler	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^class FilterHandler extends Handler implements ProcessableHandlerInterface$/;"	c
FilterHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^class FilterHandlerTest extends TestCase$/;"	c
Find	vendor/mongodb/mongodb/src/Operation/Find.php	/^class Find implements Executable$/;"	c
FindAndModify	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^class FindAndModify implements Executable$/;"	c
FindAndModifyFunctionalTest	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^class FindAndModifyFunctionalTest extends FunctionalTestCase$/;"	c
FindAndModifyTest	vendor/mongodb/mongodb/tests/Operation/FindAndModifyTest.php	/^class FindAndModifyTest extends TestCase$/;"	c
FindFunctionalTest	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^class FindFunctionalTest extends FunctionalTestCase$/;"	c
FindOne	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^class FindOne implements Executable$/;"	c
FindOneAndDelete	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^class FindOneAndDelete implements Executable$/;"	c
FindOneAndDeleteTest	vendor/mongodb/mongodb/tests/Operation/FindOneAndDeleteTest.php	/^class FindOneAndDeleteTest extends TestCase$/;"	c
FindOneAndReplace	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^class FindOneAndReplace implements Executable$/;"	c
FindOneAndReplaceTest	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^class FindOneAndReplaceTest extends TestCase$/;"	c
FindOneAndUpdate	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^class FindOneAndUpdate implements Executable$/;"	c
FindOneAndUpdateTest	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^class FindOneAndUpdateTest extends TestCase$/;"	c
FindOneFunctionalTest	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^class FindOneFunctionalTest extends FunctionalTestCase$/;"	c
FindTest	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^class FindTest extends TestCase$/;"	c
FingersCrossedHandler	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^class FingersCrossedHandler extends Handler implements ProcessableHandlerInterface$/;"	c
FingersCrossedHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^class FingersCrossedHandlerTest extends TestCase$/;"	c
FirePHPHandler	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^class FirePHPHandler extends AbstractProcessingHandler$/;"	c
FirePHPHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^class FirePHPHandlerTest extends TestCase$/;"	c
FleepHookHandler	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^class FleepHookHandler extends SocketHandler$/;"	c
FleepHookHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^class FleepHookHandlerTest extends TestCase$/;"	c
Flexihash	vendor/flexihash/flexihash/src/Flexihash.php	/^class Flexihash$/;"	c
FlexihashTest	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^class FlexihashTest extends PHPUnit_Framework_TestCase$/;"	c
FlowdockFormatter	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^class FlowdockFormatter implements FormatterInterface$/;"	c
FlowdockFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^class FlowdockFormatterTest extends TestCase$/;"	c
FlowdockHandler	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^class FlowdockHandler extends SocketHandler$/;"	c
FlowdockHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^class FlowdockHandlerTest extends TestCase$/;"	c
FluentdFormatter	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^class FluentdFormatter implements FormatterInterface$/;"	c
FluentdFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^class FluentdFormatterTest extends TestCase$/;"	c
Folder	vendor/pinguo/plates/src/Template/Folder.php	/^class Folder$/;"	c
Folders	vendor/pinguo/plates/src/Template/Folders.php	/^class Folders$/;"	c
FormattableHandlerInterface	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerInterface.php	/^interface FormattableHandlerInterface$/;"	i
FormatterInterface	vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^interface FormatterInterface$/;"	i
Func	vendor/pinguo/plates/src/Template/Func.php	/^class Func$/;"	c
FunctionalTestCase	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^abstract class FunctionalTestCase extends BaseFunctionalTestCase$/;"	c
FunctionalTestCase	vendor/mongodb/mongodb/tests/Database/FunctionalTestCase.php	/^abstract class FunctionalTestCase extends BaseFunctionalTestCase$/;"	c
FunctionalTestCase	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^abstract class FunctionalTestCase extends TestCase$/;"	c
FunctionalTestCase	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^abstract class FunctionalTestCase extends BaseFunctionalTestCase$/;"	c
FunctionalTestCase	vendor/mongodb/mongodb/tests/Operation/FunctionalTestCase.php	/^abstract class FunctionalTestCase extends BaseFunctionalTestCase$/;"	c
Functions	vendor/pinguo/plates/src/Template/Functions.php	/^class Functions$/;"	c
FunctionsTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^class FunctionsTest extends TestCase$/;"	c
FunctionsTest	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^class FunctionsTest extends TestCase$/;"	c
GelfHandler	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^class GelfHandler extends AbstractProcessingHandler$/;"	c
GelfHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^class GelfHandlerTest extends TestCase$/;"	c
GelfMessageFormatter	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^class GelfMessageFormatter extends NormalizerFormatter$/;"	c
GelfMessageFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^class GelfMessageFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
GitProcessor	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^class GitProcessor$/;"	c
GitProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^class GitProcessorTest extends TestCase$/;"	c
GroupHandler	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^class GroupHandler extends Handler implements ProcessableHandlerInterface$/;"	c
GroupHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^class GroupHandlerTest extends TestCase$/;"	c
Handler	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^abstract class Handler implements HandlerInterface$/;"	c
HandlerInterface	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^interface HandlerInterface$/;"	i
HandlerWrapper	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^class HandlerWrapper implements HandlerInterface, ProcessableHandlerInterface, FormattableHandlerInterface$/;"	c
HandlerWrapperTest	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^class HandlerWrapperTest extends TestCase$/;"	c
HasherInterface	vendor/flexihash/flexihash/src/Hasher/HasherInterface.php	/^interface HasherInterface$/;"	i
HasherTest	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^class HasherTest extends PHPUnit_Framework_TestCase$/;"	c
HipChatHandler	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^class HipChatHandler extends SocketHandler$/;"	c
HipChatHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^class HipChatHandlerTest extends TestCase$/;"	c
HtmlFormatter	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^class HtmlFormatter extends NormalizerFormatter$/;"	c
Http	app/Controllers/Http.php	/^class Http extends Controller$/;"	c
Http	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^class Http extends Base$/;"	c
HttpServer	vendor/pinguo/php-msf/src/HttpServer.php	/^abstract class HttpServer extends Server$/;"	c
IAsynPool	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^interface IAsynPool$/;"	i
IBase	vendor/pinguo/php-msf/src/Coroutine/IBase.php	/^interface IBase$/;"	i
IFTTTHandler	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^class IFTTTHandler extends AbstractProcessingHandler$/;"	c
IOCallBack	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public $IOCallBack = [];$/;"	v
IPack	vendor/pinguo/php-msf/src/Pack/IPack.php	/^interface IPack$/;"	i
IProxy	vendor/pinguo/php-msf/src/Proxy/IProxy.php	/^interface IProxy$/;"	i
IRoute	vendor/pinguo/php-msf/src/Route/IRoute.php	/^interface IRoute$/;"	i
Idallloc	app/Tasks/Idallloc.php	/^class Idallloc extends MongoDbTask$/;"	c
IndexInfo	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^class IndexInfo implements ArrayAccess$/;"	c
IndexInfoIterator	vendor/mongodb/mongodb/src/Model/IndexInfoIterator.php	/^interface IndexInfoIterator extends Iterator$/;"	i
IndexInfoIteratorIterator	vendor/mongodb/mongodb/src/Model/IndexInfoIteratorIterator.php	/^class IndexInfoIteratorIterator extends IteratorIterator implements IndexInfoIterator$/;"	c
IndexInfoTest	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^class IndexInfoTest extends TestCase$/;"	c
IndexInput	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^class IndexInput implements Serializable$/;"	c
IndexInputTest	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^class IndexInputTest extends TestCase$/;"	c
Ini	vendor/hassankhan/config/src/FileParser/Ini.php	/^class Ini implements FileParserInterface$/;"	c
Inotify	vendor/pinguo/php-msf/src/Process/Inotify.php	/^class Inotify extends ProcessBase$/;"	c
Input	vendor/pinguo/php-msf/src/Base/Input.php	/^class Input extends Core$/;"	c
InsertMany	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^class InsertMany implements Executable$/;"	c
InsertManyFunctionalTest	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^class InsertManyFunctionalTest extends FunctionalTestCase$/;"	c
InsertManyResult	vendor/mongodb/mongodb/src/InsertManyResult.php	/^class InsertManyResult$/;"	c
InsertManyTest	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^class InsertManyTest extends TestCase$/;"	c
InsertOne	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^class InsertOne implements Executable$/;"	c
InsertOneFunctionalTest	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^class InsertOneFunctionalTest extends FunctionalTestCase$/;"	c
InsertOneResult	vendor/mongodb/mongodb/src/InsertOneResult.php	/^class InsertOneResult$/;"	c
InsertOneTest	vendor/mongodb/mongodb/tests/Operation/InsertOneTest.php	/^class InsertOneTest extends TestCase$/;"	c
IntrospectionProcessor	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^class IntrospectionProcessor$/;"	c
IntrospectionProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^class IntrospectionProcessorTest extends TestCase$/;"	c
InvalidArgumentException	vendor/mongodb/mongodb/src/Exception/InvalidArgumentException.php	/^class InvalidArgumentException extends \\MongoDB\\Driver\\Exception\\InvalidArgumentException implements Exception$/;"	c
InvalidArgumentException	vendor/psr/log/Psr/Log/InvalidArgumentException.php	/^class InvalidArgumentException extends \\InvalidArgumentException$/;"	c
Json	vendor/hassankhan/config/src/FileParser/Json.php	/^class Json implements FileParserInterface$/;"	c
JsonFormatter	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^class JsonFormatter extends NormalizerFormatter$/;"	c
JsonFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^class JsonFormatterTest extends TestCase$/;"	c
JsonPack	vendor/pinguo/php-msf/src/Pack/JsonPack.php	/^class JsonPack implements IPack$/;"	c
LineFormatter	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^class LineFormatter extends NormalizerFormatter$/;"	c
LineFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class LineFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
ListCollections	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^class ListCollections implements Executable$/;"	c
ListCollectionsFunctionalTest	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^class ListCollectionsFunctionalTest extends FunctionalTestCase$/;"	c
ListDatabases	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^class ListDatabases implements Executable$/;"	c
ListDatabasesTest	vendor/mongodb/mongodb/tests/Operation/ListDatabasesTest.php	/^class ListDatabasesTest extends TestCase$/;"	c
ListIndexes	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^class ListIndexes implements Executable$/;"	c
ListIndexesFunctionalTest	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^class ListIndexesFunctionalTest extends FunctionalTestCase$/;"	c
ListIndexesTest	vendor/mongodb/mongodb/tests/Operation/ListIndexesTest.php	/^class ListIndexesTest extends TestCase$/;"	c
LogEntriesHandler	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^class LogEntriesHandler extends SocketHandler$/;"	c
LogEntriesHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^class LogEntriesHandlerTest extends TestCase$/;"	c
LogLevel	vendor/psr/log/Psr/Log/LogLevel.php	/^class LogLevel$/;"	c
Logger	vendor/monolog/monolog/src/Monolog/Logger.php	/^class Logger implements LoggerInterface$/;"	c
LoggerAwareInterface	vendor/psr/log/Psr/Log/LoggerAwareInterface.php	/^interface LoggerAwareInterface$/;"	i
LoggerInterface	vendor/psr/log/Psr/Log/LoggerInterface.php	/^interface LoggerInterface$/;"	i
LoggerInterfaceTest	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^abstract class LoggerInterfaceTest extends \\PHPUnit_Framework_TestCase$/;"	c
LoggerTest	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^class LoggerTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
LogglyFormatter	vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^class LogglyFormatter extends JsonFormatter$/;"	c
LogglyFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^class LogglyFormatterTest extends TestCase$/;"	c
LogglyHandler	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^class LogglyHandler extends AbstractProcessingHandler$/;"	c
LogmaticFormatter	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^class LogmaticFormatter extends JsonFormatter$/;"	c
LogmaticFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/LogmaticFormatterTest.php	/^class LogmaticFormatterTest extends TestCase$/;"	c
LogmaticHandler	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^class LogmaticHandler extends SocketHandler$/;"	c
LogmaticHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^class LogmaticHandlerTest extends TestCase$/;"	c
LogstashFormatter	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^class LogstashFormatter extends NormalizerFormatter$/;"	c
LogstashFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^class LogstashFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
MSFCli	vendor/pinguo/php-msf/src/MSFCli.php	/^class MSFCli extends MSFServer$/;"	c
MSFServer	vendor/pinguo/php-msf/src/MSFServer.php	/^abstract class MSFServer extends HttpServer$/;"	c
MSFServer	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^        $this->MSFServer              = $MSFServer;$/;"	v
MSFServer	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^    public $MSFServer;$/;"	v
MSFSrcDir	vendor/pinguo/php-msf/src/Server.php	/^        $this->MSFSrcDir = __DIR__;$/;"	v
MSFSrcDir	vendor/pinguo/php-msf/src/Server.php	/^    public $MSFSrcDir;$/;"	v
MailHandler	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^abstract class MailHandler extends AbstractProcessingHandler$/;"	c
MailHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^class MailHandlerTest extends TestCase$/;"	c
MandrillHandler	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^class MandrillHandler extends MailHandler$/;"	c
Marco	vendor/pinguo/php-msf/src/Marco.php	/^class Marco$/;"	c
Md5Hasher	vendor/flexihash/flexihash/src/Hasher/Md5Hasher.php	/^class Md5Hasher implements HasherInterface$/;"	c
MemoryPeakUsageProcessor	vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^class MemoryPeakUsageProcessor extends MemoryProcessor$/;"	c
MemoryPeakUsageProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^class MemoryPeakUsageProcessorTest extends TestCase$/;"	c
MemoryProcessor	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^abstract class MemoryProcessor$/;"	c
MemoryUsageProcessor	vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^class MemoryUsageProcessor extends MemoryProcessor$/;"	c
MemoryUsageProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^class MemoryUsageProcessorTest extends TestCase$/;"	c
MercurialProcessor	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^class MercurialProcessor$/;"	c
MercurialProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^class MercurialProcessorTest extends TestCase$/;"	c
Miner	vendor/pinguo/php-msf/src/Pools/Miner.php	/^class Miner$/;"	c
MissingExtensionException	vendor/monolog/monolog/src/Monolog/Handler/MissingExtensionException.php	/^class MissingExtensionException extends \\Exception$/;"	c
MockHasher	vendor/flexihash/flexihash/tests/Hasher/MockHasher.php	/^class MockHasher implements HasherInterface$/;"	c
MockRavenClient	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^class MockRavenClient extends Raven_Client$/;"	c
MockRavenClient	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^class MockRavenClient extends Raven_Client$/;"	c
Model	vendor/pinguo/php-msf/src/Models/Model.php	/^class Model extends Core$/;"	c
Mongo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^class Mongo extends MongoClient$/;"	c
MongoBinData	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^class MongoBinData implements TypeInterface$/;"	c
MongoBinDataTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^class MongoBinDataTest extends TestCase$/;"	c
MongoClient	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^class MongoClient$/;"	c
MongoClientTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^class MongoClientTest extends TestCase$/;"	c
MongoCode	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^class MongoCode implements \\Alcaeus\\MongoDbAdapter\\TypeInterface$/;"	c
MongoCodeTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^class MongoCodeTest extends TestCase$/;"	c
MongoCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^class MongoCollection$/;"	c
MongoCollectionTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^class MongoCollectionTest extends TestCase$/;"	c
MongoCommandCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^class MongoCommandCursor extends AbstractCursor implements MongoCursorInterface$/;"	c
MongoCommandCursorTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^class MongoCommandCursorTest extends TestCase$/;"	c
MongoConnectionException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoConnectionException.php	/^class MongoConnectionException extends MongoException$/;"	c
MongoCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^class MongoCursor extends AbstractCursor implements Iterator$/;"	c
MongoCursorException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorException.php	/^class MongoCursorException extends MongoException$/;"	c
MongoCursorInterface	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^interface MongoCursorInterface extends Iterator$/;"	i
MongoCursorTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^class MongoCursorTest extends TestCase$/;"	c
MongoCursorTimeoutException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorTimeoutException.php	/^class MongoCursorTimeoutException extends MongoCursorException$/;"	c
MongoDB	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^class MongoDB$/;"	c
MongoDBFormatter	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^class MongoDBFormatter implements FormatterInterface$/;"	c
MongoDBFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^class MongoDBFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
MongoDBHandler	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^class MongoDBHandler extends AbstractProcessingHandler$/;"	c
MongoDBHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^class MongoDBHandlerTest extends TestCase$/;"	c
MongoDBRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^class MongoDBRef$/;"	c
MongoDBRefTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^class MongoDBRefTest extends TestCase$/;"	c
MongoDBTest	app/Controllers/MongoDBTest.php	/^class MongoDBTest extends Controller$/;"	c
MongoDBTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^class MongoDBTest extends TestCase$/;"	c
MongoDate	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^class MongoDate implements TypeInterface$/;"	c
MongoDateTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^class MongoDateTest extends TestCase$/;"	c
MongoDbTask	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^class MongoDbTask extends Task$/;"	c
MongoDeleteBatch	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDeleteBatch.php	/^class MongoDeleteBatch extends MongoWriteBatch$/;"	c
MongoDeleteBatchTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^class MongoDeleteBatchTest extends TestCase$/;"	c
MongoDuplicateKeyException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDuplicateKeyException.php	/^class MongoDuplicateKeyException extends MongoWriteConcernException$/;"	c
MongoException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoException.php	/^class MongoException extends Exception$/;"	c
MongoExecutionTimeoutException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoExecutionTimeoutException.php	/^class MongoExecutionTimeoutException extends MongoException$/;"	c
MongoGridFS	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^class MongoGridFS extends MongoCollection$/;"	c
MongoGridFSCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^class MongoGridFSCursor extends MongoCursor$/;"	c
MongoGridFSCursorTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^class MongoGridFSCursorTest extends TestCase$/;"	c
MongoGridFSException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSException.php	/^class MongoGridFSException extends MongoException$/;"	c
MongoGridFSFile	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^class MongoGridFSFile$/;"	c
MongoGridFSFileTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^class MongoGridFSFileTest extends TestCase$/;"	c
MongoGridFSTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^class MongoGridFSTest extends TestCase$/;"	c
MongoId	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^class MongoId implements Serializable, TypeInterface, JsonSerializable$/;"	c
MongoIdTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^class MongoIdTest extends TestCase$/;"	c
MongoInsertBatch	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInsertBatch.php	/^class MongoInsertBatch extends MongoWriteBatch$/;"	c
MongoInsertBatchTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^class MongoInsertBatchTest extends TestCase$/;"	c
MongoInt32	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^class MongoInt32 implements TypeInterface$/;"	c
MongoInt64	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^class MongoInt64 implements TypeInterface$/;"	c
MongoLog	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^class MongoLog$/;"	c
MongoLogTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoLogTest.php	/^class MongoLogTest extends Testcase$/;"	c
MongoMaxKey	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoMaxKey.php	/^class MongoMaxKey implements TypeInterface$/;"	c
MongoMaxKeyTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMaxKeyTest.php	/^class MongoMaxKeyTest extends TestCase$/;"	c
MongoMinKey	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoMinKey.php	/^class MongoMinKey implements TypeInterface$/;"	c
MongoMinKeyTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMinKeyTest.php	/^class MongoMinKeyTest extends TestCase$/;"	c
MongoPool	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoPool.php	/^class MongoPool$/;"	c
MongoProtocolException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoProtocolException.php	/^class MongoProtocolException extends MongoException$/;"	c
MongoRegex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^class MongoRegex implements TypeInterface$/;"	c
MongoRegexTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^class MongoRegexTest extends TestCase$/;"	c
MongoResultException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoResultException.php	/^class MongoResultException extends MongoException$/;"	c
MongoTimestamp	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^class MongoTimestamp implements TypeInterface$/;"	c
MongoTimestampTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^class MongoTimestampTest extends TestCase$/;"	c
MongoUpdateBatch	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoUpdateBatch.php	/^class MongoUpdateBatch extends MongoWriteBatch$/;"	c
MongoUpdateBatchTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^class MongoUpdateBatchTest extends TestCase$/;"	c
MongoWriteBatch	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^class MongoWriteBatch$/;"	c
MongoWriteConcernException	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^class MongoWriteConcernException extends MongoCursorException$/;"	c
Monitor	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^class Monitor extends Controller$/;"	c
MsgPack	vendor/pinguo/php-msf/src/Pack/MsgPack.php	/^class MsgPack implements IPack$/;"	c
MySQL	app/Controllers/MySQL.php	/^class MySQL extends Controller$/;"	c
MySql	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^class MySql extends Base$/;"	c
MysqlAsynPool	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^class MysqlAsynPool extends AsynPool$/;"	c
MysqlProxyFactory	vendor/pinguo/php-msf/src/Proxy/MysqlProxyFactory.php	/^class MysqlProxyFactory$/;"	c
MysqlProxyMasterSlave	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^ * class MysqlProxyMasterSlave$/;"	c
MysqlProxyMasterSlave	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^class MysqlProxyMasterSlave implements IProxy$/;"	c
Name	vendor/pinguo/plates/src/Template/Name.php	/^class Name$/;"	c
NativeMailerHandler	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^class NativeMailerHandler extends MailHandler$/;"	c
NativeMailerHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^class NativeMailerHandlerTest extends TestCase$/;"	c
NewRelicHandler	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^class NewRelicHandler extends AbstractProcessingHandler$/;"	c
NewRelicHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class NewRelicHandlerTest extends TestCase$/;"	c
NoopHandler	vendor/monolog/monolog/src/Monolog/Handler/NoopHandler.php	/^class NoopHandler extends Handler$/;"	c
NoopHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/NoopHandlerTest.php	/^class NoopHandlerTest extends TestCase$/;"	c
NormalRoute	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^class NormalRoute implements IRoute$/;"	c
NormalizerFormatter	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^class NormalizerFormatter implements FormatterInterface$/;"	c
NormalizerFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class NormalizerFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
NullHandler	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^class NullHandler extends Handler$/;"	c
NullHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^class NullHandlerTest extends TestCase$/;"	c
NullLogger	vendor/psr/log/Psr/Log/NullLogger.php	/^class NullLogger extends AbstractLogger$/;"	c
Output	vendor/pinguo/php-msf/src/Base/Output.php	/^class Output extends Core$/;"	c
PGLog	vendor/pinguo/php-context/src/AbstractContext.php	/^        $this->PGLog = $log;$/;"	v
PGLog	vendor/pinguo/php-context/src/AbstractContext.php	/^    protected $PGLog;$/;"	v
PGLog	vendor/pinguo/php-log/src/PGLog.php	/^class PGLog extends Logger$/;"	c
PGLog	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->PGLog          = null;$/;"	v
PGLog	vendor/pinguo/php-msf/src/HttpServer.php	/^        $PGLog            = clone getInstance()->log;$/;"	v
PGLog	vendor/pinguo/php-msf/src/MSFCli.php	/^        $PGLog            = clone getInstance()->log;$/;"	v
PGLog	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $PGLog                            = clone getInstance()->log;$/;"	v
PGLog	vendor/pinguo/php-msf/src/Server.php	/^        $PGLog   = clone getInstance()->log;$/;"	v
PGLog	vendor/pinguo/php-msf/src/Server.php	/^        $PGLog   = null;$/;"	v
PGStreamHandler	vendor/pinguo/php-log/src/Handler/PGStreamHandler.php	/^class PGStreamHandler extends StreamHandler$/;"	c
PHPConsoleHandler	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^class PHPConsoleHandler extends AbstractProcessingHandler$/;"	c
PHPConsoleHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^class PHPConsoleHandlerTest extends TestCase$/;"	c
ParseException	vendor/hassankhan/config/src/Exception/ParseException.php	/^class ParseException extends ErrorException$/;"	c
PdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                        $PdoConnection = $this->getPdoConnection();$/;"	v
PdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $PdoConnection = $this->getPdoConnection();$/;"	v
PdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->PdoConnection = $PdoConnection;$/;"	v
PdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $PdoConnection;$/;"	v
PdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function setPdoConnection(\\PDO $PdoConnection = null)$/;"	v
PdoStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                        $PdoStatement = $PdoConnection->prepare($statement);$/;"	v
PdoStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $PdoStatement = @$PdoConnection->prepare($statement);$/;"	v
PdoStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $PdoStatement = null;$/;"	v
PedantryTest	vendor/mongodb/mongodb/tests/PedantryTest.php	/^class PedantryTest extends \\PHPUnit_Framework_TestCase$/;"	c
Php	vendor/hassankhan/config/src/FileParser/Php.php	/^class Php implements FileParserInterface$/;"	c
Pool	vendor/pinguo/php-msf/src/Base/Pool.php	/^class Pool$/;"	c
PrivatePropertiesStub	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^class PrivatePropertiesStub$/;"	c
ProcessBase	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^abstract class ProcessBase$/;"	c
ProcessHandler	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^class ProcessHandler extends AbstractProcessingHandler$/;"	c
ProcessHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^class ProcessHandlerTest extends TestCase$/;"	c
ProcessIdProcessor	vendor/monolog/monolog/src/Monolog/Processor/ProcessIdProcessor.php	/^class ProcessIdProcessor$/;"	c
ProcessIdProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^class ProcessIdProcessorTest extends TestCase$/;"	c
ProcessableHandlerInterface	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerInterface.php	/^interface ProcessableHandlerInterface$/;"	i
PsrHandler	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^class PsrHandler extends AbstractHandler$/;"	c
PsrHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^class PsrHandlerTest extends TestCase$/;"	c
PsrLogCompatTest	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^class PsrLogCompatTest extends LoggerInterfaceTest$/;"	c
PsrLogMessageProcessor	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^class PsrLogMessageProcessor$/;"	c
PsrLogMessageProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^class PsrLogMessageProcessorTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
PushoverHandler	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^class PushoverHandler extends SocketHandler$/;"	c
PushoverHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^class PushoverHandlerTest extends TestCase$/;"	c
ROOT_PATH	console.php	/^define('ROOT_PATH', __DIR__);$/;"	d
ROOT_PATH	server.php	/^define('ROOT_PATH', __DIR__);$/;"	d
RUNTIME_DIR	console.php	/^define('RUNTIME_DIR', WWW_DIR . '\/runtime\/' . SYSTEM_NAME);$/;"	d
RUNTIME_DIR	server.php	/^define('RUNTIME_DIR', WWW_DIR . '\/runtime\/' . SYSTEM_NAME);$/;"	d
RavenHandler	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^class RavenHandler extends AbstractProcessingHandler$/;"	c
RavenHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^class RavenHandlerTest extends TestCase$/;"	c
ReadableStream	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^class ReadableStream$/;"	c
ReadableStreamFunctionalTest	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^class ReadableStreamFunctionalTest extends FunctionalTestCase$/;"	c
Redis	app/Controllers/Redis.php	/^class Redis extends Controller$/;"	c
Redis	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^class Redis extends Base$/;"	c
RedisAsynPool	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^class RedisAsynPool extends AsynPool$/;"	c
RedisHandler	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^class RedisHandler extends AbstractProcessingHandler$/;"	c
RedisHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^class RedisHandlerTest extends TestCase$/;"	c
RedisProxyCluster	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^class RedisProxyCluster extends Flexihash implements IProxy$/;"	c
RedisProxyFactory	vendor/pinguo/php-msf/src/Proxy/RedisProxyFactory.php	/^class RedisProxyFactory$/;"	c
RedisProxyMasterSlave	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^class RedisProxyMasterSlave implements IProxy$/;"	c
Registry	vendor/monolog/monolog/src/Monolog/Registry.php	/^class Registry$/;"	c
RegistryTest	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^class RegistryTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
ReplaceOne	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^class ReplaceOne implements Executable$/;"	c
ReplaceOneTest	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^class ReplaceOneTest extends TestCase$/;"	c
Request	vendor/pinguo/php-msf/src/Console/Request.php	/^class Request$/;"	c
Rest	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^class Rest extends Controller$/;"	c
RestRoute	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^class RestRoute extends NormalRoute$/;"	c
RollbarHandler	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^class RollbarHandler extends AbstractProcessingHandler$/;"	c
RollbarHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^class RollbarHandlerTest extends TestCase$/;"	c
RotatingFileHandler	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^class RotatingFileHandler extends StreamHandler$/;"	c
RotatingFileHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^class RotatingFileHandlerTest extends TestCase$/;"	c
Rpc	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^class Rpc extends Controller$/;"	c
RpcClient	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^class RpcClient extends Core$/;"	c
RpcTest	app/Controllers/RpcTest.php	/^class RpcTest extends Controller$/;"	c
RuntimeException	vendor/mongodb/mongodb/src/Exception/RuntimeException.php	/^class RuntimeException extends \\MongoDB\\Driver\\Exception\\RuntimeException implements Exception$/;"	c
SYSTEM_NAME	console.php	/^define('SYSTEM_NAME', 'demo');$/;"	d
SYSTEM_NAME	server.php	/^define('SYSTEM_NAME', 'demo');$/;"	d
SamplingHandler	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^class SamplingHandler extends AbstractHandler implements ProcessableHandlerInterface$/;"	c
SamplingHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^class SamplingHandlerTest extends TestCase$/;"	c
ScalarFormatter	vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^class ScalarFormatter extends NormalizerFormatter$/;"	c
ScalarFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^class ScalarFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
Scheduler	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^class Scheduler$/;"	c
SendGridHandler	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^class SendGridHandler extends MailHandler$/;"	c
SerializePack	vendor/pinguo/php-msf/src/Pack/SerializePack.php	/^class SerializePack implements IPack$/;"	c
Server	vendor/pinguo/php-msf/src/Server.php	/^abstract class Server extends Child$/;"	c
SlackHandler	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^class SlackHandler extends SocketHandler$/;"	c
SlackHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^class SlackHandlerTest extends TestCase$/;"	c
SlackRecord	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^class SlackRecord$/;"	c
SlackRecordTest	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^class SlackRecordTest extends TestCase$/;"	c
SlackWebhookHandler	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^class SlackWebhookHandler extends AbstractProcessingHandler$/;"	c
SlackWebhookHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^class SlackWebhookHandlerTest extends TestCase$/;"	c
SlackbotHandler	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^class SlackbotHandler extends AbstractProcessingHandler$/;"	c
SlackbotHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^class SlackbotHandlerTest extends TestCase$/;"	c
Sleep	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^class Sleep extends Base$/;"	c
SocketHandler	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^class SocketHandler extends AbstractProcessingHandler$/;"	c
SocketHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^class SocketHandlerTest extends TestCase$/;"	c
SpecFunctionalTest	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^class SpecFunctionalTest extends FunctionalTestCase$/;"	c
SqsHandler	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^class SqsHandler extends AbstractProcessingHandler$/;"	c
StreamHandler	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^class StreamHandler extends AbstractProcessingHandler$/;"	c
StreamHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^class StreamHandlerTest extends TestCase$/;"	c
StreamWrapper	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^class StreamWrapper$/;"	c
StreamWrapperFunctionalTest	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^class StreamWrapperFunctionalTest extends FunctionalTestCase$/;"	c
StubNewRelicHandler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class StubNewRelicHandler extends NewRelicHandler$/;"	c
StubNewRelicHandlerWithoutExtension	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^class StubNewRelicHandlerWithoutExtension extends NewRelicHandler$/;"	c
Sum	app/Models/Handlers/Sum.php	/^class Sum extends Model$/;"	c
SwiftMailerHandler	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^class SwiftMailerHandler extends MailHandler$/;"	c
SwiftMailerHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^class SwiftMailerHandlerTest extends TestCase$/;"	c
SyslogHandler	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^class SyslogHandler extends AbstractSyslogHandler$/;"	c
SyslogHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^class SyslogHandlerTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
SyslogUdpHandler	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^class SyslogUdpHandler extends AbstractSyslogHandler$/;"	c
SyslogUdpHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^class SyslogUdpHandlerTest extends TestCase$/;"	c
TagProcessor	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^class TagProcessor$/;"	c
TagProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^class TagProcessorTest extends TestCase$/;"	c
Task	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^class Task$/;"	c
Task	vendor/pinguo/php-msf/src/Tasks/Task.php	/^class Task extends TaskProxy$/;"	c
TaskProxy	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^class TaskProxy extends Core$/;"	c
Template	vendor/pinguo/plates/src/Template/Template.php	/^class Template$/;"	c
TestBar	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class TestBar$/;"	c
TestBarNorm	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestBarNorm$/;"	c
TestCase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^abstract class TestCase extends BaseTestCase$/;"	c
TestCase	vendor/mongodb/mongodb/tests/Operation/TestCase.php	/^abstract class TestCase extends BaseTestCase$/;"	c
TestCase	vendor/mongodb/mongodb/tests/TestCase.php	/^abstract class TestCase extends \\PHPUnit_Framework_TestCase$/;"	c
TestCase	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^class TestCase extends \\PHPUnit\\Framework\\TestCase$/;"	c
TestChromePHPHandler	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^class TestChromePHPHandler extends ChromePHPHandler$/;"	c
TestFirePHPHandler	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^class TestFirePHPHandler extends FirePHPHandler$/;"	c
TestFoo	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^class TestFoo$/;"	c
TestFooNorm	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestFooNorm$/;"	c
TestHandler	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^class TestHandler extends AbstractProcessingHandler$/;"	c
TestHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^class TestHandlerTest extends TestCase$/;"	c
TestStreamFoo	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestStreamFoo$/;"	c
TestToStringError	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^class TestToStringError$/;"	c
Tester	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^class Tester$/;"	c
Timer	vendor/pinguo/php-msf/src/Process/Timer.php	/^class Timer extends ProcessBase$/;"	c
TypeConverter	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^class TypeConverter$/;"	c
TypeConverterTest	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^class TypeConverterTest extends TestCase$/;"	c
TypeInterface	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeInterface.php	/^interface TypeInterface$/;"	i
TypeMapArrayIterator	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^class TypeMapArrayIterator extends ArrayIterator$/;"	c
URI	vendor/pinguo/plates/src/Extension/URI.php	/^class URI implements ExtensionInterface$/;"	c
UdpSocket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^class UdpSocket$/;"	c
UdpSocketTest	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^class UdpSocketTest extends TestCase$/;"	c
UidProcessor	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^class UidProcessor$/;"	c
UidProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^class UidProcessorTest extends TestCase$/;"	c
UnexpectedValueException	vendor/mongodb/mongodb/src/Exception/UnexpectedValueException.php	/^class UnexpectedValueException extends \\MongoDB\\Driver\\Exception\\UnexpectedValueException implements Exception$/;"	c
UnsupportedException	vendor/mongodb/mongodb/src/Exception/UnsupportedException.php	/^class UnsupportedException extends RuntimeException$/;"	c
UnsupportedFormatException	vendor/hassankhan/config/src/Exception/UnsupportedFormatException.php	/^class UnsupportedFormatException extends Exception$/;"	c
Update	vendor/mongodb/mongodb/src/Operation/Update.php	/^class Update implements Executable$/;"	c
UpdateFunctionalTest	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^class UpdateFunctionalTest extends FunctionalTestCase$/;"	c
UpdateMany	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^class UpdateMany implements Executable$/;"	c
UpdateManyTest	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^class UpdateManyTest extends TestCase$/;"	c
UpdateOne	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^class UpdateOne implements Executable$/;"	c
UpdateOneTest	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^class UpdateOneTest extends TestCase$/;"	c
UpdateResult	vendor/mongodb/mongodb/src/UpdateResult.php	/^class UpdateResult$/;"	c
UpdateTest	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^class UpdateTest extends TestCase$/;"	c
Util	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^class Util$/;"	c
WWW_DIR	console.php	/^define("WWW_DIR", realpath(dirname(__FILE__) . '\/..'));$/;"	d
WWW_DIR	server.php	/^define("WWW_DIR", realpath(dirname(__FILE__) . '\/..'));$/;"	d
WebProcessor	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^class WebProcessor$/;"	c
WebProcessorTest	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^class WebProcessorTest extends TestCase$/;"	c
Welcome	app/Controllers/Welcome.php	/^class Welcome extends Controller$/;"	c
WhatFailureGroupHandler	vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^class WhatFailureGroupHandler extends GroupHandler$/;"	c
WhatFailureGroupHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^class WhatFailureGroupHandlerTest extends TestCase$/;"	c
WildfireFormatter	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^class WildfireFormatter extends NormalizerFormatter$/;"	c
WildfireFormatterTest	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^class WildfireFormatterTest extends \\PHPUnit\\Framework\\TestCase$/;"	c
Wrapper	vendor/pinguo/php-aop/src/Wrapper.php	/^class Wrapper$/;"	c
WritableStream	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^class WritableStream$/;"	c
WritableStreamFunctionalTest	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^class WritableStreamFunctionalTest extends FunctionalTestCase$/;"	c
Xml	vendor/hassankhan/config/src/FileParser/Xml.php	/^class Xml implements FileParserInterface$/;"	c
Yaml	vendor/hassankhan/config/src/FileParser/Yaml.php	/^class Yaml implements FileParserInterface$/;"	c
ZendMonitorHandler	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^class ZendMonitorHandler extends AbstractProcessingHandler$/;"	c
ZendMonitorHandlerTest	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^class ZendMonitorHandlerTest extends TestCase$/;"	c
__DSLevel	vendor/pinguo/php-aop/src/MI.php	/^    public $__DSLevel;$/;"	v
____GLOBAL_DUMP	vendor/pinguo/php-msf/src/Helpers/Common.php	/^        $____GLOBAL_DUMP = '';$/;"	v
____GLOBAL_DUMP	vendor/pinguo/php-msf/src/Helpers/Common.php	/^$____GLOBAL_DUMP = '';$/;"	v
__call	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function __call($method, $args)$/;"	f
__call	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function __call($method, $arguments)$/;"	f
__call	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function __call($method, $args)$/;"	f
__call	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function __call(string $name, array $arguments)$/;"	f
__call	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function __call($name, $arguments)$/;"	f
__call	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function __call(string $name, $arguments)$/;"	f
__call	vendor/pinguo/php-msf/src/Server.php	/^    public function __call($name, $arguments)$/;"	f
__call	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function __call($name, $arguments)$/;"	f
__call	vendor/pinguo/plates/src/Template/Template.php	/^    public function __call($name, $arguments)$/;"	f
__callStatic	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function __callStatic($name, $arguments)$/;"	f
__construct	app/Models/Demo.php	/^    public function __construct($pro1, $pro2)$/;"	f
__construct	app/Models/Handlers/Sum.php	/^    public function __construct($a = 0)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function __construct(\\MongoClient $connection, $ns)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function __construct()$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public function __construct($data, $type = 2)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function __construct($server = 'default', array $options = ['connect' => true], array $driverOptions = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    public function __construct($code, array $scope = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function __construct(MongoDB $db, $name)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    public function __construct(MongoClient $connection, $ns, array $command = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function __construct(MongoClient $connection, $ns, array $query = array(), array $fields = array())$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function __construct(MongoClient $conn, $name)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public function __construct($sec = 0, $usec = 0)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDeleteBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function __construct(MongoDB $db, $prefix = "fs", $chunks = null)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    public function __construct(MongoGridFS $gridfs, MongoClient $connection, $ns, array $query = array(), array $fields = array())$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function __construct(MongoGridFS $gridfs, array $file)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __construct($id = null)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInsertBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^    public function __construct($value)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^    public function __construct($value)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^    public function __construct($regex)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public function __construct($sec = 0, $inc = 0)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoUpdateBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    protected function __construct(MongoCollection $collection, $batchType, $writeOptions)$/;"	f
__construct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^    public function __construct($message = '', $code = 0, Exception $previous = null, $document = null)$/;"	f
__construct	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function __construct(HasherInterface $hasher = null, $replicas = null)$/;"	f
__construct	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function __construct(array $data)$/;"	f
__construct	vendor/hassankhan/config/src/Config.php	/^    public function __construct($path)$/;"	f
__construct	vendor/hassankhan/config/src/Exception/ParseException.php	/^    public function __construct(array $error)$/;"	f
__construct	vendor/hassankhan/config/src/FileParser/AbstractFileParser.php	/^    public function __construct($path)$/;"	f
__construct	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function __construct(WriteResult $writeResult, array $insertedIds)$/;"	f
__construct	vendor/mongodb/mongodb/src/Client.php	/^    public function __construct($uri = 'mongodb:\/\/127.0.0.1\/', array $uriOptions = [], array $driverOptions = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Collection.php	/^    public function __construct(Manager $manager, $databaseName, $collectionName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Database.php	/^    public function __construct(Manager $manager, $databaseName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/DeleteResult.php	/^    public function __construct(WriteResult $writeResult)$/;"	f
__construct	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function __construct(Manager $manager, $databaseName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function __construct(Manager $manager, $databaseName, $bucketName, array $collectionOptions = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function __construct(CollectionWrapper $collectionWrapper, stdClass $file)$/;"	f
__construct	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function __construct(CollectionWrapper $collectionWrapper, $filename, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    public function __construct(WriteResult $writeResult, array $insertedIds)$/;"	f
__construct	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    public function __construct(WriteResult $writeResult, $insertedId)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public function __construct($input = [], $flags = ArrayObject::ARRAY_AS_PROPS, $iterator_class = 'ArrayIterator')$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function __construct(array $info)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^    public function __construct(Traversable $iterator)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    public function __construct(array $info)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function __construct(array $databases)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function __construct(array $info)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^    public function __construct(array $index)$/;"	f
__construct	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^    public function __construct(array $documents = [], array $typeMap)$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    public function __construct($databaseName, $collectionName, array $pipeline, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    public function __construct($databaseName, $collectionName, array $operations, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Count.php	/^    public function __construct($databaseName, $collectionName, $filter = [], array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    public function __construct($databaseName, $collectionName, array $indexes, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    public function __construct($databaseName, $command, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    public function __construct($databaseName, $collectionName, $filter, $limit, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    public function __construct($databaseName, $collectionName, $fieldName, $filter = [], array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    public function __construct($databaseName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    public function __construct($databaseName, $collectionName, $indexName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Find.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    public function __construct($databaseName, $collectionName, array $options)$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^    public function __construct($databaseName, $collectionName, $filter, $replacement, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    public function __construct($databaseName, $collectionName, array $documents, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    public function __construct($databaseName, $collectionName, $document, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    public function __construct($databaseName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^    public function __construct(array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^    public function __construct($databaseName, $collectionName, $filter, $replacement, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/Update.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	f
__construct	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function __construct(WriteResult $writeResult)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^    public function __construct($useMicroseconds, \\DateTimeZone $timezone = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function __construct(LoggerInterface $logger)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function __construct(string $index, string $type)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function __construct(string $source, string $sourceEmail)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function __construct(bool $levelTag = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function __construct(string $systemName = null, string $extraPrefix = null, string $contextPrefix = 'ctxt_', int $maxLength = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function __construct(string $dateFormat = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function __construct(int $batchMode = self::BATCH_MODE_JSON, bool $appendNewline = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function __construct(string $format = null, string $dateFormat = null, bool $allowInlineLineBreaks = false, bool $ignoreEmptyContextAndExtra = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function __construct(int $batchMode = self::BATCH_MODE_NEWLINES, bool $appendNewline = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function __construct(string $applicationName, string $systemName = null, string $extraPrefix = null, string $contextPrefix = 'ctxt_')$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function __construct(int $maxNestingLevel = 3, bool $exceptionTraceAsString = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function __construct(string $dateFormat = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    public function __construct($facility = LOG_USER, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function __construct($exchange, $exchangeName = null, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __construct(HandlerInterface $handler, $bufferLimit = 0, $level = Logger::DEBUG, $bubble = true, $flushOnOverflow = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    public function __construct(array $options = [], $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    public function __construct($url, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function __construct(HandlerInterface $handler, $deduplicationStore = null, $deduplicationLevel = Logger::ERROR, $time = 60, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    public function __construct(CouchDBClient $client, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    public function __construct(DynamoDbClient $client, $table, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function __construct(Client $client, array $options = [], $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public function __construct($messageType = self::OPERATING_SYSTEM, $level = Logger::DEBUG, $bubble = true, $expandNewlines = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function __construct($handler, $minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function __construct($defaultActionLevel, $channelToActionLevel = [])$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    public function __construct($actionLevel)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function __construct($handler, $activationStrategy = null, $bufferSize = 0, $bubble = true, $stopBuffering = true, $passthruLevel = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function __construct($apiToken, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    public function __construct(PublisherInterface $publisher, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function __construct(array $handlers, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function __construct(HandlerInterface $handler)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function __construct($token, $room, $name = 'Monolog', $notify = false, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $format = 'text', $host = 'api.hipchat.com')$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function __construct($eventName, $secretKey, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    public function __construct($token, $useSSL = true, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    public function __construct(string $token, string $hostname = '', string $appname = '', bool $useSSL = true, $level = Logger::DEBUG, bool $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    public function __construct($apiKey, $message, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    public function __construct($mongodb, $database, $collection, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function __construct($to, $subject, $from, $level = Logger::ERROR, $bubble = true, $maxColumnWidth = 70)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    public function __construct($/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function __construct(int $level = Logger::DEBUG)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function __construct(array $options = [], Connector $connector = null, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    public function __construct(string $command, $level = Logger::DEBUG, bool $bubble = true, string $cwd = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function __construct(LoggerInterface $logger, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function __construct($token, $users, $title = null, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $highPriorityLevel = Logger::CRITICAL, $emergencyLevel = Logger::EMERGENCY, $retry = 30, $expire = 25200)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function __construct(Raven_Client $ravenClient, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    public function __construct($redis, string $key, $level = Logger::DEBUG, bool $bubble = true, int $capSize = 0)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function __construct(RollbarNotifier $rollbarNotifier, $level = Logger::ERROR, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function __construct($handler, $factor)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    public function __construct(string $apiUser, string $apiKey, string $from, $to, string $subject, int $level = Logger::ERROR, bool $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function __construct($channel = null, $username = null, $useAttachment = true, $userIcon = null, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array(), FormatterInterface $formatter = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function __construct($token, $channel, $username = null, $useAttachment = true, $iconEmoji = null, $level = Logger::CRITICAL, $bubble = true, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array())$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function __construct($webhookUrl, $channel = null, $username = null, $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeContextAndExtra = false, $level = Logger::CRITICAL, $bubble = true, array $excludeFields = array())$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    public function __construct($slackTeam, $token, $channel, $level = Logger::CRITICAL, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function __construct($connectionString, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^    public function __construct(SqsClient $sqsClient, $queueUrl, $level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    public function __construct(\\Swift_Mailer $mailer, $message, $level = Logger::ERROR, bool $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function __construct($ident, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $logopts = LOG_PID)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function __construct($ip, $port = 514)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function __construct($host, $port = 514, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $ident = 'php')$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function __construct(string $name, array $handlers = [], array $processors = [], DateTimeZone $timezone = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    public function __construct($level = Logger::DEBUG)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __construct($level = Logger::DEBUG, array $skipClassesPartials = [], int $skipStackFramesCount = 0)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    public function __construct(bool $realUsage = true, bool $useFormatting = true)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    public function __construct($level = Logger::DEBUG)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^    public function __construct(string $dateFormat = null)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __construct(array $tags = [])$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function __construct(int $length = 7)$/;"	f
__construct	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __construct($serverData = null, array $extraFields = null)$/;"	f
__construct	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function __construct($resource)$/;"	f
__construct	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function __construct($instance, $isClone = false)$/;"	f
__construct	vendor/pinguo/php-log/src/PGLog.php	/^    public function __construct($/;"	f
__construct	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function __construct($controller)$/;"	f
__construct	vendor/pinguo/php-msf/src/Base/Pool.php	/^    private function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function __construct($url = '', $timeout = 0, $headers = [])$/;"	f
__construct	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function __construct($service)$/;"	f
__construct	vendor/pinguo/php-msf/src/Console/Controller.php	/^    public function __construct($controllerName, $methodName)$/;"	f
__construct	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function __construct($controllerName, $methodName)$/;"	f
__construct	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public function __construct($controllerName, $methodName)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function __construct($timeout = 0)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/CNull.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^    public function __construct($taskProxyData, $id, $timeout)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public function __construct(Client $client, $timeout, $headers = [])$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Exception.php	/^    public function __construct($message, $code = 0, \\Exception $previous = null)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public function __construct(Client $client, $method, $path, $data, $timeout)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function __construct($_mysqlAsynPool, $_bind_id = null, $_sql = null)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public function __construct($redisAsynPool, $name, $arguments)$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function __construct(\\Generator $routine, Controller &$controller, callable $callBack = null)$/;"	f
__construct	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/MSFCli.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function __construct($config)$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function __construct($process, $swooleServer)$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function __construct(RedisAsynPool $redisAsynPool)$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function __construct($mysqlPool = null)$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function __construct($config, $active)$/;"	f
__construct	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function __construct($config, string $active)$/;"	f
__construct	vendor/pinguo/php-msf/src/Process/Config.php	/^    public function __construct(Conf $config, MSFServer $MSFServer)$/;"	f
__construct	vendor/pinguo/php-msf/src/Process/Inotify.php	/^    public function __construct(Conf $config, MSFServer $MSFServer)$/;"	f
__construct	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^    public function __construct(Conf $config, MSFServer $MSFServer)$/;"	f
__construct	vendor/pinguo/php-msf/src/Process/Timer.php	/^    public function __construct(Conf $config, MSFServer $MSFServer)$/;"	f
__construct	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function __construct(string $name, array $config)$/;"	f
__construct	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    public function __construct(string $name, array $config)$/;"	f
__construct	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    public function __construct(string $name, array $config)$/;"	f
__construct	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function __construct($controllerName, $methodName)$/;"	f
__construct	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Server.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Tasks/Task.php	/^    public function __construct()$/;"	f
__construct	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function __construct(...$args)$/;"	f
__construct	vendor/pinguo/plates/src/Engine.php	/^    public function __construct($directory = null, $fileExtension = 'php')$/;"	f
__construct	vendor/pinguo/plates/src/Extension/Asset.php	/^    public function __construct($path, $filenameMethod = false)$/;"	f
__construct	vendor/pinguo/plates/src/Extension/URI.php	/^    public function __construct($uri)$/;"	f
__construct	vendor/pinguo/plates/src/Template/Directory.php	/^    public function __construct($path = null)$/;"	f
__construct	vendor/pinguo/plates/src/Template/FileExtension.php	/^    public function __construct($fileExtension = 'php')$/;"	f
__construct	vendor/pinguo/plates/src/Template/Folder.php	/^    public function __construct($name, $path, $fallback = false)$/;"	f
__construct	vendor/pinguo/plates/src/Template/Func.php	/^    public function __construct($name, $callback)$/;"	f
__construct	vendor/pinguo/plates/src/Template/Name.php	/^    public function __construct(Engine $engine, $name)$/;"	f
__construct	vendor/pinguo/plates/src/Template/Template.php	/^    public function __construct(Engine $engine, $name)$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Client.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Collection.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Database.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    public function __debugInfo()$/;"	f
__debugInfo	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function __debugInfo()$/;"	f
__destruct	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __destruct()$/;"	f
__destruct	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^    public function __destruct()$/;"	f
__genTime	vendor/pinguo/php-msf/src/Base/Core.php	/^    public $__genTime;$/;"	v
__get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function __get($dbname)$/;"	f
__get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function __get($name)$/;"	f
__get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function __get($name)$/;"	f
__get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __get($name)$/;"	f
__get	vendor/mongodb/mongodb/src/Client.php	/^    public function __get($databaseName)$/;"	f
__get	vendor/mongodb/mongodb/src/Database.php	/^    public function __get($collectionName)$/;"	f
__get	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function __get($name)$/;"	f
__initialization	vendor/pinguo/php-msf/src/Tasks/Task.php	/^    public function __initialization($taskId, $workerPid, $taskName, $methodName, $context, $objectPool)$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/ProcessIdProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__invoke	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __invoke(array $record): array$/;"	f
__isContruct	vendor/pinguo/php-msf/src/Base/Core.php	/^    public $__isContruct = false;$/;"	v
__isContruct	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^            $this->__isContruct = false;$/;"	v
__isDestroy	vendor/pinguo/php-msf/src/Base/Core.php	/^            $this->__isDestroy = true;$/;"	v
__isDestroy	vendor/pinguo/php-msf/src/Base/Core.php	/^        $this->__isDestroy = false;$/;"	v
__isDestroy	vendor/pinguo/php-msf/src/Base/Core.php	/^    protected $__isDestroy = false;$/;"	v
__isEnd	vendor/pinguo/php-msf/src/Base/Output.php	/^        $this->__isEnd = true;$/;"	v
__isEnd	vendor/pinguo/php-msf/src/Base/Output.php	/^    public $__isEnd = false;$/;"	v
__isset	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __isset($name)$/;"	f
__reflections	vendor/pinguo/php-aop/src/MI.php	/^    public static $__reflections;$/;"	v
__serializeRequest	vendor/pinguo/php-msf/src/Base/Input.php	/^        $this->__serializeRequest          = new \\stdClass();$/;"	v
__serializeRequest	vendor/pinguo/php-msf/src/Base/Input.php	/^    public $__serializeRequest;$/;"	v
__set	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function __set($name, $value)$/;"	f
__set	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function __set($name, $value)$/;"	f
__set	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __set($name, $value)$/;"	f
__set	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function __set($name, $value)$/;"	f
__set_state	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public static function __set_state(array $props)$/;"	f
__set_state	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^    public static function __set_state(array $properties)$/;"	f
__set_state	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public static function __set_state(array $properties)$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    public function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function __sleep()$/;"	f
__sleep	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function __sleep()$/;"	f
__sleep	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^    public function __sleep()$/;"	f
__sleep	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function __sleep()$/;"	f
__sleep	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function __sleep()$/;"	f
__sleep	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function __sleep()$/;"	f
__sleep	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function __sleep()$/;"	f
__sleep	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function __sleep()$/;"	f
__sleepTime	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^        $this->__sleepTime = $mSec;$/;"	v
__sleepTime	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^    public $__sleepTime;$/;"	v
__supportAutoDestroy	vendor/pinguo/php-aop/src/MI.php	/^    public static function __supportAutoDestroy($className)$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^    public function __toString()$/;"	f
__toString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public function __toString()$/;"	f
__toString	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function __toString()$/;"	f
__toString	vendor/mongodb/mongodb/src/Client.php	/^    public function __toString()$/;"	f
__toString	vendor/mongodb/mongodb/src/Collection.php	/^    public function __toString()$/;"	f
__toString	vendor/mongodb/mongodb/src/Database.php	/^    public function __toString()$/;"	f
__toString	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^    public function __toString()$/;"	f
__toString	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^    public function __toString(): string$/;"	f
__toString	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function __toString()$/;"	f
__toString	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function __toString()$/;"	f
__toString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function __toString()$/;"	f
__toString	vendor/pinguo/plates/src/Template/Template.php	/^    public function __toString()$/;"	f
__toString	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function __toString()$/;"	f
__unset	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function __unset($name)$/;"	f
__unsleep	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function __unsleep()$/;"	f
__unsleep	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function __unsleep()$/;"	f
__unsleep	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function __unsleep()$/;"	f
__unsleep	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public function __unsleep()$/;"	f
__useCount	vendor/pinguo/php-msf/src/Base/Core.php	/^    public $__useCount;$/;"	v
__wakeup	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function __wakeup()$/;"	f
__wrapper	vendor/pinguo/php-msf/src/Base/Pool.php	/^    public $__wrapper;$/;"	v
_bind_id	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function __construct($_mysqlAsynPool, $_bind_id = null, $_sql = null)$/;"	v
_countings	vendor/pinguo/php-log/src/PGLog.php	/^        $this->_countings = [];$/;"	v
_countings	vendor/pinguo/php-log/src/PGLog.php	/^    protected $_countings = [];$/;"	v
_masterPid	vendor/pinguo/php-msf/src/Server.php	/^    protected static $_masterPid = 0;$/;"	v
_profileStacks	vendor/pinguo/php-log/src/PGLog.php	/^    protected $_profileStacks = [];$/;"	v
_profiles	vendor/pinguo/php-log/src/PGLog.php	/^        $this->_profiles = [];$/;"	v
_profiles	vendor/pinguo/php-log/src/PGLog.php	/^    protected $_profiles = [];$/;"	v
_pushlogs	vendor/pinguo/php-log/src/PGLog.php	/^        $this->_pushlogs = [];$/;"	v
_pushlogs	vendor/pinguo/php-log/src/PGLog.php	/^    protected $_pushlogs = [];$/;"	v
_startFile	vendor/pinguo/php-msf/src/Server.php	/^    protected static $_startFile = '';$/;"	v
_worker	vendor/pinguo/php-msf/src/Server.php	/^    protected static $_worker = null;$/;"	v
a	app/Models/Handlers/Sum.php	/^        $this->a = $a;$/;"	v
a	app/Models/Handlers/Sum.php	/^    public $a;$/;"	v
abort	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private function abort()$/;"	f
accept	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^    public function accept()$/;"	f
acceptEncoding	vendor/pinguo/php-msf/src/Base/Output.php	/^        $acceptEncoding = strtolower($this->request->header['accept-encoding'] ?? '');$/;"	v
acceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $acceptedLevels = array_map('Monolog\\Logger::toMonologLevel', $minLevelOrList);$/;"	v
acceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $acceptedLevels = array_values(array_filter(Logger::getLevels(), function ($level) use ($minLevelOrList, $maxLevel) {$/;"	v
acceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->acceptedLevels = array_flip($acceptedLevels);$/;"	v
acceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $acceptedLevels;$/;"	v
acceptedSchemes	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $acceptedSchemes = ['http', 'udp'];$/;"	v
accessRecord	vendor/pinguo/php-log/src/PGLog.php	/^    public $accessRecord = [];$/;"	v
act	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $act = $this->convertTypes($act, false);$/;"	v
actionBaiduIndexGet	app/Controllers/Http.php	/^    public function actionBaiduIndexGet()$/;"	f
actionBaiduIndexPost	app/Controllers/Http.php	/^    public function actionBaiduIndexPost()$/;"	f
actionBaiduIndexWithOutDNS	app/Controllers/Http.php	/^    public function actionBaiduIndexWithOutDNS()$/;"	f
actionBizLists	app/Controllers/MySQL.php	/^    public function actionBizLists()$/;"	f
actionCallBackMode	app/Controllers/CoroutineTest.php	/^    public function actionCallBackMode()$/;"	f
actionConcurrentBaiduIndex	app/Controllers/Http.php	/^    public function actionConcurrentBaiduIndex()$/;"	f
actionConcurrentSum	app/Controllers/RpcTest.php	/^    public function actionConcurrentSum()$/;"	f
actionCoroutineMode	app/Controllers/CoroutineTest.php	/^    public function actionCoroutineMode()$/;"	f
actionCreate	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionCreate()$/;"	f
actionDelete	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionDelete()$/;"	f
actionGetMockFromModel	app/Controllers/Demo.php	/^    public function actionGetMockFromModel()$/;"	f
actionGetMockIds	app/Controllers/Demo.php	/^    public function actionGetMockIds()$/;"	f
actionGetNewId	app/Controllers/MongoDBTest.php	/^    public function actionGetNewId()$/;"	f
actionGetSum	app/Controllers/RpcTest.php	/^    public function actionGetSum()$/;"	f
actionHttpCallBack	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    public function actionHttpCallBack()$/;"	f
actionHttpCoroutine	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    public function actionHttpCoroutine()$/;"	f
actionIndex	app/Controllers/Welcome.php	/^    public function actionIndex()$/;"	f
actionIndex	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^    public function actionIndex()$/;"	f
actionIndex	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionIndex()$/;"	f
actionIndex	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public function actionIndex(...$arguments)$/;"	f
actionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^        $this->actionLevel = Logger::toMonologLevel($actionLevel);$/;"	v
actionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    private $actionLevel;$/;"	v
actionMaserSlaveSetGet	app/Controllers/Redis.php	/^    public function actionMaserSlaveSetGet()$/;"	f
actionName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->actionName     = null;$/;"	v
actionName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->actionName = $actionName;$/;"	v
actionName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $actionName;$/;"	v
actionNested	app/Controllers/CoroutineTest.php	/^    public function actionNested()$/;"	f
actionOptions	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionOptions()$/;"	f
actionPoolSetGet	app/Controllers/Redis.php	/^    public function actionPoolSetGet()$/;"	f
actionProxy	app/Controllers/MySQL.php	/^    public function actionProxy()$/;"	f
actionProxySetGet	app/Controllers/Redis.php	/^    public function actionProxySetGet()$/;"	f
actionProxyTransaction	app/Controllers/MySQL.php	/^    public function actionProxyTransaction()$/;"	f
actionRedisGetCallBack	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    public function actionRedisGetCallBack()$/;"	f
actionRedisPoolGet	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    public function actionRedisPoolGet()$/;"	f
actionRedisPoolSet	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    public function actionRedisPoolSet()$/;"	f
actionRun	app/Console/Batch.php	/^    public function actionRun()$/;"	f
actionShowDB	app/Controllers/MySQL.php	/^    public function actionShowDB()$/;"	f
actionSleep	app/Controllers/Demo.php	/^    public function actionSleep()$/;"	f
actionSyncMySQLPoolTask	app/Controllers/MySQL.php	/^    public function actionSyncMySQLPoolTask()$/;"	f
actionSyncMySQLPoolTaskTransaction	app/Controllers/MySQL.php	/^    public function actionSyncMySQLPoolTaskTransaction()$/;"	f
actionSyncMySQLProxyTask	app/Controllers/MySQL.php	/^    public function actionSyncMySQLProxyTask()$/;"	f
actionSyncMySQLProxyTaskTransaction	app/Controllers/MySQL.php	/^    public function actionSyncMySQLProxyTaskTransaction()$/;"	f
actionTplView	app/Controllers/Demo.php	/^    public function actionTplView()$/;"	f
actionTransaction	app/Controllers/MySQL.php	/^    public function actionTransaction()$/;"	f
actionUnNested	app/Controllers/CoroutineTest.php	/^    public function actionUnNested()$/;"	f
actionUpdate	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionUpdate()$/;"	f
actionView	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^    public function actionView()$/;"	f
activate	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function activate()$/;"	f
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^ *   $activationStrategy = new ChannelLevelActivationStrategy($/;"	v
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $activationStrategy = new ErrorLevelActivationStrategy($activationStrategy);$/;"	v
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $activationStrategy = new ErrorLevelActivationStrategy(Logger::WARNING);$/;"	v
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->activationStrategy = $activationStrategy;$/;"	v
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $activationStrategy;$/;"	v
activationStrategy	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function __construct($handler, $activationStrategy = null, $bufferSize = 0, $bubble = true, $stopBuffering = true, $passthruLevel = null)$/;"	v
active	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $this->active         = $active;$/;"	v
active	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    private $active;$/;"	v
active	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $this->active = $active;$/;"	v
active	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    private $active;$/;"	v
activeConfig	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->activeConfig = $activeConfig;$/;"	v
activeConfig	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    protected $activeConfig;$/;"	v
activeConfig	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $activeConfig = $this->config['mysql'][$this->active];$/;"	v
activePoolName	vendor/pinguo/php-msf/src/Base/Core.php	/^        $activePoolName = $poolName;$/;"	v
activePools	vendor/pinguo/php-msf/src/MSFServer.php	/^                $activePools = explode(',', $activePools);$/;"	v
activePools	vendor/pinguo/php-msf/src/MSFServer.php	/^            $activePools = $this->config->get('mysql.active');$/;"	v
activePools	vendor/pinguo/php-msf/src/MSFServer.php	/^            $activePools = $this->config->get('redis.active');$/;"	v
activeProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^                $activeProxies = explode(',', $activeProxies);$/;"	v
activeProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^            $activeProxies = $this->config->get('mysql_proxy.active');$/;"	v
activeProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^            $activeProxies = $this->config->get('redis_proxy.active');$/;"	v
actual	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $actual = $handlerFormatter->format($record);$/;"	v
actual	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $actual = $processor($input);$/;"	v
actualChunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $actualChunkSize = strlen($this->buffer);$/;"	v
actualCollection	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^            $actualCollection = isset($outcome['collection']['name'])$/;"	v
actualDocuments	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^            $actualDocuments = iterator_to_array($actualDocuments);$/;"	v
add	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    public function add($item)$/;"	f
add	vendor/composer/ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	f
add	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function add($doc, $timeout = 2000, $w = 1, $fsync = false)$/;"	f
add	vendor/pinguo/plates/src/Template/Data.php	/^    public function add(array $data, $templates = null)$/;"	f
add	vendor/pinguo/plates/src/Template/Folders.php	/^    public function add($name, $path, $fallback = false)$/;"	f
add	vendor/pinguo/plates/src/Template/Functions.php	/^    public function add($name, $callback)$/;"	f
addAsynPool	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function addAsynPool($name, AsynPool $pool, $isRegister = false)$/;"	f
addClassMap	vendor/composer/ClassLoader.php	/^    public function addClassMap(array $classMap)$/;"	f
addData	vendor/pinguo/plates/src/Engine.php	/^    public function addData(array $data, $templates = null)$/;"	f
addExtraField	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function addExtraField(string $extraName, string $serverName): self$/;"	f
addFolder	vendor/pinguo/plates/src/Engine.php	/^    public function addFolder($name, $directory, $fallback = false)$/;"	f
addHeader	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function addHeader($headers)$/;"	f
addItem	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private function addItem(array $item)$/;"	f
addLogger	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function addLogger(Logger $logger, $name = null, $overwrite = false)$/;"	f
addMysqlProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function addMysqlProxy($name, $proxy)$/;"	f
addOption	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function addOption($key, $value)$/;"	f
addParameter	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function addParameter($parameters)$/;"	f
addPsr4	vendor/composer/ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	f
addRecord	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addRecord(int $level, string $message, array $context = []): bool$/;"	f
addRecord	vendor/pinguo/php-log/src/PGLog.php	/^    public function addRecord(int $level, string $message, array $context = []): bool$/;"	f
addRedisProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function addRedisProxy($name, $proxy)$/;"	f
addRow	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addRow(string $th, string $td = ' ', bool $escapeTd = true): string$/;"	f
addTag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function addTag($tag)$/;"	f
addTags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function addTags(array $tags = [])$/;"	f
addTarget	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function addTarget($target, $weight = 1)$/;"	f
addTargets	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function addTargets($targets, $weight = 1)$/;"	f
addTitle	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addTitle(string $title, int $level)$/;"	f
addTokenCallback	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function addTokenCallback($callback)$/;"	f
addTokenCallback	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function addTokenCallback($callback);$/;"	f
additionalKeys	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $additionalKeys = [$/;"	v
additional_headers	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^function mail($to, $subject, $message, $additional_headers = null, $additional_parameters = null)$/;"	v
addr	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $addr              = $conf['ip'] . ':' . $conf['port'] . ' ';$/;"	v
adds	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $adds = array_diff($newPools, $nowPools);$/;"	v
adds	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $adds = array_diff($newSlaves, $this->slaves);$/;"	v
adminDb	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $adminDb = $this->getCheckClient()->selectDatabase('admin');$/;"	v
agentsProvider	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public static function agentsProvider()$/;"	f
aggregate	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function aggregate(array $pipeline, array $op = [])$/;"	f
aggregate	vendor/mongodb/mongodb/src/Collection.php	/^    public function aggregate(array $pipeline, array $options = [])$/;"	f
aggregateCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function aggregateCursor(array $pipeline, array $options = [])$/;"	f
alert	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function alert($message, array $context = [])$/;"	f
alert	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function alert($message, array $context = array())$/;"	f
alert	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function alert($message, array $context = array());$/;"	f
alert	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function alert($message, array $context = array())$/;"	f
alias	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function from($table, $alias = null)$/;"	v
alias	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function select($column, $alias = null)$/;"	v
all	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function all()$/;"	f
all	vendor/hassankhan/config/src/ConfigInterface.php	/^    public function all();$/;"	f
allow	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function allowInlineLineBreaks(bool $allow = true)$/;"	v
allowInlineLineBreaks	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^            $this->allowInlineLineBreaks = true;$/;"	v
allowInlineLineBreaks	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->allowInlineLineBreaks = $allow;$/;"	v
allowInlineLineBreaks	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->allowInlineLineBreaks = $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function allowInlineLineBreaks(bool $allow = true)$/;"	f
allowPartialResults	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->allowPartialResults = $okay;$/;"	v
allowPartialResults	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $allowPartialResults;$/;"	v
and	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoPool.php	/^ * @deprecated The current (1.3.0+) releases of the driver no longer implements pooling. This class and its methods are therefore deprecated and should not be used.$/;"	c
and	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ * Inherit from this class and override handle() like this:$/;"	c
and	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^ * Implementors can extend the class and implement abstract methods to run this$/;"	c
andHaving	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function andHaving($column, $value, $operator = self::EQUALS, $quote = null)$/;"	f
andWhere	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function andWhere($column, $value, $operator = self::EQUALS, $quote = null)$/;"	f
apcuPrefix	vendor/composer/ClassLoader.php	/^        $this->apcuPrefix = function_exists('apcu_fetch') && ini_get('apc.enabled') ? $apcuPrefix : null;$/;"	v
apcuPrefix	vendor/composer/ClassLoader.php	/^    private $apcuPrefix;$/;"	v
api	vendor/monolog/monolog/src/Monolog/Registry.php	/^ * $api = new Monolog\\Logger('api');$/;"	v
apiA	app/Controllers/CoroutineTest.php	/^                            $apiA = $cli->body;$/;"	v
apiA	app/Controllers/CoroutineTest.php	/^                        $apiA = "";$/;"	v
apiB	app/Controllers/CoroutineTest.php	/^                                    $apiB = $cli->body;$/;"	v
apiB	app/Controllers/CoroutineTest.php	/^                                $apiB = "";$/;"	v
apiKey	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $this->apiKey = $apiKey;$/;"	v
apiKey	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected $apiKey;$/;"	v
apiKey	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $this->apiKey = $apiKey;$/;"	v
apiKey	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected $apiKey;$/;"	v
apiToken	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $this->apiToken = $apiToken;$/;"	v
apiToken	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected $apiToken;$/;"	v
apiUser	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $this->apiUser = $apiUser;$/;"	v
apiUser	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected $apiUser;$/;"	v
appName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $appName = null,$/;"	v
appName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->appName       = $appName;$/;"	v
appName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $appName;$/;"	v
appType	vendor/pinguo/php-aop/src/Factory.php	/^                    $appType = 'msf';$/;"	v
appType	vendor/pinguo/php-aop/src/Factory.php	/^                $appType = 'web';$/;"	v
appType	vendor/pinguo/php-aop/src/Factory.php	/^            $appType = php_sapi_name();$/;"	v
appendExtraFields	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    private function appendExtraFields(array $extra): array$/;"	f
appendNewline	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = $appendNewline;$/;"	v
appendNewline	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = $oldNewline;$/;"	v
appendNewline	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->appendNewline = false;$/;"	v
appendNewline	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $appendNewline;$/;"	v
appendNoticeLog	vendor/pinguo/php-log/src/PGLog.php	/^    public function appendNoticeLog()$/;"	f
appendRecord	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function appendRecord(array $record)$/;"	f
appendSection	vendor/pinguo/plates/src/Template/Template.php	/^        $this->appendSection = false;$/;"	v
appendSection	vendor/pinguo/plates/src/Template/Template.php	/^        $this->appendSection = true;$/;"	v
appendSection	vendor/pinguo/plates/src/Template/Template.php	/^    protected $appendSection;$/;"	v
application	vendor/monolog/monolog/src/Monolog/Registry.php	/^ * $application = new Monolog\\Logger('application');$/;"	v
applicationName	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->applicationName = $applicationName;$/;"	v
applicationName	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $applicationName;$/;"	v
applyConnectionOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private function applyConnectionOptions($server, array $options)$/;"	f
applyNewPool	vendor/pinguo/php-msf/src/Base/Pool.php	/^    private function applyNewPool($poolName)$/;"	f
applyOptionCallback	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCursorAppliesOptions($checkOptionCallback, \\Closure $applyOptionCallback = null)$/;"	v
apply_type_map_to_document	vendor/mongodb/mongodb/src/functions.php	/^function apply_type_map_to_document($document, array $typeMap)$/;"	f
appname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^        $this->appname = $appname;$/;"	v
appname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^    protected $appname = '';$/;"	v
appname	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^        $this->appname  = $appname;$/;"	v
appname	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    private $appname;$/;"	v
appname	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $appname;$/;"	v
are	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^ * Instances of this class are used to interact with a database.$/;"	c
arg	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                        $arg = $arguments[3];$/;"	v
arg	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $arg = $arguments;$/;"	v
argCount	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $argCount = count($arg);$/;"	v
args	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function execute($code, array $args = [])$/;"	v
args	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $args = [$uri];$/;"	v
args	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^            $args = current($operation);$/;"	v
args	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $args = [self::quote('font-weight: normal')];$/;"	v
args	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $args = func_get_args();$/;"	v
args	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $args = ['testToken', $useSSL, Logger::DEBUG, true];$/;"	v
args	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $args = ['testToken', 'testHostname', 'testAppname', $useSSL, Logger::DEBUG, true];$/;"	v
args	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $this->args   = $args;$/;"	v
args	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $args = [];$/;"	v
args	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function evalMock($context, string $script, array $args = array(), int $numKeys = 0)$/;"	v
args	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $args         = $arguments[2];$/;"	v
arguments	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->arguments      = $arguments;$/;"	v
arguments	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $arguments;$/;"	v
arguments	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                        $arguments = $arguments[0];$/;"	v
arguments	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                        $arguments = $arguments[1];$/;"	v
arguments	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $arguments = array_merge($arguments, $harray);$/;"	v
arguments	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $arguments = $data['arguments'];$/;"	v
arr	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $arr = current($result->toArray());$/;"	v
arr	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $arr = [$wrappedResource, $resource];$/;"	v
arrCounting	vendor/pinguo/php-log/src/PGLog.php	/^        $arrCounting = [];$/;"	v
arrKeys	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $arrKeys = empty($index2Key) ? $index2Key : $index2Key[$index];$/;"	v
arrOut	vendor/pinguo/php-log/src/PGLog.php	/^        $arrOut = [];$/;"	v
arrRedis	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $arrRedis = $this->getAllTargets();$/;"	v
arrRedis	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $arrRedis     = $index2Key = [];$/;"	v
array	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        $array = iterator_to_array($cursor);$/;"	v
array	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^        $array = new static;$/;"	v
array	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $array = BSONArray::__set_state($data);$/;"	v
array	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $array = new BSONArray($data);$/;"	v
arrayWithObjectId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^        $arrayWithObjectId = ['_id' => new \\MongoId('1234567890abcdef12345678')];$/;"	v
arrayWithObjectIdEncoded	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^        $arrayWithObjectIdEncoded = "FgAAAAdfaWQAEjRWeJCrze8SNFZ4AA==";$/;"	v
ascii	vendor/pinguo/php-msf/src/Server.php	/^        $ascii     = file_get_contents(__DIR__ . '\/..\/ascii.ui');$/;"	v
assembleMessage	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected function assembleMessage($line, $header)$/;"	f
assertCollectionCount	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function assertCollectionCount($namespace, $count)$/;"	f
assertCollectionDoesNotExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    private function assertCollectionDoesNotExist($collectionName)$/;"	f
assertCollectionDoesNotExist	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^    private function assertCollectionDoesNotExist($collectionName)$/;"	f
assertCollectionExists	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    private function assertCollectionExists($collectionName, $callback = null)$/;"	f
assertCommandSucceeded	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function assertCommandSucceeded($document)$/;"	f
assertContextContainsFormattedException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function assertContextContainsFormattedException($expected, $actual)$/;"	f
assertDatabaseDoesNotExist	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^    private function assertDatabaseDoesNotExist(Server $server, $databaseName)$/;"	f
assertDatabaseExists	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    private function assertDatabaseExists($databaseName, $callback = null)$/;"	f
assertEquivalentCollections	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function assertEquivalentCollections($expectedCollection, $actualCollection)$/;"	f
assertEquivalentCollections	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function assertEquivalentCollections($expectedCollection, $actualCollection, $actualResult)$/;"	f
assertErrorWasTriggered	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    private function assertErrorWasTriggered($code, $message)$/;"	f
assertIndexExists	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    private function assertIndexExists($collectionName, $indexName, $callback = null)$/;"	f
assertIndexExists	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    private function assertIndexExists($indexName, $callback = null)$/;"	f
assertIndexExists	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^    private function assertIndexExists($indexName, $callback = null)$/;"	f
assertSameDocument	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function assertSameDocument($expectedDocument, $actualDocument)$/;"	f
assertSameDocuments	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function assertSameDocuments(array $expectedDocuments, $actualDocuments)$/;"	f
assertSameObjectID	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function assertSameObjectID($expectedObjectID, $actualObjectID)$/;"	f
assertStreamContents	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    protected function assertStreamContents($expectedContents, $stream)$/;"	f
asyn	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $asyn = $this->registerDir[$data['asyn_name']];$/;"	v
asynCommand	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    private static $asynCommand = [$/;"	v
asynManager	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->asynManager  = $asynManager;$/;"	v
asynManager	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $asynManager;$/;"	v
asynPoolManager	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->asynPoolManager = new AsynPoolManager(null, $this);$/;"	v
asynPoolManager	vendor/pinguo/php-msf/src/MSFServer.php	/^            $this->asynPoolManager = new AsynPoolManager(null, $this);$/;"	v
asynPoolManager	vendor/pinguo/php-msf/src/MSFServer.php	/^    protected $asynPoolManager;$/;"	v
asynPools	vendor/pinguo/php-msf/src/MSFServer.php	/^        $asynPools = [];$/;"	v
asynPools	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->asynPools = $asynPools;$/;"	v
asynPools	vendor/pinguo/php-msf/src/MSFServer.php	/^    protected $asynPools = [];$/;"	v
asyncDnsLookup	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function asyncDnsLookup($callBack, array $headers = [])$/;"	f
attachment	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $attachment = array($/;"	v
attachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $attachment = $data['attachments'][0];$/;"	v
attributes	vendor/pinguo/php-aop/src/Wrapper.php	/^        $this->attributes   = [];$/;"	v
attributes	vendor/pinguo/php-aop/src/Wrapper.php	/^    private $attributes = [];$/;"	v
authenticate	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function authenticate($username, $password)$/;"	f
autoDestroy	vendor/pinguo/php-aop/src/MI.php	/^            $autoDestroy = [];$/;"	v
autoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $autoQuote = $this->getAutoQuote($criterion['quote']);$/;"	v
autoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $autoQuote = $this->getAutoQuote($set['quote']);$/;"	v
autoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->autoQuote = $autoQuote;$/;"	v
autoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $autoQuote;$/;"	v
autoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function autoQuote($value, $override = null)$/;"	f
awaitData	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->awaitData = $wait;$/;"	v
awaitData	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $awaitData;$/;"	v
awaitData	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function awaitData($wait = true)$/;"	f
backtrace	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^            $backtrace = $record['extra']['file'].' : '.$record['extra']['line'];$/;"	v
backtrace	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $backtrace = 'unknown';$/;"	v
backtrace	vendor/pinguo/php-msf/src/Server.php	/^        $backtrace        = debug_backtrace();$/;"	v
backup_original_files	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function repair($preserve_cloned_files = false, $backup_original_files = false)$/;"	v
bar	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $bar = new \\stdClass();$/;"	v
baseDir	vendor/composer/autoload_classmap.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	vendor/composer/autoload_files.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	vendor/composer/autoload_namespaces.php	/^$baseDir = dirname($vendorDir);$/;"	v
baseDir	vendor/composer/autoload_psr4.php	/^$baseDir = dirname($vendorDir);$/;"	v
basicAuth	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^            $basicAuth = sprintf('%s:%s@', $this->options['username'], $this->options['password']);$/;"	v
basicAuth	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $basicAuth = null;$/;"	v
basicCollectionName	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $basicCollectionName = $this->getCollectionName() . '.basic';$/;"	v
basicHash	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    private function basicHash($value, $targets)$/;"	f
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $batch = new \\MongoDeleteBatch($collection);$/;"	v
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $batch = new \\MongoDeleteBatch($this->getCollection());$/;"	v
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $batch = new \\MongoInsertBatch($collection);$/;"	v
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $batch = new \\MongoInsertBatch($this->getCollection());$/;"	v
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $batch = new \\MongoUpdateBatch($collection);$/;"	v
batch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $batch = new \\MongoUpdateBatch($this->getCollection());$/;"	v
batch	vendor/pinguo/plates/src/Template/Template.php	/^    public function batch($var, $functions)$/;"	f
batchAdd	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function batchAdd($/;"	f
batchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^            $this->batchFormatter = $this->getDefaultBatchFormatter();$/;"	v
batchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->batchFormatter = $formatter;$/;"	v
batchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $batchFormatter;$/;"	v
batchInsert	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function batchInsert(array &$a, array $options = [])$/;"	f
batchMode	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->batchMode = $batchMode;$/;"	v
batchMode	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $batchMode;$/;"	v
batchMode	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function __construct(int $batchMode = self::BATCH_MODE_JSON, bool $appendNewline = true)$/;"	v
batchMode	vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function __construct(int $batchMode = self::BATCH_MODE_NEWLINES, bool $appendNewline = false)$/;"	v
batchRecord	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $batchRecord = null;$/;"	v
batchRecord	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $batchRecord = [$/;"	v
batchRecord	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $batchRecord = array_merge($/;"	v
batchRecord	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecord = null;$/;"	v
batchRecords	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecords = $this->combineRecords($records);$/;"	v
batchRecords	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $batchRecords = [];$/;"	v
batchSize	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->batchSize = $batchSize;$/;"	v
batchSize	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $batchSize = null;$/;"	v
batchSize	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function batchSize($batchSize)$/;"	f
batchSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function batchSize($batchSize);$/;"	f
batchType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^        $this->batchType = $batchType;$/;"	v
batchType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private $batchType;$/;"	v
beforeCallable	vendor/pinguo/php-aop/src/Factory.php	/^    public static function create($object, $beforeCallable = null, $afterCallable = null, $bothCallable = null)$/;"	v
beforeSwooleStart	vendor/pinguo/php-msf/src/MSFCli.php	/^    public function beforeSwooleStart()$/;"	f
beforeSwooleStart	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function beforeSwooleStart()$/;"	f
beforeSwooleStart	vendor/pinguo/php-msf/src/Server.php	/^    public function beforeSwooleStart()$/;"	f
begin	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function begin(Context $context = null)$/;"	f
bin	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^            $this->bin = $data->getData();$/;"	v
bin	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^            $this->bin = $data;$/;"	v
bin	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public $bin;$/;"	v
bin	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^        $bin = new \\MongoBinData($bsonBinary);$/;"	v
bin	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^        $bin = new \\MongoBinData('foo', \\MongoBinData::FUNC);$/;"	v
bind	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function bind(Context $context)$/;"	f
bindId	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->bindId        = $_bind_id;$/;"	v
bindId	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public $bindId;$/;"	v
bindId	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^                $bindId = $data['bind_id'];$/;"	v
bindId	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $bindId = $data['bind_id'] ?? null;$/;"	v
bindId	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function query($callback, $bindId = null, $sql = null, Context $context = null)$/;"	v
bindPool	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $this->bindPool       = [];$/;"	v
bindPool	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public $bindPool;$/;"	v
bizLists	app/Controllers/MySQL.php	/^        $bizLists   = yield $mysqlProxy->select("*")->from('user')->go();$/;"	v
bizLists	app/Controllers/MySQL.php	/^        $bizLists  = yield $this->getMysqlPool('master')->select("*")->from('biz')->go();$/;"	v
branches	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^        $branches = `git branch -v --no-abbrev`;$/;"	v
break	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function break()$/;"	f
bson	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^                $bson = new BSONArray($bson);$/;"	v
bson	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^                $bson = new BSONDocument((array) $bson);$/;"	v
bson	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        if ($bson instanceof BSONArray || (is_array($bson) && $bson === array_values($bson))) {$/;"	v
bsonBinary	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^        $bsonBinary = $bin->toBSONType();$/;"	v
bsonBinary	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^        $bsonBinary = new \\MongoDB\\BSON\\Binary('foo', \\MongoDB\\BSON\\Binary::TYPE_UUID);$/;"	v
bsonCode	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^        $bsonCode = $code->toBSONType();$/;"	v
bsonCode	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^        $bsonCode = new \\MongoDB\\BSON\\Javascript('code', ['scope' => 'bleh']);$/;"	v
bsonDate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $bsonDate = $date->toBSONType();$/;"	v
bsonDate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $bsonDate = new \\MongoDB\\BSON\\UTCDateTime(1234567890123);$/;"	v
bsonDateTime	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $bsonDateTime = $bsonDate->toDateTime();$/;"	v
bsonRegex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^        $bsonRegex = $regex->toBSONType();$/;"	v
bsonRegex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^        $bsonRegex = new \\MongoDB\\BSON\\Regex('abc', 'i');$/;"	v
bsonSerialize	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^    public function bsonSerialize()$/;"	f
bsonSerialize	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public function bsonSerialize()$/;"	f
bsonSerialize	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^    public function bsonSerialize()$/;"	f
bsonTimestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $bsonTimestamp = $bsonDateTime->format('U') . '.' . $bsonDateTime->format('U');$/;"	v
bsonTimestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $bsonTimestamp = $timestamp->toBSONType();$/;"	v
bsonTimestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $bsonTimestamp = new \\MongoDB\\BSON\\Timestamp(12345, 67890);$/;"	v
bsonTimestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $bsonTimestamp = new \\MongoDB\\BSON\\Timestamp(987654321, 1234567890);$/;"	v
bsonUnserialize	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^    public function bsonUnserialize(array $data)$/;"	f
bsonUnserialize	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public function bsonUnserialize(array $data)$/;"	f
bson_decode	vendor/alcaeus/mongo-php-adapter/lib/Mongo/functions.php	/^    function bson_decode($bson)$/;"	f
bson_encode	vendor/alcaeus/mongo-php-adapter/lib/Mongo/functions.php	/^    function bson_encode($anything)$/;"	f
bubble	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $bubble = true;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->bubble   = $bubble;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $bubble;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^        $this->bubble = $bubble;$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function __construct(array $handlers, $bubble = true)$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $bubble = true,$/;"	v
bubble	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
bucket	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $bucket = $database->selectGridFSBucket($bucketOptions);$/;"	v
bucket	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $bucket = $database->selectGridFSBucket();$/;"	v
bucket	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $bucket = new Bucket($this->manager, $this->getDatabaseName(), ['bucketName' => 'custom_fs']);$/;"	v
bucket	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^        $this->bucket = new Bucket($this->manager, $this->getDatabaseName());$/;"	v
bucket	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    protected $bucket;$/;"	v
bucketName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->bucketName = $options['bucketName'];$/;"	v
bucketName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $bucketName;$/;"	v
bucketName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $this->bucketName = (string) $bucketName;$/;"	v
bucketName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private $bucketName;$/;"	v
bucketOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $bucketOptions = [$/;"	v
buffer	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->buffer = $currentChunk->data->getData();$/;"	v
buffer	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $buffer;$/;"	v
buffer	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->buffer = '';$/;"	v
buffer	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $buffer = '';$/;"	v
buffer	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $buffer = '';$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->buffer = [];$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $buffer = [];$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^                $this->buffer = [];$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->buffer = array_filter($this->buffer, function ($record) use ($level) {$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->buffer = [];$/;"	v
buffer	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $buffer = [];$/;"	v
bufferLimit	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->bufferLimit = (int) $bufferLimit;$/;"	v
bufferLimit	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $bufferLimit;$/;"	v
bufferLimit	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function __construct(HandlerInterface $handler, $bufferLimit = 0, $level = Logger::DEBUG, $bubble = true, $flushOnOverflow = false)$/;"	v
bufferOffset	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->bufferOffset = 0;$/;"	v
bufferOffset	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $bufferOffset = 0;$/;"	v
bufferSize	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->bufferSize = 0;$/;"	v
bufferSize	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        if ($this->bufferLimit > 0 && $this->bufferSize === $this->bufferLimit) {$/;"	v
bufferSize	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $bufferSize = 0;$/;"	v
bufferSize	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->bufferSize = $bufferSize;$/;"	v
bufferSize	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $bufferSize;$/;"	v
buffering	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->buffering = false;$/;"	v
buffering	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->buffering = true;$/;"	v
buffering	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $buffering = true;$/;"	v
buildContent	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private function buildContent($record)$/;"	f
buildContent	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private function buildContent($record)$/;"	f
buildHeader	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private function buildHeader($content)$/;"	f
buildHeader	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private function buildHeader($content)$/;"	f
buildMessage	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected function buildMessage(string $content, array $records): Swift_Message$/;"	f
buildTrace	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function buildTrace(\\Exception $e)$/;"	f
builtMessage1	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $builtMessage1 = $method->invoke($handler, $messageTemplate, []);$/;"	v
builtMessage2	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $builtMessage2 = $method->invoke($handler, $messageTemplate, []);$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $bulk = new Bulk($options);$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $bulk = new Bulk(['ordered' => true]);$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $bulk = new Bulk();$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $bulk = new Bulk($options);$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $bulk = new Bulk($options);$/;"	v
bulk	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $bulk = new Bulk($bulkOptions);$/;"	v
bulk	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $bulk = new BulkWrite($this->getDatabaseName(), $collectionName, $operations);$/;"	v
bulk	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^            $bulk = new BulkWrite;$/;"	v
bulkOptions	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $bulkOptions = [];$/;"	v
bulkSend	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function bulkSend(array $documents)$/;"	f
bulkWrite	vendor/mongodb/mongodb/src/Collection.php	/^    public function bulkWrite(array $operations, array $options = [])$/;"	f
bulkWrite	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $bulkWrite = new BulkWrite();$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $bulkWrite = new BulkWrite();$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $bulkWrite = new BulkWrite();$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $bulkWrite = new Bulk(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
bulkWrite	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $bulkWrite = new BulkWrite(['ordered' => true]);$/;"	v
byFilenameAndRevision	vendor/mongodb/mongodb/src/GridFS/Exception/FileNotFoundException.php	/^    public static function byFilenameAndRevision($filename, $revision, $namespace)$/;"	f
byId	vendor/mongodb/mongodb/src/GridFS/Exception/FileNotFoundException.php	/^    public static function byId($id, $namespace)$/;"	f
bytes	vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^        $bytes = memory_get_peak_usage($this->realUsage);$/;"	v
bytes	vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^        $bytes = memory_get_usage($this->realUsage);$/;"	v
bytesRead	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $bytesRead = 0;$/;"	v
cache	vendor/hassankhan/config/src/AbstractConfig.php	/^    protected $cache = array();$/;"	v
cache	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private static $cache;$/;"	v
cache	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private static $cache;$/;"	v
cache	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function cache($context, string $key, $value = '', int $expire = 0)$/;"	f
cacheKey	vendor/hassankhan/config/src/AbstractConfig.php	/^        $cacheKey = '';$/;"	v
cacheLocalKey	vendor/hassankhan/config/src/AbstractConfig.php	/^                foreach ($this->cache as $cacheLocalKey => $cacheValue) {$/;"	v
cachedAssetUrl	vendor/pinguo/plates/src/Extension/Asset.php	/^    public function cachedAssetUrl($url)$/;"	f
calcFoundRows	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function calcFoundRows()$/;"	f
call	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function call()$/;"	f
call	vendor/pinguo/plates/src/Template/Func.php	/^    public function call(Template $template = null, $arguments = array())$/;"	f
callBack	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public function start(\\Generator $routine, Controller $controller, callable $callBack = null)$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->callBack   = null;$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->callBack   = $callBack;$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->callBack = $callBack;$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->callBack = null;$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $callBack;$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function __construct(\\Generator $routine, Controller &$controller, callable $callBack = null)$/;"	v
callBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function resetCallBack(callable $callBack = null)$/;"	v
callBacks	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->callBacks = [];$/;"	v
callBacks	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $callBacks;$/;"	v
callPrevious	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerExceptionHandler($levelMap = [], $callPrevious = true): self$/;"	v
call_array	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function call_array($method, array $args)$/;"	f
callback	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    private static $callback;$/;"	v
callback	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    private function assertDatabaseExists($databaseName, $callback = null)$/;"	v
callback	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    private function assertCollectionExists($collectionName, $callback = null)$/;"	v
callback	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    private function assertIndexExists($collectionName, $indexName, $callback = null)$/;"	v
callback	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    private function assertIndexExists($indexName, $callback = null)$/;"	v
callback	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^    private function assertIndexExists($indexName, $callback = null)$/;"	v
callback	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $callback = function ($arg) {$/;"	v
callback	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $callback = function ($string) use ($res) {$/;"	v
callback	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $callback = function ($content, array $records) use ($expectedMessage) {$/;"	v
callback	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $callback = function () {$/;"	v
callback	vendor/pinguo/php-log/src/PGLog.php	/^        $callback = function ($record) {$/;"	v
callback	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public function schedule(Task $task, callable $callback = null)$/;"	v
callback	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $callback = $this->callBacks[$data['token']];$/;"	v
callback	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $callback = array_pop($arguments);$/;"	v
callback	vendor/pinguo/plates/src/Template/Func.php	/^                'Not a valid function callback.'$/;"	f
callback	vendor/pinguo/plates/src/Template/Func.php	/^        $this->callback = $callback;$/;"	v
callback	vendor/pinguo/plates/src/Template/Func.php	/^     * Get the function callback.$/;"	f
callback	vendor/pinguo/plates/src/Template/Func.php	/^     * Set the function callback$/;"	f
callback	vendor/pinguo/plates/src/Template/Func.php	/^     * The function callback.$/;"	f
callback	vendor/pinguo/plates/src/Template/Func.php	/^    protected $callback;$/;"	v
can	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * This function can be used to see which parts of the driver's functionality are$/;"	f
can	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * This function can be used to set how verbose logging should be and the types of$/;"	f
can	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * This function can be used to set which parts of the driver's functionality$/;"	f
can	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ * This simple wrapper class can be used to extend handlers functionality.$/;"	c
canUnserialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    private function canUnserialize(string $string)$/;"	f
canUnserialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    private function canUnserialize(string $string)$/;"	f
capSize	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^            $capSize = $this->capSize;$/;"	v
capSize	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->capSize = $capSize;$/;"	v
capSize	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected $capSize;$/;"	v
cappedCollectionName	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $cappedCollectionName = $this->getCollectionName() . '.capped';$/;"	v
cappedCollectionOptions	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $cappedCollectionOptions = [$/;"	v
capture	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^    public function capture($data, $stack = null, $vars = null)$/;"	f
capture	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public function capture($data, $stack, $vars = null)$/;"	f
ce	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^                $ce     = $e->getPrevious();$/;"	v
ce	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^                $ce     = $e;$/;"	v
ce	vendor/pinguo/php-msf/src/Rest/Controller.php	/^                $ce = $e->getPrevious();$/;"	v
ce	vendor/pinguo/php-msf/src/Rest/Controller.php	/^                $ce = $e;$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $ch = curl_init();$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $ch = curl_init();$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $ch = curl_init();$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $ch = curl_init();$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $ch = curl_init();$/;"	v
ch	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $ch = curl_init();$/;"	v
channel	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->channel = $channel;$/;"	v
channel	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $channel;$/;"	v
channel	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function __construct($webhookUrl, $channel = null, $username = null, $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeContextAndExtra = false, $level = Logger::CRITICAL, $bubble = true, array $excludeFields = array())$/;"	v
channel	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->channel = $channel;$/;"	v
channel	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $channel;$/;"	v
channel	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $channel = '#test';$/;"	v
channel	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private function createHandler($token = 'myToken', $channel = 'channel1', $username = 'Monolog', $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeExtra = false)$/;"	v
channel	vendor/pinguo/php-log/src/PGLog.php	/^    protected function channel()$/;"	f
channel	vendor/pinguo/php-log/src/PGLog.php	/^    public $channel;$/;"	v
channelToActionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^        $this->channelToActionLevel = array_map('Monolog\\Logger::toMonologLevel', $channelToActionLevel);$/;"	v
channelToActionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    private $channelToActionLevel;$/;"	v
channelToActionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function __construct($defaultActionLevel, $channelToActionLevel = [])$/;"	v
check	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^        $check = (array) $ref;$/;"	v
check	vendor/pinguo/php-msf/src/Proxy/IProxy.php	/^    public function check();$/;"	f
check	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function check()$/;"	f
check	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    public function check()$/;"	f
check	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    public function check()$/;"	f
checkCollectionName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    private function checkCollectionName($name)$/;"	f
checkDatabase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $checkDatabase = $this->getCheckDatabase();$/;"	v
checkDatabaseName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    private function checkDatabaseName($name)$/;"	f
checkErrors	vendor/pinguo/php-msf/src/Server.php	/^    public function checkErrors()$/;"	f
checkFailPoint	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function checkFailPoint()$/;"	f
checkKeys	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $checkKeys = function ($array) {$/;"	v
checkPropagation	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function checkPropagation()$/;"	f
checkRedisProxy	vendor/pinguo/php-msf/src/Process/Config.php	/^    public function checkRedisProxy()$/;"	f
checkServerVersion	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function checkServerVersion($minServerVersion, $maxServerVersion)$/;"	f
checkUriRegexMatch	vendor/pinguo/plates/src/Extension/URI.php	/^    protected function checkUriRegexMatch($regex, $returnOnTrue = null, $returnOnFalse = null)$/;"	f
checkUriSegmentMatch	vendor/pinguo/plates/src/Extension/URI.php	/^    protected function checkUriSegmentMatch($key, $string, $returnOnTrue = null, $returnOnFalse = null)$/;"	f
checkedIndexes	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $this->checkedIndexes = true;$/;"	v
checkedIndexes	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private $checkedIndexes = false;$/;"	v
checksum	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $checksum = '098f6bcd4621d373cade4e832627b4f6';$/;"	v
chunk	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $chunk = [$/;"	v
chunk	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $chunk = [$/;"	v
chunk	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^                $chunk = $this->fwrite($data);$/;"	v
chunk	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^                $chunk = $this->fwrite(substr($data, $sent));$/;"	v
chunkOffset	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $chunkOffset = 0;$/;"	v
chunkOffset	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $chunkOffset = 0;$/;"	v
chunkSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $chunkSize = $record['chunkSize'];$/;"	v
chunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->chunkSize = (integer) $file->chunkSize;$/;"	v
chunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $chunkSize;$/;"	v
chunkSize	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->chunkSize = $options['chunkSizeBytes'];$/;"	v
chunkSize	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $chunkSize;$/;"	v
chunkSize	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $chunkSize = self::DATAGRAM_MAX_LENGTH - strlen($header);$/;"	v
chunkSizeBytes	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->chunkSizeBytes = $options['chunkSizeBytes'];$/;"	v
chunkSizeBytes	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $chunkSizeBytes;$/;"	v
chunks	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $chunks = str_split($bytes, $chunkSize);$/;"	v
chunks	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $this->chunks = $db->selectCollection($this->chunksName);$/;"	v
chunks	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public $chunks;$/;"	v
chunks	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        return $chunks = $this->gridfs->chunks->find($/;"	v
chunks	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $chunks = iterator_to_array($chunksCursor);$/;"	v
chunksCollection	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $this->chunksCollection = new Collection($manager, $databaseName, sprintf('%s.chunks', $bucketName), $collectionOptions);$/;"	v
chunksCollection	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private $chunksCollection;$/;"	v
chunksCollection	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^        $this->chunksCollection = new Collection($this->manager, $this->getDatabaseName(), 'fs.chunks');$/;"	v
chunksCollection	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    protected $chunksCollection;$/;"	v
chunksCursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $chunksCursor = $newChunksCollection->find([], ['sort' => ['n' => 1]]);$/;"	v
chunksIterator	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->chunksIterator = new IteratorIterator($cursor);$/;"	v
chunksIterator	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $chunksIterator;$/;"	v
chunksName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $this->chunksName = $prefix . '.chunks';$/;"	v
chunksName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    protected $chunksName;$/;"	v
class	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                        $class = 'MongoCursorException';$/;"	v
class	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                        $class = 'MongoDuplicateKeyException';$/;"	v
class	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                $class = $fallbackClass;$/;"	v
class	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                $class = 'MongoConnectionException';$/;"	v
class	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                $class = 'MongoExecutionTimeoutException';$/;"	v
class	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $class = new ReflectionClass($className);$/;"	v
class	vendor/mongodb/mongodb/tests/TestCase.php	/^         $class = new ReflectionClass($this);$/;"	v
class	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        foreach ($this->defaultExceptionLevelMap() as $class => $level) {$/;"	v
class	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        foreach ($this->uncaughtExceptionLevelMap as $class => $candidate) {$/;"	v
class	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $class = new \\ReflectionClass('Monolog\\Handler\\ProcessHandler');$/;"	v
class	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                $class = get_class($arguments[0]);$/;"	v
class	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                $class = get_class($result);$/;"	v
class	vendor/pinguo/php-msf/src/Base/Pool.php	/^        $class = trim(get_class($classInstance), '\\\\');$/;"	v
class	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^                foreach (getInstance()->objectPool->map as $class => &$objectsMap) {$/;"	v
class	vendor/pinguo/php-msf/src/MSFServer.php	/^            foreach ($this->objectPool->map as $class => $objects) {$/;"	v
classIsImmutable	vendor/mongodb/mongodb/src/Exception/BadMethodCallException.php	/^    public static function classIsImmutable($class)$/;"	f
classMap	vendor/composer/ClassLoader.php	/^            $this->classMap = $classMap;$/;"	v
classMap	vendor/composer/ClassLoader.php	/^            $this->classMap = array_merge($this->classMap, $classMap);$/;"	v
classMap	vendor/composer/ClassLoader.php	/^    private $classMap = array();$/;"	v
classMap	vendor/composer/autoload_real.php	/^            $classMap = require __DIR__ . '\/autoload_classmap.php';$/;"	v
classMapAuthoritative	vendor/composer/ClassLoader.php	/^        $this->classMapAuthoritative = $classMapAuthoritative;$/;"	v
classMapAuthoritative	vendor/composer/ClassLoader.php	/^    private $classMapAuthoritative = false;$/;"	v
className	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $className = class_exists(Warning::class) ? Warning::class : \\PHPUnit_Framework_Error_Warning::class;$/;"	v
className	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                $className = $arguments[0];$/;"	v
className	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $className = get_class($var);$/;"	v
className	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $className = "\\\\App\\\\Console\\\\" . $this->routeParams->controllerName;$/;"	v
className	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $className = "\\\\App\\\\Controllers\\\\" . $this->routeParams->controllerName;$/;"	v
className	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $className = "\\\\PG\\\\MSF\\\\Controllers\\\\" . $this->routeParams->controllerName;$/;"	v
classNames	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $classNames = [];$/;"	v
clear	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function clear()$/;"	f
clear	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function clear()$/;"	f
clear	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function clear()$/;"	f
clear	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function clear()$/;"	f
clear	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function clear()$/;"	f
clearDnsCache	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public static function clearDnsCache($host)$/;"	f
clearTimes	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function clearTimes()$/;"	f
cli	app/Controllers/CoroutineTest.php	/^                                $cli = new \\swoole_http_client($ip, 443, true);$/;"	v
cli	app/Controllers/CoroutineTest.php	/^                        $cli = new \\swoole_http_client($ip, 443, true);$/;"	v
cli	console.php	/^$cli = new \\PG\\MSF\\MSFCli();$/;"	v
cli	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^        $cli = new \\swoole_http_client('127.0.0.1', 80);$/;"	v
client	app/Controllers/CoroutineTest.php	/^            $client  = $this->getObject(Client::class);$/;"	v
client	app/Controllers/CoroutineTest.php	/^        $client = new \\swoole_redis;$/;"	v
client	app/Controllers/Http.php	/^        $client   = $this->getObject(Client::class);$/;"	v
client	app/Controllers/Http.php	/^        $client  = $this->getObject(Client::class);$/;"	v
client	app/Controllers/RpcTest.php	/^        $client = $this->getObject(RpcClient::class, ['demo']);$/;"	v
client	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $this->client = new Client($this->server, $options, $driverOptions);$/;"	v
client	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private $client;$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $client = $this->getClient($options, $uri);$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $client = $this->getClient();$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $client = $this->getClient(['username' => 'alcaeus', 'password' => 'mySuperSecurePassword']);$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $client = $this->getClient([], 'mongodb:\/\/alcaeus:mySuperSecurePassword@localhost');$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $client = $this->getClient(null, 'localhost');$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $client = $this->getClient();$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $client = $this->getClient([], 'mongodb:\/\/localhost:28888?connectTimeoutMS=1');$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $client = $this->getClient(['connect' => false], 'mongodb:\/\/localhost:28888');$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $client = $this->getClient();$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^            $client = $this->getClient();$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $client = $this->getCheckClient();$/;"	v
client	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getDatabase(\\MongoClient $client = null)$/;"	v
client	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $this->client = new Client($this->getUri());$/;"	v
client	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    private $client;$/;"	v
client	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $client = new Client($this->getUri());$/;"	v
client	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $client = new Client($this->getUri(), $uriOptions);$/;"	v
client	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $client = new Client($this->getUri(), $uriOptions, $driverOptions);$/;"	v
client	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $client = new Client();$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^        $this->client = $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    private $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $this->client = $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $this->client = $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected $client;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $client = new \\Elastica\\Client();$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ *   $client = new \\MongoDB\\Client('mongodb:\/\/localhost:27017');$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^        $this->client = $sqsClient;$/;"	v
client	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^    private $client;$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $client = $this->getMockBuilder('Doctrine\\\\CouchDB\\\\CouchDBClient')$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $this->client = $this->getMockBuilder('Aws\\DynamoDb\\DynamoDbClient')$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    private $client;$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $client = new Client($clientOpts);$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $client = new Client();$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $this->client = $this->getMockBuilder('Elastica\\Client')$/;"	v
client	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected $client;$/;"	v
client	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $client     = new \\swoole_http_client($ip, $this->urlData['port'], $this->urlData['ssl']);$/;"	v
client	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $this->client = $client;$/;"	v
client	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $this->client = new \\swoole_http_client($ip, $this->urlData['port'], $this->urlData['ssl']);$/;"	v
client	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public $client;$/;"	v
client	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $client = yield $this->getObject(Client::class)->goDnsLookup($this->host, $this->timeout, $headers);$/;"	v
client	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^            $this->client = new \\swoole_redis();$/;"	v
client	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^    private $client;$/;"	v
client	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $this->client    = $client;$/;"	v
client	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public $client;$/;"	v
client	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->client     = $client;$/;"	v
client	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public $client;$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^                $client = $this->pool->shift();$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            $client = $this->bindPool[$bindId]['client'] ?? null;$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            $client = new \\swoole_mysql();$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            if ($sql != 'begin' && $client == null) {$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $client = $this->bindPool[$bindId]['client'];$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $client = $this->getDBQueryBuilder($context);$/;"	v
client	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $client = null;$/;"	v
client	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $client = $this->pool->shift();$/;"	v
client	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $client = new \\swoole_redis($settings);$/;"	v
client1	app/Controllers/CoroutineTest.php	/^        $client1 = $this->getObject(Client::class, ['http:\/\/www.baidu.com\/']);$/;"	v
client2	app/Controllers/CoroutineTest.php	/^        $client2 = $this->getObject(Client::class, ['http:\/\/www.qq.com\/']);$/;"	v
clientOpts	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $clientOpts = ['host' => '127.0.0.1', 'port' => 1];$/;"	v
clone	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $clone = $collection->withOptions();$/;"	v
clone	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $clone = $this->collection->withOptions($collectionOptions);$/;"	v
clone	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $clone = $database->withOptions();$/;"	v
clone	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $clone = $this->database->withOptions($databaseOptions);$/;"	v
close	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function close($connection = null)$/;"	f
close	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function close()$/;"	f
close	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function close();$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function close()$/;"	f
close	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function close()$/;"	f
close	vendor/pinguo/php-log/src/Handler/PGStreamHandler.php	/^    public function close()$/;"	f
close	vendor/pinguo/php-msf/src/Server.php	/^    public function close($fd)$/;"	f
closeCriteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function closeCriteria(array &$criteria)$/;"	f
closeHaving	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function closeHaving()$/;"	f
closeSocket	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function closeSocket()$/;"	f
closeWhere	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function closeWhere()$/;"	f
cmd	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $cmd = [$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $cmd = ['count' => $this->collectionName];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^        $cmd = ['create' => $this->collectionName];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $cmd = [$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $cmd = [$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^        $cmd = ['drop' => $this->collectionName];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^        $cmd = ['dropDatabase' => 1];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $cmd = [$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $cmd = ['findAndModify' => $this->collectionName];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $cmd = ['listCollections' => 1];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^        $cmd = ['listDatabases' => 1];$/;"	v
cmd	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $cmd = ['listIndexes' => $this->collectionName];$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                    $code = $writeError->getCode();$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^        $code = $e->getCode();$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^            $code = $javascript->getCode();$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^        $this->code = $code;$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    private $code;$/;"	v
code	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^    public function __construct($message = '', $code = 0, Exception $previous = null, $document = null)$/;"	v
code	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^        $code = new \\MongoCode($bsonCode);$/;"	v
code	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^        $code = new \\MongoCode('code', ['scope' => 'bleh']);$/;"	v
code	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $code      = isset($error['code']) ? $error['code'] : 0;$/;"	v
code	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $code = E_USER_NOTICE;$/;"	v
code	vendor/pinguo/php-msf/src/Base/Output.php	/^            $code = 200;$/;"	v
code	vendor/pinguo/php-msf/src/Coroutine/Exception.php	/^    public function __construct($message, $code = 0, \\Exception $previous = null)$/;"	v
codeToString	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private static function codeToString($code): string$/;"	f
codes	vendor/pinguo/php-msf/src/Base/Output.php	/^    public static $codes = [$/;"	v
coll	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $coll = $coll->getName();$/;"	v
collationNotSupported	vendor/mongodb/mongodb/src/Exception/UnsupportedException.php	/^    public static function collationNotSupported()$/;"	f
collect	vendor/flexihash/flexihash/src/Flexihash.php	/^                $collect = true;$/;"	v
collect	vendor/flexihash/flexihash/src/Flexihash.php	/^        $collect = false;$/;"	v
collectLogs	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function collectLogs()$/;"	f
collection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->collection = $connection->selectCollection($dbName, $collectionName)->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $collection;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $this->collection = $this->collection->withOptions($options);$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $this->collection = $this->db->getDb()->selectCollection($this->name, $options);$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    protected $collection;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^        $this->collection = $collection;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private $collection;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $collection = $client->selectCollection('mongo-php-adapter', 'test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $collection = $client->selectCollection('test', 'foo');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $collection = $client->selectCollection($database, 'test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $collection = $client->selectCollection('mongo-php-adapter', 'test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $collection = $database->selectCollection('test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $collection = $this->getCollection()->foo->bar;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $collection = $this->getCollection('test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $collection = $database->createCollection('test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $collection = $database->createCollection('test', ['capped' => true, 'size' => 100]);$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $collection = $db->selectCollection('test');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $collection = $db->test;$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $collection = $this->getGridFS();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $collection = $this->getGridFS('foofs');$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $collection = $this->getGridFS();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $collection = $this->getCollection();$/;"	v
collection	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $collection = $client->selectCollection($this->getDatabaseName(), $this->getCollectionName());$/;"	v
collection	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $collection = $client->selectCollection($this->getDatabaseName(), $this->getCollectionName(), $collectionOptions);$/;"	v
collection	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $collection = new Collection($this->manager, $this->getDatabaseName(), $this->getCollectionName(), $collectionOptions);$/;"	v
collection	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^        $this->collection = new Collection($this->manager, $this->getDatabaseName(), $this->getCollectionName());$/;"	v
collection	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^    protected $collection;$/;"	v
collection	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $collection = $database->selectCollection($this->getCollectionName());$/;"	v
collection	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $collection = $database->{$this->getCollectionName()};$/;"	v
collection	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $collection = $this->database->selectCollection($this->getCollectionName(), $collectionOptions);$/;"	v
collection	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^            $this->collection = $mongodb->selectCollection($database, $collection);$/;"	v
collection	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    private $collection;$/;"	v
collection	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $collection = $this->getMockBuilder('MongoDB\\Collection')$/;"	v
collectionExists	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $collectionExists = false;$/;"	v
collectionExists	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $collectionExists = true;$/;"	v
collectionMock	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $collectionMock = $this->getCollectionMock();$/;"	v
collectionName	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $collectionName = implode('.', $nsParts);$/;"	v
collectionName	vendor/mongodb/mongodb/src/Collection.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Collection.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $this->collectionName = (string) $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private $collectionName;$/;"	v
collectionName	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $collectionName = $this->getCollectionName();$/;"	v
collectionNames	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^            $collectionNames = $this->getDatabase()->getCollectionNames();$/;"	v
collectionNames	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^            $collectionNames = $this->getDatabase()->getCollectionNames(['includeSystemCollections' => true]);$/;"	v
collectionOptions	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $collectionOptions = array_intersect_key($options, ['readConcern' => 1, 'readPreference' => 1, 'typeMap' => 1, 'writeConcern' => 1]);$/;"	v
collectionOptions	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function __construct(Manager $manager, $databaseName, $bucketName, array $collectionOptions = [])$/;"	v
collectionOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $collectionOptions = [$/;"	v
collectionOptions	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $collectionOptions = [$/;"	v
collectionOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $collectionOptions = [$/;"	v
collectionOptions	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public $collectionOptions = ['GET', 'POST', 'HEAD', 'OPTIONS'];$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->collectionWrapper = new CollectionWrapper($manager, $databaseName, $options['bucketName'], $collectionOptions);$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->collectionWrapper = $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->collectionWrapper = $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $this->collectionWrapper = new CollectionWrapper($this->manager, $this->getDatabaseName(), 'fs');$/;"	v
collectionWrapper	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    private $collectionWrapper;$/;"	v
collectionWrapper	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^        $this->collectionWrapper = new CollectionWrapper($this->manager, $this->getDatabaseName(), 'fs');$/;"	v
collectionWrapper	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    private $collectionWrapper;$/;"	v
collectionWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $collectionWriteConcern = $this->getWriteConcern();$/;"	v
collections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $collections = $this->db->listCollections($options);$/;"	v
collections	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $collections = $this->database->listCollections($options);$/;"	v
collections	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $collections = $this->database->listCollections();$/;"	v
collections	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $collections = $operation->execute($this->getPrimaryServer());$/;"	v
collections	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $collections = $operation->execute($this->getPrimaryServer());$/;"	v
collections	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $collections = $operation->execute($server);$/;"	v
collections	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $collections = iterator_to_array($operation->execute($server));$/;"	v
color	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $color = $labels[$string];$/;"	v
colors	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        static $colors = ['blue', 'green', 'red', 'magenta', 'orange', 'black', 'grey'];$/;"	v
column	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        foreach ($this->select as $column => $alias) {$/;"	v
columnName	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            foreach ($column as $columnName => $columnValue) {$/;"	v
combineRecords	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function combineRecords($records)$/;"	f
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $command = new \\MongoDB\\Driver\\Command(['ping' => 1]);$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $command = [$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^        $this->command = $command;$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    private $command;$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    public function __construct(MongoClient $connection, $ns, array $command = [])$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $command = [$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $command = [$/;"	v
command	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function command(array $data, $options = [], &$hash = null)$/;"	f
command	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $command = [$/;"	v
command	vendor/mongodb/mongodb/src/Database.php	/^    public function command($command, array $options = [])$/;"	f
command	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $command = $this->createCommand($server, $isCursorSupported);$/;"	v
command	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^        $this->command = ($command instanceof Command) ? $command : new Command($command);$/;"	v
command	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    private $command;$/;"	v
command	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $command = ['isMaster' => 1];$/;"	v
command	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $this->command = $command;$/;"	v
command	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private $command;$/;"	v
command	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^            $command = $this->commands->shift();$/;"	v
command	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $command = 'set';$/;"	v
command	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $command = 'setex';$/;"	v
command	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $command = 'get';$/;"	v
command	vendor/pinguo/php-msf/src/Server.php	/^            if ($command === 'start' || $command === 'test') {$/;"	v
command	vendor/pinguo/php-msf/src/Server.php	/^        $command = trim($argv[1]);$/;"	v
command	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function command($command, $timeout = 5000)$/;"	f
command2	vendor/pinguo/php-msf/src/Server.php	/^        $command2 = isset($argv[2]) ? $argv[2] : '';$/;"	v
commandData	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $commandData = [$context, $key, $expire, $value];$/;"	v
commandData	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $commandData = [$context, $key, $value];$/;"	v
commandData	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $commandData = [$context, $key];$/;"	v
commandData	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $commandData = [$context, $script, array_merge($keys, $evalMockArgs), $numKeys];$/;"	v
commandData	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $commandData = array_merge([$context, $script, $numKeys], $keys, $evalMockArgs);$/;"	v
commandOptions	vendor/mongodb/mongodb/src/Collection.php	/^        $commandOptions = array_intersect_key($options, ['writeConcern' => 1]);$/;"	v
commandResult	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $commandResult = $this->client->dropDatabase($this->getDatabaseName());$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $commandResult = $this->collection->drop();$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $commandResult = $this->database->createCollection($basicCollectionName);$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $commandResult = $this->database->createCollection($cappedCollectionName, $cappedCollectionOptions);$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $commandResult = $this->database->createCollection($this->getCollectionName());$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $commandResult = $this->database->dropCollection($this->getCollectionName());$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $commandResult = $this->database->drop();$/;"	v
commandResult	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $commandResult = current($cursor->toArray());$/;"	v
commands	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->commands  = new \\SplQueue();$/;"	v
commands	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $commands;$/;"	v
commit	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function commit(Context $context = null)$/;"	f
composerRequire0b38b3a26e76b1c1cca49aaf455c88c6	vendor/composer/autoload_real.php	/^function composerRequire0b38b3a26e76b1c1cca49aaf455c88c6($fileIdentifier, $file)$/;"	f
concurrency	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^            $concurrency = 0;$/;"	v
condition	app/Tasks/Idallloc.php	/^        $condition = [$/;"	v
condition	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function group($keys, array $initial, $reduce, array $condition = [])$/;"	v
condition	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $condition = ['condition' => ["a" => [ '$gt' => 1]]];$/;"	v
conf	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $conf              = $this->config['redis'][$this->active];$/;"	v
conf	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $conf = $this->config[$confKey];$/;"	v
config	vendor/pinguo/php-msf/src/Base/Core.php	/^            $config = $this->getConfig()->get('mysql_proxy.' . $proxyName, null);$/;"	v
config	vendor/pinguo/php-msf/src/Base/Core.php	/^            $config = $this->getConfig()->get('redis_proxy.' . $proxyName, null);$/;"	v
config	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $config = getInstance()->config->get('params.service.' . $service, []);$/;"	v
config	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->config    = $config;$/;"	v
config	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public $config;$/;"	v
config	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $config = $this->config->get('redis.' . $this->active, null);$/;"	v
config	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^        $this->config                 = $config;$/;"	v
config	vendor/pinguo/php-msf/src/Process/ProcessBase.php	/^    public $config;$/;"	v
config	vendor/pinguo/php-msf/src/Server.php	/^        $this->config = new Config(defined('CONFIG_DIR') ? CONFIG_DIR : [$/;"	v
config	vendor/pinguo/php-msf/src/Server.php	/^    public $config;$/;"	v
config	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $this->config = getInstance()->config['mongodb'] ?? [];$/;"	v
config	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    protected $config;$/;"	v
configProcess	vendor/pinguo/php-msf/src/MSFServer.php	/^            $configProcess = new \\swoole_process(function ($process) {$/;"	v
configureFailPoint	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function configureFailPoint($failPoint, $mode, $data = [])$/;"	f
connect	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function connect()$/;"	f
connect	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function connect()$/;"	f
connect	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $this->connect = [$this->config['redis'][$this->active]['ip'], $this->config['redis'][$this->active]['port']];$/;"	v
connect	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $connect;$/;"	v
connectHttp	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function connectHttp()$/;"	f
connectIfNotConnected	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function connectIfNotConnected()$/;"	f
connectUdp	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function connectUdp()$/;"	f
connectUtil	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    protected function connectUtil()$/;"	f
connected	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $this->connected = false;$/;"	v
connected	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $this->connected = true;$/;"	v
connected	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public $connected = false;$/;"	v
connection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->connection = $connection;$/;"	v
connection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $connection;$/;"	v
connection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $this->connection = $conn;$/;"	v
connection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    protected $connection;$/;"	v
connectionString	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $connectionString = 'ssl:\/\/' . self::FLEEP_HOST . ':443';$/;"	v
connectionString	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $connectionString = $useSSL ? 'ssl:\/\/'.$host.':443' : $host.':80';$/;"	v
connectionString	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $connectionString = $useSSL ? 'ssl:\/\/api.pushover.net:443' : 'api.pushover.net:80';$/;"	v
connectionString	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionString = $connectionString;$/;"	v
connectionString	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $connectionString;$/;"	v
connectionTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionTimeout = (float) $seconds;$/;"	v
connectionTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->connectionTimeout = (float) ini_get('default_socket_timeout');$/;"	v
connectionTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $connectionTimeout;$/;"	v
connector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $connector = Connector::getInstance();$/;"	v
connector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $this->connector = $this->initConnector($connector);$/;"	v
connector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private $connector;$/;"	v
connector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initConnector(Connector $connector = null)$/;"	v
connector	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $connector = $this->getMockBuilder('PhpConsole\\Connector')$/;"	v
connector	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->connector = $this->initConnectorMock();$/;"	v
connector	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $connector;$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $connector = self::LOGICAL_AND,$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function openCriteria(array &$criteria, $connector = self::LOGICAL_AND)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingNotBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingNotIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereNotBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
connector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereNotIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
construct	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $this->construct = $construct;$/;"	v
construct	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $construct = '';$/;"	v
construct	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function handler($handler, $construct = null)$/;"	v
construct	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->construct = (array)$unPackArgs['construct'];$/;"	v
construct	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $construct = null;$/;"	v
constructArgumentProvider	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function constructArgumentProvider()$/;"	f
constructorArgs	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $constructorArgs = [$token, Logger::DEBUG];$/;"	v
constructorArgs	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $constructorArgs = [$token, $room, $name, $notify, Logger::DEBUG, true, true, 'text', $host, $version];$/;"	v
constructorArgs	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $constructorArgs = [$token, $user, $title];$/;"	v
constructorArgs	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $constructorArgs = [$token, $channel, $username, $useAttachment, $iconEmoji, Logger::DEBUG, true, $useShortAttachment, $includeExtra];$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^            $content = wordwrap($content, $this->maxColumnWidth);$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $content = $this->buildContent($record);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $content = fread($this->res, 12000);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $content = fread($this->res, 1024);$/;"	v
content	vendor/pinguo/plates/src/Template/Template.php	/^                $content = $layout->render($this->layoutData);$/;"	v
content	vendor/pinguo/plates/src/Template/Template.php	/^            $content = ob_get_clean();$/;"	v
content2	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $content2 = fread($this->res, 1024);$/;"	v
contentType	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $contentType = $this->getContentType() ?: ($this->isHtmlBody($content) ? 'text\/html' : 'text\/plain');$/;"	v
contentType	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->contentType = $contentType;$/;"	v
contentType	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $contentType;$/;"	v
contents	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $contents = stream_get_contents($stream);$/;"	v
context	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $context = stream_context_create([$/;"	v
context	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $context = stream_context_get_options($this->context);$/;"	v
context	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public $context;$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $context = self::dump('Context', $record['context']);$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $context = stream_context_create([$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $context = & $record['context'];$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $context = $record['context'];$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $context = array_intersect_key($record['context'], $this->parameterNames);$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $context = $record['context'];$/;"	v
context	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $context = array_merge($context, $record['extra'], [$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function addRecord(int $level, string $message, array $context = []): bool$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function alert($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function critical($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function debug($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emergency($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function error($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function info($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function log($level, $message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function notice($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warning($message, array $context = [])$/;"	v
context	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $context = ['file' => 'foo', 'line' => 1];$/;"	v
context	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $context = [$tag, 'custom' => mt_rand()];$/;"	v
context	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $context = ['foo' => 'bar', 'level' => $level];$/;"	v
context	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $context = array('test' => 1);$/;"	v
context	vendor/pinguo/php-aop/src/MI.php	/^    public $context;$/;"	v
context	vendor/pinguo/php-log/src/PGLog.php	/^    public function addRecord(int $level, string $message, array $context = []): bool$/;"	v
context	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^            $context = $coreBase->getContext();$/;"	v
context	vendor/pinguo/php-msf/src/Base/Child.php	/^        $this->context = $context;$/;"	v
context	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $context                       = $context ?? $rpc->getContext();$/;"	v
context	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $context  = null;$/;"	v
context	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $context = array_shift($arguments);$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $context = array_pop($arguments);$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function begin(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function commit(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function freeBind($bindId, Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function getDBQueryBuilder(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function getSync(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goBegin(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goCommit($id, Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goRollback($id, Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function rollback(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^        $context  = array_shift($arguments);$/;"	v
context	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function getDBQueryBuilder(Context $context = null)$/;"	v
context	vendor/pinguo/php-msf/src/Server.php	/^        $context = new Context();$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function alert($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function critical($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function debug($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function emergency($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function error($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function info($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function notice($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function warning($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function alert($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function critical($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function debug($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function emergency($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function error($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function info($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function log($level, $message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function notice($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function warning($message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    abstract public function log($level, $message, array $context = array());$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function alert($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function critical($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function debug($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function emergency($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function error($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function info($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function notice($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function warning($message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/NullLogger.php	/^    public function log($level, $message, array $context = array())$/;"	v
context	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $context = array($/;"	v
contextPrefix	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->contextPrefix = $contextPrefix;$/;"	v
contextPrefix	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $contextPrefix;$/;"	v
contextPrefix	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->contextPrefix = $contextPrefix;$/;"	v
contextPrefix	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $contextPrefix;$/;"	v
continueOnError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $continueOnError = isset($options['continueOnError']) && $options['continueOnError'];$/;"	v
continueOnError	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $continueOnError = true,$/;"	v
controller	vendor/pinguo/php-msf/src/Base/Output.php	/^        $this->controller = $controller;$/;"	v
controller	vendor/pinguo/php-msf/src/Base/Output.php	/^        $this->controller = null;$/;"	v
controller	vendor/pinguo/php-msf/src/Base/Output.php	/^    protected $controller;$/;"	v
controller	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->controller = null;$/;"	v
controller	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->controller = $controller;$/;"	v
controller	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $controller;$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/HttpServer.php	/^            $controllerClassName = $this->route->getControllerClassName();$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/MSFCli.php	/^            $controllerClassName = $this->route->getControllerClassName();$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                $this->controllerClassName = $className;$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $this->controllerClassName         = $this->routeCache[$path][2];$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $this->controllerClassName         = '';$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $this->controllerClassName         = '\\PG\\MSF\\Controllers\\Rpc';$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^        $this->controllerClassName = '';$/;"	v
controllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public $controllerClassName;$/;"	v
controllerName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->controllerName = $controllerName;$/;"	v
controllerName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->controllerName = null;$/;"	v
controllerName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $controllerName;$/;"	v
controllerName	vendor/pinguo/php-msf/src/HttpServer.php	/^            $controllerName      = $this->route->getControllerName();$/;"	v
controllerName	vendor/pinguo/php-msf/src/MSFCli.php	/^            $controllerName      = $this->route->getControllerName();$/;"	v
controllerName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $controllerName = $this->routeParams->controllerName  . "\\\\" . $this->getMethodName();$/;"	v
controls	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^     * The return value of this function controls the bubbling process of the handler stack.$/;"	f
convert	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $convert = function ($record) {$/;"	v
convertBSONObjectToLegacy	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    private static function convertBSONObjectToLegacy(BSON\\Type $value)$/;"	f
convertCursorType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function convertCursorType()$/;"	f
convertIndex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $convertIndex = function (\\MongoDB\\Model\\IndexInfo $indexInfo) {$/;"	v
convertModifiers	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function convertModifiers()$/;"	f
convertProjection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    public static function convertProjection($fields)$/;"	f
convertProjection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function convertProjection()$/;"	f
convertToString	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function convertToString($data): string$/;"	f
convertToString	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function convertToString($data): string$/;"	f
convertTypes	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function convertTypes(array $data, $createBinary = true)$/;"	f
convertWriteConcernOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    private function convertWriteConcernOptions(array $options)$/;"	f
convertWriteErrors	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private function convertWriteErrors(WriteResult $result)$/;"	f
convertedCommand	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^            $convertedCommand = TypeConverter::fromLegacy($this->command);$/;"	v
converter	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $converter = 'convert' . ucfirst($option);$/;"	v
converterData	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^    public static function converterData()$/;"	f
copyToResource	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    private function copyToResource($handle)$/;"	f
coroutineRedisHelp	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $this->coroutineRedisHelp = new CoroutineRedisProxy($this);$/;"	v
coroutineRedisHelp	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    private $coroutineRedisHelp;$/;"	v
correctly	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^            throw new \\InvalidArgumentException('The FlowdockHandler requires an instance of Monolog\\Formatter\\FlowdockFormatter to function correctly');$/;"	f
correctly	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        throw new \\InvalidArgumentException('The FlowdockHandler must be configured (via setFormatter) with an instance of Monolog\\Formatter\\FlowdockFormatter to function correctly');$/;"	f
could	vendor/pinguo/plates/src/Template/Template.php	/^                    'The batch function could not find the "' . $function . '" function.'$/;"	f
count	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function count($query = [], $options = [])$/;"	f
count	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            $count = $this->collection->count(TypeConverter::fromLegacy($this->query), $options);$/;"	v
count	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function count($foundOnly = false)$/;"	f
count	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $count = count($values);$/;"	v
count	vendor/mongodb/mongodb/src/Collection.php	/^    public function count($filter = [], array $options = [])$/;"	f
count	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $count = 1;$/;"	v
count	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $count = 1;$/;"	v
count	vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $count = count($testHandler->getRecords());$/;"	v
count	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                            $count = count($result);$/;"	v
count	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                        $count = count($result);$/;"	v
count	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function count($/;"	f
counting	vendor/pinguo/php-log/src/PGLog.php	/^        $counting = $this->getAllCountingInfo();$/;"	v
counting	vendor/pinguo/php-log/src/PGLog.php	/^    public function counting($name, $hit, $total = null)$/;"	f
crc32Hasher	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $crc32Hasher = new Crc32Hasher();$/;"	v
create	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    public static function create($collection, $id, $database = null)$/;"	f
create	vendor/pinguo/php-aop/src/Factory.php	/^    public static function create($object, $beforeCallable = null, $afterCallable = null, $bothCallable = null)$/;"	f
createAdapterObject	vendor/pinguo/php-aop/src/Factory.php	/^    public static function createAdapterObject($object)$/;"	f
createAmqpMessage	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    private function createAmqpMessage($data)$/;"	f
createBinary	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function convertTypes(array $data, $createBinary = true)$/;"	v
createChunksIndex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function createChunksIndex()$/;"	f
createCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function createCollection($name, $options = [])$/;"	f
createCollection	vendor/mongodb/mongodb/src/Database.php	/^    public function createCollection($collectionName, array $options = [])$/;"	f
createCollectionObject	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    private function createCollectionObject()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private function createCommand(Server $server, $isCursorSupported)$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private function createCommand()$/;"	f
createCommand	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private function createCommand(Server $server)$/;"	f
createDBRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function createDBRef($document_or_id)$/;"	f
createDBRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function createDBRef($collection, $document_or_id)$/;"	f
createDatabaseObject	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    private function createDatabaseObject()$/;"	f
createDir	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function createDir()$/;"	f
createExceptionRecord	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createExceptionRecord($level = Logger::DEBUG, $message = 'test', $exception = null): array$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFixtures	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    private function createFixtures($n)$/;"	f
createFromDocument	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    public static function createFromDocument(MongoClient $connection, $hash, array $document)$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private function createHandler($token = 'myToken')$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private function createHandler($token = 'myToken', $room = 'room1', $name = 'Monolog', $notify = false, $host = 'api.hipchat.com', $version = 'v1')$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private function createHandler()$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^    private function createHandler()$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private function createHandler($token = 'myToken', $user = 'myUser', $title = 'Monolog')$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createHandler(): RollbarHandler$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private function createHandler($token = 'myToken', $channel = 'channel1', $username = 'Monolog', $useAttachment = true, $iconEmoji = null, $useShortAttachment = false, $includeExtra = false)$/;"	f
createHandler	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function createHandler($connectionString)$/;"	f
createHeader	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function createHeader(array $meta, string $message): array$/;"	f
createIndex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function createIndex($keys, array $options = [])$/;"	f
createIndex	vendor/mongodb/mongodb/src/Collection.php	/^    public function createIndex($key, array $options = [])$/;"	f
createIndexIgnoredOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public static function createIndexIgnoredOptions()$/;"	f
createIndexes	vendor/mongodb/mongodb/src/Collection.php	/^    public function createIndexes(array $indexes, array $options = [])$/;"	f
createObjectID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    private function createObjectID($id)$/;"	f
createPathForFile	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function createPathForFile(stdClass $file)$/;"	f
createPathForUpload	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function createPathForUpload()$/;"	f
createQuery	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private function createQuery()$/;"	f
createRecordHeader	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function createRecordHeader(array $record): array$/;"	f
createSocketResource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function createSocketResource()$/;"	f
createStream	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    protected function createStream($data = '')$/;"	f
createWriteConcernFromArray	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcernConverter.php	/^    protected function createWriteConcernFromArray($writeConcernArray)$/;"	f
createWriteConcernFromParameters	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcernConverter.php	/^    protected function createWriteConcernFromParameters($wstring, $wtimeout)$/;"	f
createdIndexNames	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $createdIndexNames = $operation->execute($this->getPrimaryServer());$/;"	v
createdIndexNames	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $createdIndexNames = $operation->execute($this->getPrimaryServer());$/;"	v
criteria	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function remove(array $criteria = [], array $options = [])$/;"	v
criteria	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function remove(array $criteria = [], array $options = [])$/;"	v
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $criteria = array($criteria);$/;"	v
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function criteria($/;"	f
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function innerJoin($table, $criteria = null, $alias = null)$/;"	v
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function join($table, $criteria = null, $type = self::INNER_JOIN, $alias = null)$/;"	v
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function leftJoin($table, $criteria = null, $alias = null)$/;"	v
criteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function rightJoin($table, $criteria = null, $alias = null)$/;"	v
criteriaBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function criteriaBetween($/;"	f
criteriaIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function criteriaIn($/;"	f
criteriaNotBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function criteriaNotBetween($/;"	f
criteriaNotIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function criteriaNotIn($/;"	f
critical	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function critical($message, array $context = [])$/;"	f
critical	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function critical($message, array $context = array())$/;"	f
critical	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function critical($message, array $context = array());$/;"	f
critical	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function critical($message, array $context = array())$/;"	f
ctx	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->ctx = hash_init('md5');$/;"	v
ctx	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $ctx;$/;"	v
curlErrno	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^                $curlErrno = curl_errno($ch);$/;"	v
curlError	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^                    $curlError = curl_error($ch);$/;"	v
current	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->current = TypeConverter::toLegacy($this->current);$/;"	v
current	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->current = null;$/;"	v
current	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->current = $this->ensureIterator()->current();$/;"	v
current	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    private $current = null;$/;"	v
current	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function current()$/;"	f
current	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    public function current()$/;"	f
current	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function current()$/;"	f
current	vendor/mongodb/mongodb/src/Model/CollectionInfoCommandIterator.php	/^    public function current()$/;"	f
current	vendor/mongodb/mongodb/src/Model/CollectionInfoIterator.php	/^    public function current();$/;"	f
current	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^    public function current()$/;"	f
current	vendor/mongodb/mongodb/src/Model/DatabaseInfoIterator.php	/^    public function current();$/;"	f
current	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function current()$/;"	f
current	vendor/mongodb/mongodb/src/Model/IndexInfoIterator.php	/^    public function current();$/;"	f
current	vendor/mongodb/mongodb/src/Model/IndexInfoIteratorIterator.php	/^    public function current()$/;"	f
current	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^    public function current()$/;"	f
currentChunk	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $currentChunk = $this->chunksIterator->current();$/;"	v
currentTimestamp	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^        $currentTimestamp = time();$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->cursor = null;$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $cursor;$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $cursor = $this->collection->aggregate(TypeConverter::fromLegacy($pipeline), $options);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $cursor = new MongoCommandCursor($this->db->getConnection(), (string) $this, $command);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $cursor = new MongoCursor($this->db->getConnection(), (string) $this, $query, $fields);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^            $this->cursor = $this->db->command($convertedCommand, $this->getOptions());$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            $this->cursor = $this->collection->find(TypeConverter::fromLegacy($this->query), $options);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $cursor = new \\MongoCommandCursor($this->connection, $this->name, $data);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $cursor = new MongoGridFSCursor($this, $this->db->getConnection(), (string) $this, $query, $fields);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $cursor = $collection->aggregateCursor($pipeline);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $cursor = $collection->find($/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $cursor = $collection->find()->sort(['i' => 1]);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $cursor = $this->getCollection()->find(['foo' => 'foo'], $projection);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $cursor = $this->getCollection()->find(['name' => $regex]);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        $cursor = $this->getCollection()->aggregateCursor([['$match' => ['foo' => 'bar']]]);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $client->selectCollection('mongo-php-adapter', 'test')->find();$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $collection->find($query, $projection);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $collection->find(['foo' => 'bar'])->limit(1);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $collection->find(['foo' => 'bar']);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $collection->find(['foo' => 'bar'], ['_id' => false])->skip(1)->limit(3);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $cursor = $this->getCollection()->find(['foo' => 'bar']);$/;"	v
cursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^        $cursor = $gridfs->find(['filename' => 'foo.txt']);$/;"	v
cursor	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $cursor = $this->collectionWrapper->findChunksByFileId($this->file->_id, $this->chunkOffset);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $cursor = $server->executeCommand($this->databaseName, $command, $readPreference);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand(), $readPreference);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand());$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->command, $readPreference);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand(), $readPreference);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^            $cursor = $server->executeCommand($this->databaseName, $this->createCommand());$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand());$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand());$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $cursor = $server->executeQuery($this->databaseName . '.' . $this->collectionName, $this->createQuery(), $readPreference);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $cursor = $server->executeCommand($this->databaseName, $this->createCommand($server));$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^        $cursor = $this->find->execute($server);$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $cursor = $server->executeCommand($this->databaseName, new Command($cmd));$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $cursor = $server->executeQuery($this->databaseName . '.system.namespaces', new Query($filter, $options));$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^        $cursor = $server->executeCommand('admin', new Command($cmd));$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^            $cursor = $server->executeCommand($this->databaseName, new Command($cmd));$/;"	v
cursor	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $cursor = $server->executeQuery($this->databaseName . '.system.indexes', new Query($filter, $options));$/;"	v
cursor	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $cursor = $this->database->command($command, $options);$/;"	v
cursor	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $cursor = $this->manager->executeCommand($/;"	v
cursor	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $cursor = $this->manager->executeCommand($databaseName, new Command(['count' => $collectionName]));$/;"	v
cursor	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $cursor = $this->bucket->find($/;"	v
cursor	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $cursor = $this->bucket->find();$/;"	v
cursor	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^        $cursor = $operation->execute($this->getPrimaryServer());$/;"	v
cursor	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $cursor = $this->mongoCollection->find($query, $fields);$/;"	v
cursorId	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $cursorId = (string) $this->cursor->getId();$/;"	v
cursorNeedsAdvancing	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->cursorNeedsAdvancing = true;$/;"	v
cursorNeedsAdvancing	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $cursorNeedsAdvancing = true;$/;"	v
cursorNeedsAdvancing	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            $this->cursorNeedsAdvancing = false;$/;"	v
customErrorHandler	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function customErrorHandler($code, $msg)$/;"	f
customParameters	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $customParameters;$/;"	v
cwd	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $this->cwd = $cwd;$/;"	v
cwd	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private $cwd;$/;"	v
daemonize	vendor/pinguo/php-msf/src/Server.php	/^    public static $daemonize = false;$/;"	v
data	app/Controllers/Demo.php	/^        $data = [$/;"	v
data	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $data = stream_get_contents($handle, $chunkSize);$/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^    public static function data()$/;"	f
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $data = [$/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $data = ['foo' => 'foo', 'bar' => 'bar'];$/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $data = [];$/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $data = array($/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $data = str_repeat('a', 500 * 1024);$/;"	v
data	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function configureFailPoint($failPoint, $mode, $data = [])$/;"	v
data	vendor/hassankhan/config/src/AbstractConfig.php	/^        $this->data = array_merge($this->getDefaults(), $data);$/;"	v
data	vendor/hassankhan/config/src/AbstractConfig.php	/^    protected $data = null;$/;"	v
data	vendor/hassankhan/config/src/Config.php	/^            $this->data = array_replace_recursive($this->data, (array) $parser->parse($path));$/;"	v
data	vendor/hassankhan/config/src/Config.php	/^        $this->data = array();$/;"	v
data	vendor/hassankhan/config/src/FileParser/Ini.php	/^        $data = @parse_ini_file($path, true);$/;"	v
data	vendor/hassankhan/config/src/FileParser/Json.php	/^        $data = json_decode(file_get_contents($path), true);$/;"	v
data	vendor/hassankhan/config/src/FileParser/Xml.php	/^        $data = json_decode(json_encode($data), true);$/;"	v
data	vendor/hassankhan/config/src/FileParser/Xml.php	/^        $data = simplexml_load_file($path, null, LIBXML_NOERROR);$/;"	v
data	vendor/hassankhan/config/src/FileParser/Yaml.php	/^            $data = YamlParser::parse(file_get_contents($path));$/;"	v
data	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $data = '';$/;"	v
data	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $data = $this->buffer;$/;"	v
data	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $data = $this->convertTypes($data);$/;"	v
data	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $data = ['foo', 'bar'];$/;"	v
data	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $data = [0 => 'foo', 2 => 'bar'];$/;"	v
data	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $data = ['foo' => 'bar'];$/;"	v
data	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $data = [0 => 'foo', 2 => 'bar'];$/;"	v
data	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $data = $this->normalize($data);$/;"	v
data	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $data = [$/;"	v
data	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $data = preg_replace_callback($/;"	v
data	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $data = str_replace($/;"	v
data	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $data = [$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $data = $this->getFormatter()->format($record);$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $data = $record["formatted"];$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $data = base64_encode(utf8_encode($json));$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $data = base64_encode(utf8_encode($json));$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $data = ['time' => $date->format('Y-m-d\\TH:i:s.uO')];$/;"	v
data	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $data = $this->generateDataStream($record);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $data = $doc->getData();$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $data = [];$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $data = $resp->getData();$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $data = $response->getData();$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^        $data = array_merge($this->get_user_data(), $data);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $data = array_merge($this->get_user_data(), $data);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($debugLoggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($emergencyLoggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($errorLoggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($infoLoggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($loggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord($level, 'test', array('test' => 1)));$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord());$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($this->getRecord(Logger::WARNING, $message));$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $record->getSlackData($warningLoggerRecord);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $slackRecord->getSlackData($record);$/;"	v
data	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data = $slackRecord->getSlackData($this->getRecord());$/;"	v
data	vendor/pinguo/php-aop/src/Wrapper.php	/^            $data = $func(...array_values($data));$/;"	v
data	vendor/pinguo/php-msf/src/Base/Output.php	/^        $data = json_encode($data);$/;"	v
data	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $data = '';$/;"	v
data	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goPost($url = '', $data = [], $timeout = 30000, $headers = [])$/;"	v
data	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goSinglePost($url = '', $data = [], $timeout = 30000, $headers = [])$/;"	v
data	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^        $data = yield $this->getObject(Client::class)->goSingleGet('http:\/\/127.0.0.1\/');$/;"	v
data	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^            $data                           = [];$/;"	v
data	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^        $data  = getInstance()->sysCache->get(Marco::SERVER_STATS);$/;"	v
data	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^        $data = [$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->data       = $data;$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public $data;$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                        $data = unserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $data = @igbinary_unserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                $data = $data[0];$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                $data = $ret;$/;"	v
data	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                $data = $this->realUnserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/MSFServer.php	/^        $data = [$/;"	v
data	vendor/pinguo/php-msf/src/MSFServer.php	/^        $data = unserialize($message);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $data = unserialize($read);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $data = @igbinary_serialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $data = serialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $data = unserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $data = @igbinary_serialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $data = @igbinary_unserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $data = serialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $data = $data[0];$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $data = $ret;$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $data = $this->realUnserialize($data);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $data = [$data, null];$/;"	v
data	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                    $data = $this->mysqlPool->getSync($this->getContext())->pdoQuery($sql);$/;"	v
data	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $data = array();$/;"	v
data	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $data = false;$/;"	v
data	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $data = [$/;"	v
data	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $data = [$/;"	v
data	vendor/pinguo/php-msf/src/Process/Config.php	/^        $data = [$/;"	v
data	vendor/pinguo/php-msf/src/Rest/Controller.php	/^            $data = [$/;"	v
data	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        $data = $this->parseRule();$/;"	v
data	vendor/pinguo/php-msf/src/Server.php	/^        $data = [$/;"	v
data	vendor/pinguo/plates/src/Engine.php	/^        $this->data = new Data();$/;"	v
data	vendor/pinguo/plates/src/Engine.php	/^    protected $data;$/;"	v
data	vendor/pinguo/plates/src/Engine.php	/^    public function render($name, array $data = array())$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^        $this->data = array_merge($this->data, $data);$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    protected $data = array();$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function data(array $data = null)$/;"	f
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function data(array $data = null)$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function fetch($name, array $data = array())$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function insert($name, array $data = array())$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function layout($name, array $data = array())$/;"	v
data	vendor/pinguo/plates/src/Template/Template.php	/^    public function render(array $data = array())$/;"	v
data2	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $data2 = $slackRecord2->getSlackData($record);$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $dataArray = [$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $dataArray = [$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $dataArray = [$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $dataArray = array_merge($extra, $context, $dataArray);$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $dataArray = array();$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $dataArray = $this->prepareContentData($record);$/;"	v
dataArray	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $dataArray = $this->slackRecord->getSlackData($record);$/;"	v
dataCreateThroughMongoDB	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public static function dataCreateThroughMongoDB()$/;"	f
dataFindWithProjection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public static function dataFindWithProjection()$/;"	f
dataFindWithProjectionAndNumericKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public static function dataFindWithProjectionAndNumericKeys()$/;"	f
dataFindWithProjectionExcludeId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public static function dataFindWithProjectionExcludeId()$/;"	f
dataFindWithRegex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public static function dataFindWithRegex()$/;"	f
dataGetAttachmentColor	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function dataGetAttachmentColor()$/;"	f
dataGetIndexInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function dataGetIndexInfo()$/;"	f
dataIsNumericArray	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^    public static function dataIsNumericArray()$/;"	f
dataIsRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public static function dataIsRef()$/;"	f
dataIsValid	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public static function dataIsValid()$/;"	f
dataModification	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $dataModification = $this->convertTypes($dataModification);$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'del';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'lindex';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'llen';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'lrange';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'lrem';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'mget';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'scard';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'sismember';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'smembers';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'zcard';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'zinterstore';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'zrem';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'zremrangebyscore';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $dataName = $data['name'] = 'zunionstore';$/;"	v
dataName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $dataName = strtolower($data['name']);$/;"	v
dataReadPreferenceOptionsAreInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public static function dataReadPreferenceOptionsAreInherited()$/;"	f
dataStringify	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function dataStringify()$/;"	f
dataWriteConcernOptionsAreInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public static function dataWriteConcernOptionsAreInherited()$/;"	f
database	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    public static function create($collection, $id, $database = null)$/;"	v
database	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $this->database = $db;$/;"	v
database	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private $database;$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $database = $this->getDatabase($client);$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $database = $this->getDatabase();$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $database = $this->getDatabase();$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $database = $client->selectDB('test');$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $database = $this->getDatabase();$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^            $database = $this->getDatabase();$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    protected function getGridFS($name = 'testfs', \\MongoDB $database = null)$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^            $database = $this->getDatabase();$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $database = $this->getCheckClient()->selectDatabase('test');$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getCollection($name = 'test', \\MongoDB $database = null)$/;"	v
database	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getGridFS($prefix = 'fs', \\MongoDB $database = null)$/;"	v
database	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $database = $client->selectDatabase($this->getDatabaseName());$/;"	v
database	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $database = $client->selectDatabase($this->getDatabaseName(), $databaseOptions);$/;"	v
database	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $database = $client->{$this->getDatabaseName()};$/;"	v
database	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $database = new Database($this->manager, $this->getDatabaseName());$/;"	v
database	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $database = new Database($this->manager, $this->getDatabaseName(), $databaseOptions);$/;"	v
database	vendor/mongodb/mongodb/tests/Database/FunctionalTestCase.php	/^        $this->database = new Database($this->manager, $this->getDatabaseName());$/;"	v
database	vendor/mongodb/mongodb/tests/Database/FunctionalTestCase.php	/^    protected $database;$/;"	v
databaseInfoIterator	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $databaseInfoIterator = $this->client->listDatabases();$/;"	v
databaseName	vendor/mongodb/mongodb/src/Collection.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Collection.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Database.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Database.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $this->databaseName = (string) $databaseName;$/;"	v
databaseName	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private $databaseName;$/;"	v
databaseOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $databaseOptions = [$/;"	v
databaseOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $databaseOptions = [$/;"	v
databaseOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $databaseOptions = ['writeConcern' => new WriteConcern(WriteConcern::MAJORITY)];$/;"	v
databases	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $databases = [$/;"	v
databases	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $databases = $this->getClient()->listDBs();$/;"	v
databases	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^        $this->databases = $databases;$/;"	v
databases	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    private $databases;$/;"	v
databases	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $databases = $this->client->listDatabases();$/;"	v
databases	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $databases = $operation->execute($server);$/;"	v
date	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $date = new \\MongoDate($bsonDate);$/;"	v
date	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $date = new \\MongoDate('1234567890', '012345');$/;"	v
date	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $date = new \\MongoDate('1234567890', '123456');$/;"	v
date	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $date = new \\MongoDate(1234567890, 123456);$/;"	v
date	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^            $date = $dt->format('Y-m-d H:i:s.u');$/;"	v
date	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^        $date = 'now';$/;"	v
date	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $date = $record['datetime'];$/;"	v
date	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $date = new \\DateTime();$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function __construct(string $dateFormat = null)$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $this->dateFormat = null === $dateFormat ? static::SIMPLE_DATE : $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function __construct(string $dateFormat = null)$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->dateFormat = $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->dateFormat = 'Y-m-d';$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^        $this->dateFormat = null === $dateFormat ? static::SIMPLE_DATE : $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^    private $dateFormat;$/;"	v
dateFormat	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^    public function __construct(string $dateFormat = null)$/;"	v
dateFormatProvider	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function dateFormatProvider()$/;"	f
dateTime	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $dateTime = $date->toDateTime();$/;"	v
datetime	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $datetime = \\DateTime::createFromFormat('Y-m-d H:i:s.u', $datetime->format('Y-m-d H:i:s') . '.' . str_pad($microSeconds, 6, '0', STR_PAD_LEFT));$/;"	v
datetime	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^        $datetime = new \\DateTime();$/;"	v
datetime	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $datetime = $record['datetime'];$/;"	v
datetime	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $datetime = null;$/;"	v
dayCallback	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $dayCallback = function ($ago) use ($now) {$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->db = $connection->selectDB($dbName)->getDb();$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $db;$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $this->db = $db;$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public $db = null;$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $this->db = $this->connection->getClient()->selectDatabase($this->name, $options);$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $this->db = $this->db->withOptions($options);$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $db = (isset($ref['$db']) && $ref['$db'] !== $this->name) ? $this->connection->selectDB($ref['$db']) : $this;$/;"	v
db	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    protected $db;$/;"	v
db	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $db = $client->selectDB('mongo-php-adapter');$/;"	v
db	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $db = $client->{'mongo-php-adapter'};$/;"	v
db	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $db = $this->getDatabase();$/;"	v
db	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $db = $this->getDatabase();$/;"	v
dbName	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $dbName = array_shift($nsParts);$/;"	v
dbQueryBuilder	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            $this->dbQueryBuilder            = new Miner();$/;"	v
dbQueryBuilder	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public $dbQueryBuilder;$/;"	v
dbQueryBuilder	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $this->dbQueryBuilder            = new Miner();$/;"	v
dbQueryBuilder	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    private $dbQueryBuilder;$/;"	v
dbs	app/Controllers/MySQL.php	/^        $dbs = yield $this->getMysqlPool('master')->go(null, 'show databases');$/;"	v
dead	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function dead()$/;"	f
dead	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function dead();$/;"	f
debug	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $debug = $collection->__debugInfo();$/;"	v
debug	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $debug = $database->__debugInfo();$/;"	v
debug	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $debug = $clone->__debugInfo();$/;"	v
debug	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $debug = $bucket->__debugInfo();$/;"	v
debug	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $debug = $clone->__debugInfo();$/;"	v
debug	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $debug = $collection->__debugInfo();$/;"	v
debug	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function debug($message, array $context = [])$/;"	f
debug	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function debug($message, array $context = array())$/;"	f
debug	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function debug($message, array $context = array());$/;"	f
debug	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function debug($message, array $context = array())$/;"	f
debugDispatcher	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^            $debugDispatcher = $this->initDebugDispatcherMock($this->connector);$/;"	v
debugDispatcher	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->debugDispatcher = $this->initDebugDispatcherMock($this->connector);$/;"	v
debugDispatcher	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $debugDispatcher;$/;"	v
debugLoggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $debugLoggerRecord = $this->getRecord(Logger::DEBUG);$/;"	v
decodeVal	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $decodeVal = @json_decode($result, true);$/;"	v
decodeVal	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $decodeVal = @json_decode($value, true);$/;"	v
deduplicationLevel	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->deduplicationLevel = Logger::toMonologLevel($deduplicationLevel);$/;"	v
deduplicationLevel	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $deduplicationLevel;$/;"	v
deduplicationStore	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->deduplicationStore = $deduplicationStore === null ? sys_get_temp_dir() . '\/monolog-dedup-' . substr(md5(__FILE__), 0, 20) .'.log' : $deduplicationStore;$/;"	v
deduplicationStore	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $deduplicationStore;$/;"	v
deduplicationStore	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function __construct(HandlerInterface $handler, $deduplicationStore = null, $deduplicationLevel = Logger::ERROR, $time = 60, $bubble = true)$/;"	v
default	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function get($key, $default = null)$/;"	v
default	vendor/hassankhan/config/src/ConfigInterface.php	/^    public function get($key, $default = null);$/;"	v
default	vendor/pinguo/php-aop/src/MI.php	/^            $default     = $reflection->getDefaultProperties();$/;"	v
default	vendor/pinguo/plates/src/Template/Template.php	/^    public function section($name, $default = null)$/;"	v
defaultActionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^        $this->defaultActionLevel = Logger::toMonologLevel($defaultActionLevel);$/;"	v
defaultActionLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    private $defaultActionLevel;$/;"	v
defaultBucketName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private static $defaultBucketName = 'fs';$/;"	v
defaultChunkSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private $defaultChunkSize = 261120;$/;"	v
defaultChunkSizeBytes	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private static $defaultChunkSizeBytes = 261120;$/;"	v
defaultChunkSizeBytes	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private static $defaultChunkSizeBytes = 261120;$/;"	v
defaultErrorLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    protected function defaultErrorLevelMap(): array$/;"	f
defaultExceptionLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    protected function defaultExceptionLevelMap(): array$/;"	f
defaultMethods	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $defaultMethods = ['fsockopen', 'pfsockopen', 'streamSetTimeout'];$/;"	v
defaultTypeMap	vendor/mongodb/mongodb/src/Client.php	/^    private static $defaultTypeMap = [$/;"	v
defaultTypeMap	vendor/mongodb/mongodb/src/Collection.php	/^    private static $defaultTypeMap = [$/;"	v
defaultTypeMap	vendor/mongodb/mongodb/src/Database.php	/^    private static $defaultTypeMap = [$/;"	v
defaultTypeMap	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private static $defaultTypeMap = [$/;"	v
delete	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function delete($id)$/;"	f
delete	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function delete($id)$/;"	f
delete	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^        $this->delete = new Delete($databaseName, $collectionName, $filter, 0, $options);$/;"	v
delete	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^    private $delete;$/;"	v
delete	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^        $this->delete = new Delete($databaseName, $collectionName, $filter, 1, $options);$/;"	v
delete	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^    private $delete;$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $this->delete = array();$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $this->delete = true;$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->delete = array();$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        return $this->delete === true;$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $delete;$/;"	v
delete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function delete($table = false)$/;"	f
delete	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function delete($/;"	f
deleteChunksByFilesId	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function deleteChunksByFilesId($id)$/;"	f
deleteFileAndChunksById	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function deleteFileAndChunksById($id)$/;"	f
deleteIndex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function deleteIndex($keys)$/;"	f
deleteIndexes	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function deleteIndexes()$/;"	f
deleteMany	vendor/mongodb/mongodb/src/Collection.php	/^    public function deleteMany($filter, array $options = [])$/;"	f
deleteOne	vendor/mongodb/mongodb/src/Collection.php	/^    public function deleteOne($filter, array $options = [])$/;"	f
deleteOptions	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $deleteOptions = ['limit' => $this->limit];$/;"	v
demoModel	app/Controllers/Demo.php	/^        $demoModel = $this->getObject(DemoModel::class, [1, 2]);$/;"	v
demoTask	app/Controllers/MySQL.php	/^        $demoTask = $this->getObject(DemoTask::class);$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalizeException(Throwable $e, int $depth = 0): array$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function normalizeException(\\Throwable $e, int $depth = 0): string$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalizeException(Throwable $e, int $depth = 0)$/;"	v
depth	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	v
destination	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $destination = $this->openUploadStream($filename, $options);$/;"	v
destination	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $destination = $this->createStream();$/;"	v
destroy	app/Models/Demo.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-context/src/AbstractContext.php	/^    abstract public function destroy();$/;"	f
destroy	vendor/pinguo/php-msf/src/Base/Child.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Console/Controller.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public $destroy = false;$/;"	v
destroy	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Tasks/Task.php	/^    public function destroy()$/;"	f
destroy	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function destroy()$/;"	f
detectAndCleanUtf8	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function detectAndCleanUtf8(&$data)$/;"	f
dict	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $dict = array_filter($dict);$/;"	v
differences	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $differences = 0;$/;"	v
dir	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $dir = $this->getDirFromStream($this->url);$/;"	v
dir	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $dir = __DIR__.'\/Fixtures';$/;"	v
dirCreated	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->dirCreated = true;$/;"	v
dirCreated	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private $dirCreated;$/;"	v
dirIterator	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $dirIterator  = new \\RecursiveDirectoryIterator($this->monitorDir);$/;"	v
dirPath	vendor/pinguo/php-msf/src/Process/Inotify.php	/^            $dirPath = $fileInfo['dirname'];$/;"	v
directory	vendor/pinguo/plates/src/Engine.php	/^        $this->directory = new Directory($directory);$/;"	v
directory	vendor/pinguo/plates/src/Engine.php	/^    protected $directory;$/;"	v
directory	vendor/pinguo/plates/src/Extension/Asset.php	/^            $directory = $pathInfo['dirname'] . '\/';$/;"	v
directory	vendor/pinguo/plates/src/Extension/Asset.php	/^            $directory = '';$/;"	v
directory	vendor/pinguo/plates/src/Extension/Asset.php	/^            $directory = '\/';$/;"	v
directory	vendor/pinguo/plates/src/Template/Name.php	/^        $directory = $this->engine->getDirectory();$/;"	v
dispatch	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    protected function dispatch(array $opArr, string $method, array $arguments)$/;"	f
displayErrorHandler	vendor/pinguo/php-msf/src/Server.php	/^    public function displayErrorHandler($error, $errorString, $filename, $line, $symbols)$/;"	f
displayUI	vendor/pinguo/php-msf/src/MSFCli.php	/^    protected static function displayUI()$/;"	f
displayUI	vendor/pinguo/php-msf/src/Server.php	/^    protected static function displayUI()$/;"	f
display_version	build.sh	/^display_version () {$/;"	f
distinct	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function distinct($key, array $query = [])$/;"	f
distinct	vendor/mongodb/mongodb/src/Collection.php	/^    public function distinct($fieldName, $filter = [], array $options = [])$/;"	f
distinct	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function distinct()$/;"	f
distribute	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function distribute($data)$/;"	f
distribute	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function distribute($data)$/;"	f
distribute	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function distribute($data);$/;"	f
distribution	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $distribution = [];$/;"	v
dns	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $dns              = [];$/;"	v
dnsCache	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public static $dnsCache = [];$/;"	v
dnsExpire	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    protected static $dnsExpire = 60;$/;"	v
dnsLookupCallBack	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function dnsLookupCallBack($ip)$/;"	f
dnsTimeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $dnsTimeout = $request['dns_timeout'];$/;"	v
dnsTimeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $dnsTimeout = $this->dnsTimeout;$/;"	v
dnsTimeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                $dnsTimeout       = $this->dnsTimeout;$/;"	v
dnsTimeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $this->dnsTimeout = $timeout;$/;"	v
dnsTimeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public $dnsTimeout = 30000;$/;"	v
dnsTimes	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    protected static $dnsTimes = 10000;$/;"	v
doQuery	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function doQuery()$/;"	f
doc	app/Tasks/Idallloc.php	/^        $doc = $this->mongoCollection->findAndModify($condition, $update, [], $options);$/;"	v
doc	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $doc = array($/;"	v
doc	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $doc = $formatter->format($msg);$/;"	v
docker_build	build.sh	/^docker_build () {$/;"	f
docker_exit	build.sh	/^docker_exit () {$/;"	f
docker_help	build.sh	/^docker_help () {$/;"	f
docker_login	build.sh	/^docker_login () {$/;"	f
docker_restart_container	build.sh	/^docker_restart_container () {$/;"	f
docker_rm_container	build.sh	/^docker_rm_container () {$/;"	f
docker_rm_image	build.sh	/^docker_rm_image() {$/;"	f
docker_run_container	build.sh	/^docker_run_container () {$/;"	f
docker_stop_container	build.sh	/^docker_stop_container () {$/;"	f
docker_update_image	build.sh	/^docker_update_image () {$/;"	f
docker_usage_next_step	build.sh	/^docker_usage_next_step () {$/;"	f
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                    $document = $this->collection->findOneAndReplace($query, $update, $options);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                    $document = $this->collection->findOneAndUpdate($query, $update, $options);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $document = $this->collection->findOneAndDelete($query, $options);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $document = $this->collection->findOne(TypeConverter::fromLegacy($query), $options);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $document = TypeConverter::toLegacy($document);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $document = (array) $a;$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoResultException.php	/^    public $document;$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^        $this->document = $document;$/;"	v
document	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^    private $document;$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^            $document = ['i' => $i];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $collection->findAndModify($/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $collection->getDBRef([$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $this->getCollection()->findOne(['foo' => 'foo'], ['_id' => false]);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $this->getCollection()->findOne(['foo' => 'foo'], ['bar' => true]);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $this->getCollection()->findOne(['foo' => 'foo'], ['bar']);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = $this->getCollection()->findOne([], $projection);$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = (object) [];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = 8;$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = [$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['*' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['_id' => $objectId, 'foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['_id' => new \\MongoId($id), 'foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['change' => true, 'foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['change' => true, 'foo' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['foo' => 'bar', 'bar' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['foo' => 'foo', 'bar' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['foo' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = ['name' => 'FOO 123'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = [1 => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = [];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document = new PrivatePropertiesStub();$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $document = ['_id' => $id, 'foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^            $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $document = ['_id' => $id];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $document = ['length' => filesize(__FILE__)];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $document = ['n' => 0];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $document = ['foo' => 'bar', 'bar' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $document = ['foo' => 'foo'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $document = ['foo' => 'foobar', 'bar' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $document = ['foo' => 'bar'];$/;"	v
document	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $document = ['foo' => 'foo'];$/;"	v
document	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^        $document = new static;$/;"	v
document	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^        $document = current($cursor->toArray());$/;"	v
document	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $this->document = $document;$/;"	v
document	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    private $document;$/;"	v
document	vendor/mongodb/mongodb/src/functions.php	/^        $document = $document->bsonSerialize();$/;"	v
document	vendor/mongodb/mongodb/src/functions.php	/^        $document = get_object_vars($document);$/;"	v
document	vendor/mongodb/mongodb/src/functions.php	/^    $document = [];$/;"	v
document	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $document = current($cursor->toArray());$/;"	v
document	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $document = is_object($document) ? (array) $document : $document;$/;"	v
document	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $document = new BSONArray([$/;"	v
document	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $document = BSONDocument::__set_state($data);$/;"	v
document	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $document = new BSONDocument($data);$/;"	v
document	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $document = new BSONDocument([$/;"	v
document	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $document = new BSONDocument(['foo' => 'bar']);$/;"	v
document	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^        $document = $operation->execute($this->getPrimaryServer());$/;"	v
document	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^        $document = $operation->execute($this->getPrimaryServer());$/;"	v
document	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $document = ['x' => 11];$/;"	v
document	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $document = new Document();$/;"	v
document	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $document = $this->getDocSourceFromElastic($/;"	v
document1	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document1 = ['a' => 2];$/;"	v
document1	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document1 = ['foo' => 'bar'];$/;"	v
document2	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document2 = ['b' => 5];$/;"	v
document2	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document2 = ['foo' => 'bar'];$/;"	v
document3	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document3 = ['a' => 1];$/;"	v
document3	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $document3 = ['foo' => 'foo'];$/;"	v
documentId	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $documentId = $this->getCreatedDocId($client->getLastResponse());$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [['' => 'foo']];$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [['*' => 'foo']];$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [['_id' => $id, 'foo' => 'bar'], ['_id' => $id, 'foo' => 'bleh']];$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [['foo']];$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [];$/;"	v
documents	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $documents = [new PrivatePropertiesStub()];$/;"	v
documents	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^    public function __construct(array $documents = [], array $typeMap)$/;"	v
documents	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $this->documents = $documents;$/;"	v
documents	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    private $documents;$/;"	v
documents	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $documents = [$/;"	v
documents	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $documents = [['x' => 11]];$/;"	v
documents	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $documents = $this->getFormatter()->formatBatch($records);$/;"	v
does	vendor/composer/ClassLoader.php	/^            \/\/ Remember that this class does not exist.$/;"	c
doesFunctionExist	vendor/pinguo/plates/src/Engine.php	/^    public function doesFunctionExist($name)$/;"	f
doesPathExist	vendor/pinguo/plates/src/Template/Name.php	/^    public function doesPathExist()$/;"	f
domain	vendor/pinguo/php-msf/src/Base/Output.php	/^        $domain = '',$/;"	v
downloadToStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function downloadToStream($id, $destination)$/;"	f
downloadToStreamByName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function downloadToStreamByName($filename, $destination, array $options = [])$/;"	f
driverOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $driverOptions = [$/;"	v
drop	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function drop()$/;"	f
drop	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function drop()$/;"	f
drop	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function drop()$/;"	f
drop	vendor/mongodb/mongodb/src/Collection.php	/^    public function drop(array $options = [])$/;"	f
drop	vendor/mongodb/mongodb/src/Database.php	/^    public function drop(array $options = [])$/;"	f
drop	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function drop()$/;"	f
dropCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function dropCollection($coll)$/;"	f
dropCollection	vendor/mongodb/mongodb/src/Database.php	/^    public function dropCollection($collectionName, array $options = [])$/;"	f
dropCollections	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function dropCollections()$/;"	f
dropDB	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function dropDB($db)$/;"	f
dropDatabase	vendor/mongodb/mongodb/src/Client.php	/^    public function dropDatabase($databaseName, array $options = [])$/;"	f
dropFunction	vendor/pinguo/plates/src/Engine.php	/^    public function dropFunction($name)$/;"	f
dropIndex	vendor/mongodb/mongodb/src/Collection.php	/^    public function dropIndex($indexName, array $options = [])$/;"	f
dropIndexes	vendor/mongodb/mongodb/src/Collection.php	/^    public function dropIndexes(array $options = [])$/;"	f
dsn	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $dsn = 'http:\/\/43f6017361224d098402974103bfc53d:a6a0538fc2934ba2bed32e08741b2cd3@marca.python.live.cheggnet.com:9000\/1';$/;"	v
dsn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $dsn = 'mysql:dbname=' . $activeConfig["database"] . ';host=' .$/;"	v
dt	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^            $dt = self::createFromFormat('U.u', sprintf('%.6F', $timestamp));$/;"	v
dt	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^            'bap' => $dt = new DateTimeImmutable(true),$/;"	v
dt	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^            $dt = new \\DateTime('now', $tz);$/;"	v
dummy	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^            $dummy = $this->createPartialMock('Psr\\Log\\Test\\DummyTest', array('__toString'));$/;"	v
dummy	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^            $dummy = $this->getMock('Psr\\Log\\Test\\DummyTest', array('__toString'));$/;"	v
dump	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function dump($message)$/;"	f
dump	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function dump($title, array $dict)$/;"	f
dump	vendor/pinguo/php-msf/src/Helpers/Common.php	/^        $dump            = $____GLOBAL_DUMP;$/;"	v
dump	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function dump($var, $format = true, $return = false)$/;"	f
dumpInternal	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function dumpInternal(&$output, $var, $level, $format = true, $truncated = true)$/;"	f
dumpValues	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $dumpValues = (array)$var;$/;"	v
dumpValues	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $dumpValues = [$/;"	v
dumper	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^            $dumper = $connector->getDumper();$/;"	v
e	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e = new \\LogicException('bar');$/;"	v
e	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e = new \\SoapFault('foo', 'bar', 'hello', 'world');$/;"	v
e	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $e = new Exception();$/;"	v
e	vendor/pinguo/plates/src/Template/Template.php	/^    public function e($string, $functions = null)$/;"	f
e2	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $e2 = new \\RuntimeException('foo', 0, $e);$/;"	v
eligibleCollections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $eligibleCollections = array_filter($/;"	v
embeddedTable	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            $embeddedTable = '<table cellspacing="1" width="100%">';$/;"	v
emergency	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function emergency($message, array $context = [])$/;"	f
emergency	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function emergency($message, array $context = array())$/;"	f
emergency	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function emergency($message, array $context = array());$/;"	f
emergency	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function emergency($message, array $context = array())$/;"	f
emergencyLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->emergencyLevel = $value;$/;"	v
emergencyLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->emergencyLevel = Logger::toMonologLevel($emergencyLevel);$/;"	v
emergencyLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $emergencyLevel;$/;"	v
emergencyLoggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $emergencyLoggerRecord = $this->getRecord(Logger::EMERGENCY);$/;"	v
empty	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $empty = [];$/;"	v
enableCache	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public $enableCache = true;$/;"	v
enableCache	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public $enableCache = false;$/;"	v
encodeJson	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function encodeJson($data)$/;"	f
encoded	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $encoded = $this->toJson($data, true);$/;"	v
encoding	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->encoding = $encoding;$/;"	v
encoding	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $encoding = 'utf-8';$/;"	v
end	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function end($output = '', $httpCode = 200, $gzip = true)$/;"	f
end	vendor/pinguo/plates/src/Template/Template.php	/^    public function end()$/;"	f
endpoint	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^        $endpoint = $useSSL ? 'ssl:\/\/data.logentries.com:443' : 'data.logentries.com:80';$/;"	v
endpoint	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^        $endpoint = $useSSL ? 'ssl:\/\/api.logmatic.io:10515' : 'api.logmatic.io:10514';$/;"	v
engine	vendor/pinguo/plates/src/Template/Name.php	/^        $this->engine = $engine;$/;"	v
engine	vendor/pinguo/plates/src/Template/Name.php	/^    protected $engine;$/;"	v
engine	vendor/pinguo/plates/src/Template/Template.php	/^        $this->engine = $engine;$/;"	v
engine	vendor/pinguo/plates/src/Template/Template.php	/^    protected $engine;$/;"	v
ensureChunksIndex	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private function ensureChunksIndex()$/;"	f
ensureCorrectType	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    private static function ensureCorrectType(array $array, $wasObject = false)$/;"	f
ensureCursor	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    abstract protected function ensureCursor();$/;"	f
ensureCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    protected function ensureCursor()$/;"	f
ensureCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function ensureCursor()$/;"	f
ensureDocumentHasMongoId	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    private function ensureDocumentHasMongoId(&$document)$/;"	f
ensureFilesIndex	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private function ensureFilesIndex()$/;"	f
ensureIndex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function ensureIndex(array $keys, array $options = [])$/;"	f
ensureIndexes	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private function ensureIndexes()$/;"	f
ensureIterator	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function ensureIterator()$/;"	f
ensureProcessIsStarted	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private function ensureProcessIsStarted()$/;"	f
errHandler	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $errHandler = new ErrorHandler($logger);$/;"	v
errMsg	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^                $errMsg = dump($ce, false, true);$/;"	v
errMsg	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^                $errMsg = dump($e, false, true);$/;"	v
errMsg	vendor/pinguo/php-msf/src/Rest/Controller.php	/^                $errMsg = dump($ce, false, true);$/;"	v
errMsg	vendor/pinguo/php-msf/src/Rest/Controller.php	/^                $errMsg = dump($e, false, true);$/;"	v
errno	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $errno;$/;"	v
error	vendor/hassankhan/config/src/FileParser/Ini.php	/^            $error = error_get_last();$/;"	v
error	vendor/hassankhan/config/src/FileParser/Json.php	/^            $error = array($/;"	v
error	vendor/hassankhan/config/src/FileParser/Xml.php	/^            $error       = array($/;"	v
error	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function error($message, array $context = [])$/;"	f
error	vendor/pinguo/php-msf/src/HttpServer.php	/^                    $error    = 'Api not found method(' . $methodName . ')';$/;"	v
error	vendor/pinguo/php-msf/src/HttpServer.php	/^                $error    = 'Api not found controller(' . $controllerName . ')';$/;"	v
error	vendor/pinguo/php-msf/src/HttpServer.php	/^        $error              = '';$/;"	v
error	vendor/pinguo/php-msf/src/Process/Config.php	/^                            $error = $redisConfig[$pool]['ip'] . ':' . $redisConfig[$pool]['port'] . ' ' . $e->getMessage();$/;"	v
error	vendor/pinguo/php-msf/src/Process/Config.php	/^                        $error = $redisConfig[$pool]['ip'] . ':' . $redisConfig[$pool]['port'] . " " . $e->getMessage();$/;"	v
error	vendor/pinguo/php-msf/src/Server.php	/^        $error   = error_get_last();$/;"	v
error	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function error($message, array $context = array())$/;"	f
error	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function error($message, array $context = array());$/;"	f
error	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function error($message, array $context = array())$/;"	f
errorCodeDatabaseNotFound	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private static $errorCodeDatabaseNotFound = 60;$/;"	v
errorCodeNamespaceNotFound	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private static $errorCodeNamespaceNotFound = 26;$/;"	v
errorDispatcher	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $this->errorDispatcher = $this->initErrorDispatcherMock($this->connector);$/;"	v
errorDispatcher	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected $errorDispatcher;$/;"	v
errorHandler	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $errorHandler = ErrorHandler::register($this->initLogger($classesPartialsTraceIgnore ? ['classesPartialsTraceIgnore' => $classesPartialsTraceIgnore] : []), false);$/;"	v
errorIfOpened	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function errorIfOpened()$/;"	f
errorLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->errorLevelMap = array_replace($this->defaultErrorLevelMap(), $levelMap);$/;"	v
errorLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $errorLevelMap;$/;"	v
errorLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public static function register(LoggerInterface $logger, $errorLevelMap = [], $exceptionLevelMap = [], $fatalLevel = null): self$/;"	v
errorLoggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $errorLoggerRecord = $this->getRecord(Logger::ERROR);$/;"	v
errorMessage	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->errorMessage = null;$/;"	v
errorMessage	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->errorMessage = preg_replace('{^(fopen|mkdir)\\(.*?\\): }', '', $msg);$/;"	v
errorMessage	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private $errorMessage;$/;"	v
errorMessageNamespaceNotFound	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private static $errorMessageNamespaceNotFound = 'ns not found';$/;"	v
errorPipes	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $errorPipes = [$this->pipes[2]];$/;"	v
error_log	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^function error_log()$/;"	f
error_message	vendor/hassankhan/config/src/FileParser/Json.php	/^                $error_message = json_last_error_msg();$/;"	v
error_message	vendor/hassankhan/config/src/FileParser/Json.php	/^            $error_message  = 'Syntax error';$/;"	v
errors	vendor/hassankhan/config/src/FileParser/Xml.php	/^            $errors      = libxml_get_errors();$/;"	v
errors	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $errors = $this->readProcessErrors();$/;"	v
errstr	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $errstr;$/;"	v
escape	vendor/pinguo/plates/src/Template/Template.php	/^    public function escape($string, $functions = null)$/;"	f
evalMock	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function evalMock($context, string $script, array $args = array(), int $numKeys = 0)$/;"	f
evalMock	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    public function evalMock(array $arguments)$/;"	f
evalMockArgs	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $evalMockArgs = array_slice($args, $numKeys);$/;"	v
evalMockArgs	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $evalMockArgs = array_slice($args, $numKeys);$/;"	v
eventAdd	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function eventAdd()$/;"	f
eventId	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $eventId = '31423';$/;"	v
eventName	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $this->eventName = $eventName;$/;"	v
eventName	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    private $eventName;$/;"	v
events	vendor/pinguo/php-msf/src/Process/Inotify.php	/^            $events = inotify_read($inotifyFd);$/;"	v
ex	app/Controllers/MySQL.php	/^        $ex = yield $mysqlPool->select('*')->from('user')->where('id', 3)->go($id);$/;"	v
ex	app/Controllers/MySQL.php	/^        $ex = yield $mysqlProxy->select('*')->from('user')->where('id', 3)->go($id);$/;"	v
ex	app/Tasks/Demo.php	/^        $ex = $mysqlPool->select('*')->from('user')->where('id', 3)->go($id);$/;"	v
exception	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/ExceptionConverterTest.php	/^        $exception = ExceptionConverter::toLegacy($e);$/;"	v
exception	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $exception = isset($error['exception']) ? $error['exception'] : null;$/;"	v
exception	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $exception = $context['exception'];$/;"	v
exception	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $exception = new \\RuntimeException('Foo');$/;"	v
exception	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $exception = new \\RuntimeException('Foo', 0, new \\LogicException('Wut?'));$/;"	v
exception	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $exception = new \\Exception('foo');$/;"	v
exception	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $exception = new ExceptionTestHandler();$/;"	v
exception	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->exception = null;$/;"	v
exception	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->exception = $exception;$/;"	v
exception	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $exception;$/;"	v
exceptionProvider	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/ExceptionConverterTest.php	/^    public function exceptionProvider()$/;"	f
exceptionTraceAsString	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $this->exceptionTraceAsString = $exceptionTraceAsString;$/;"	v
exceptionTraceAsString	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private $exceptionTraceAsString;$/;"	v
exchange	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $this->exchange = $exchange;$/;"	v
exchange	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected $exchange;$/;"	v
exchange	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^            ->will($this->returnCallback(function (AMQPMessage $msg, $exchange = "", $routing_key = "", $mandatory = false, $immediate = false, $ticket = null) use (&$messages) {$/;"	v
exchange	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $exchange = $this->getMockBuilder('AMQPExchange')$/;"	v
exchange	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $exchange = $this->getMockBuilder('PhpAmqpLib\\Channel\\AMQPChannel')$/;"	v
exchangeName	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $this->exchangeName = $exchangeName;$/;"	v
exchangeName	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected $exchangeName;$/;"	v
exchangeName	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function __construct($exchange, $exchangeName = null, $level = Logger::DEBUG, $bubble = true)$/;"	v
excludeFields	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->excludeFields = $excludeFields;$/;"	v
excludeFields	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $excludeFields;$/;"	v
excludeFields	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function excludeFields(array $record)$/;"	f
execute	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function execute($code, array $args = [])$/;"	f
execute	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    final public function execute(array $writeOptions = [])$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Count.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Executable.php	/^    public function execute(Server $server);$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Find.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/Update.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^    public function execute(Server $server)$/;"	f
execute	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    public static function execute($ch, $retries = 5, $closeAfterDone = true)$/;"	f
execute	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function execute($data);$/;"	f
execute	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function execute($data)$/;"	f
execute	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function execute($data)$/;"	f
executeAct	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function executeAct(array $act)$/;"	f
executeAssert	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function executeAssert(array $assert, $actualResult)$/;"	f
executeAssertResult	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function executeAssertResult(array $operation, $expectedResult, $actualResult)$/;"	f
executeAssertResult	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function executeAssertResult($expectedResult, $actualResult)$/;"	f
executeCommand	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private function executeCommand(Server $server)$/;"	f
executeCommand	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    private function executeCommand(Server $server)$/;"	f
executeCommand	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private function executeCommand(Server $server)$/;"	f
executeDataModification	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function executeDataModification(array $dataModification)$/;"	f
executeLegacy	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private function executeLegacy(Server $server)$/;"	f
executeLegacy	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    private function executeLegacy(Server $server)$/;"	f
executeLegacy	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private function executeLegacy(Server $server)$/;"	f
executeOperation	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function executeOperation(array $operation)$/;"	f
executeOutcome	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function executeOutcome(array $operation, array $outcome, $actualResult)$/;"	f
exists	vendor/pinguo/plates/src/Engine.php	/^     * Check if a template function exists.$/;"	f
exists	vendor/pinguo/plates/src/Engine.php	/^    public function exists($name)$/;"	f
exists	vendor/pinguo/plates/src/Template/Folders.php	/^    public function exists($name)$/;"	f
exists	vendor/pinguo/plates/src/Template/Functions.php	/^     * Check if a template function exists.$/;"	f
exists	vendor/pinguo/plates/src/Template/Functions.php	/^    public function exists($name)$/;"	f
exists	vendor/pinguo/plates/src/Template/Template.php	/^    public function exists()$/;"	f
exitStat	vendor/pinguo/php-msf/src/Server.php	/^                $exitStat = 1;$/;"	v
exitStat	vendor/pinguo/php-msf/src/Server.php	/^            $exitStat = $this->sysCache->get($key);$/;"	v
expFormatted	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^            $expFormatted = $formatted;$/;"	v
expFormatted	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^            $expFormatted = array('foo' => array('N' => 1), 'bar' => array('N' => 2));$/;"	v
expandNewlines	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^        $this->expandNewlines = $expandNewlines;$/;"	v
expandNewlines	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected $expandNewlines;$/;"	v
expectCall	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectCall = $this->connector->expects($this->once())->method($method);$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $expected = [$/;"	v
expected	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $expected = ['_id' => 3, 'x' => 33];$/;"	v
expected	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $expected = $msg;$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $expected = <<<EOF$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = $msg;$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $expected = [$formatter->format($msg)];$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $expected = $expectedFormatter->format($record);$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $expected = $record;$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $expected = [$/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $expected = array($/;"	v
expected	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $expected = $input;$/;"	v
expected	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array($/;"	v
expected	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('info {Message {nothing} Bob Bar a}');$/;"	v
expected	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('warning Crazy context data');$/;"	v
expected	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $expected = array('warning DUMMY');$/;"	v
expected2	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $expected2 = [$/;"	v
expectedByte	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^            $expectedByte = isset($expectedBytes[$i]) ? $expectedBytes[$i] : '';$/;"	v
expectedChunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $expectedChunkSize = ($this->chunkOffset === $this->numChunks - 1)$/;"	v
expectedChunksCollection	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $this->expectedChunksCollection = new Collection($this->manager, $this->getDatabaseName(), 'expected.chunks');$/;"	v
expectedChunksCollection	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private $expectedChunksCollection;$/;"	v
expectedCollection	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $this->expectedCollection = new Collection($this->manager, $this->getDatabaseName(), $this->getCollectionName() . '.expected');$/;"	v
expectedCollection	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private $expectedCollection;$/;"	v
expectedContent	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $expectedContent = substr(file_get_contents(__FILE__), 0, 100);$/;"	v
expectedData	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $expectedData = isset($test['outcome']['collection']['data']) ? $test['outcome']['collection']['data'] : null;$/;"	v
expectedData	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function initializeData(array $initialData, array $expectedData = null)$/;"	v
expectedFields	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $expectedFields = array($/;"	v
expectedFilesCollection	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $this->expectedFilesCollection = new Collection($this->manager, $this->getDatabaseName(), 'expected.files');$/;"	v
expectedFilesCollection	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private $expectedFilesCollection;$/;"	v
expectedFormatter	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $expectedFormatter = new LineFormatter(null, null, true, true);$/;"	v
expectedIndex	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $expectedIndex = 0;$/;"	v
expectedIndex	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $expectedIndex = 0;$/;"	v
expectedIndex	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $expectedIndex = 0;$/;"	v
expectedIndex	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $expectedIndex = 0;$/;"	v
expectedIndexInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $expectedIndexInfo = [$idIndex, $expectedIndex];$/;"	v
expectedInfo	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^        $expectedInfo = [$/;"	v
expectedInfo	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $expectedInfo = [$/;"	v
expectedInfo	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^        $expectedInfo = [$/;"	v
expectedJson	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^        $expectedJson = '["foo",[1,2,3],{"foo":1,"bar":2,"baz":3},[[[]]]]';$/;"	v
expectedJson	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^        $expectedJson = '{"foo":"bar","array":[1,2,3],"object":{"0":1,"1":2,"2":3},"nested":{"0":{"0":{}}}}';$/;"	v
expectedLastChunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^            $this->expectedLastChunkSize = ($this->length - (($this->numChunks - 1) * $this->chunkSize));$/;"	v
expectedLastChunkSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $expectedLastChunkSize = 0;$/;"	v
expectedMessage	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $expectedMessage = preg_replace('{[\\r\\n].*}', '', $record['message']);$/;"	v
expectedMessage	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $expectedMessage = new Message();$/;"	v
expectedMessage	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectedMessage = $message . ' ' . json_encode(array_slice($context, 1));$/;"	v
expectedMessage	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $expectedMessage = substr($message, 0, 505);$/;"	v
expectedMessage	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $expectedMessage = new \\Swift_Message();$/;"	v
expectedNames	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $expectedNames = ['x_1', 'y_-1_z_1', 'g_2dsphere_z_1', 'my_ttl'];$/;"	v
expectedReadLength	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^            $expectedReadLength = min(4096, strlen($input) - strlen($buffer));$/;"	v
expectedTags	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $expectedTags = mt_rand();$/;"	v
expectedWriteLength	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^            $expectedWriteLength = min(4096, strlen($input) - $offset);$/;"	v
expire	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->expire = $expire;$/;"	v
expire	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $expire;$/;"	v
expire	vendor/pinguo/php-msf/src/Base/Output.php	/^        $expire = 0,$/;"	v
explain	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function explain()$/;"	f
explained	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $explained = TypeConverter::toLegacy(iterator_to_array($this->db->command($command))[0]);$/;"	v
explodeArrays	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $explodeArrays = false,$/;"	v
explodeArrays	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->explodeArrays = $explodeArrays;$/;"	v
explodeArrays	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $explodeArrays;$/;"	v
extension	vendor/hassankhan/config/src/Config.php	/^                $extension = array_pop($parts);$/;"	v
extension	vendor/hassankhan/config/src/Config.php	/^            $extension = array_pop($parts);$/;"	v
extension	vendor/pinguo/php-msf/src/HttpServer.php	/^        $extension = strtolower($info['extension'] ?? '');$/;"	v
extensions	vendor/pinguo/plates/src/Engine.php	/^    public function loadExtensions(array $extensions = array())$/;"	v
extra	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function put($filename, array $extra = [], array $options = [])$/;"	v
extra	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeBytes($bytes, array $extra = [], array $options = [])$/;"	v
extra	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeFile($filename, array $extra = [], array $options = [])$/;"	v
extra	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    protected function prepareFile($data = 'abcd', $extra = [])$/;"	v
extra	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    protected function prepareFile($data = 'abcd', $extra = [])$/;"	v
extra	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $extra = self::dump('Extra', $record['extra']);$/;"	v
extra	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $extra = array_intersect_key($record['extra'], $this->parameterNames);$/;"	v
extra	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $extra = array('tags' => array('web'));$/;"	v
extraFields	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^                $this->extraFields = $extraFields;$/;"	v
extraFields	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    protected $extraFields = [$/;"	v
extraFields	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    public function __construct($serverData = null, array $extraFields = null)$/;"	v
extraName	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^        foreach ($this->extraFields as $extraName => $serverName) {$/;"	v
extraPrefix	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->extraPrefix = $extraPrefix;$/;"	v
extraPrefix	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $extraPrefix;$/;"	v
extraPrefix	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->extraPrefix = $extraPrefix;$/;"	v
extraPrefix	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $extraPrefix;$/;"	v
extractUrlOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private function extractUrlOptions($server)$/;"	f
extract_id_from_inserted_document	vendor/mongodb/mongodb/src/functions.php	/^function extract_id_from_inserted_document($document)$/;"	f
facilities	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $facilities = [$/;"	v
facility	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^            $facility = $this->facilities[strtolower($facility)];$/;"	v
facility	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^        $this->facility = $facility;$/;"	v
facility	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $facility;$/;"	v
facility	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    public function __construct($ident, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $logopts = LOG_PID)$/;"	v
factor	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^        $this->factor = $factor;$/;"	v
factor	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    protected $factor;$/;"	v
failMaxTimeMS	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function failMaxTimeMS()$/;"	f
fallback	vendor/pinguo/plates/src/Engine.php	/^    public function addFolder($name, $directory, $fallback = false)$/;"	v
fallback	vendor/pinguo/plates/src/Template/Folder.php	/^        $this->fallback = $fallback;$/;"	v
fallback	vendor/pinguo/plates/src/Template/Folder.php	/^    protected $fallback;$/;"	v
fallback	vendor/pinguo/plates/src/Template/Folder.php	/^    public function __construct($name, $path, $fallback = false)$/;"	v
fallback	vendor/pinguo/plates/src/Template/Folders.php	/^    public function add($name, $path, $fallback = false)$/;"	v
fallbackClass	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^    public static function toLegacy(Exception\\Exception $e, $fallbackClass = 'MongoException')$/;"	v
fallbackDirsPsr0	vendor/composer/ClassLoader.php	/^                $this->fallbackDirsPsr0 = array_merge($/;"	v
fallbackDirsPsr0	vendor/composer/ClassLoader.php	/^            $this->fallbackDirsPsr0 = (array) $paths;$/;"	v
fallbackDirsPsr0	vendor/composer/ClassLoader.php	/^    private $fallbackDirsPsr0 = array();$/;"	v
fallbackDirsPsr4	vendor/composer/ClassLoader.php	/^                $this->fallbackDirsPsr4 = array_merge($/;"	v
fallbackDirsPsr4	vendor/composer/ClassLoader.php	/^            $this->fallbackDirsPsr4 = (array) $paths;$/;"	v
fallbackDirsPsr4	vendor/composer/ClassLoader.php	/^    private $fallbackDirsPsr4 = array();$/;"	v
fatalErrors	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private static $fatalErrors = [E_ERROR, E_PARSE, E_CORE_ERROR, E_COMPILE_ERROR, E_USER_ERROR];$/;"	v
fatalHandlerProvider	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function fatalHandlerProvider()$/;"	f
fatalLevel	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^                $this->fatalLevel === null ? LogLevel::ALERT : $this->fatalLevel,$/;"	v
fatalLevel	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->fatalLevel = $level;$/;"	v
fatalLevel	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $fatalLevel;$/;"	v
fetch	vendor/pinguo/plates/src/Template/Template.php	/^    public function fetch($name, array $data = array())$/;"	f
fetchedRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $fetchedRef = $db->getDBRef(['$ref' => 'test', '$id' => $id]);$/;"	v
fetchedRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $fetchedRef = \\MongoDBRef::get($db, ['$ref' => 'test', '$id' => $id]);$/;"	v
field	vendor/mongodb/mongodb/src/functions.php	/^    foreach ($document as $field => $type) {$/;"	v
fieldName	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^        foreach ($index['key'] as $fieldName => $order) {$/;"	v
fieldName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $this->fieldName = (string) $fieldName;$/;"	v
fieldName	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private $fieldName;$/;"	v
fields	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^        if (! is_array($fields) || $fields === []) {$/;"	v
fields	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function findOne($query = [], array $fields = [], array $options = [])$/;"	v
fields	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function fields(array $f)$/;"	f
fields	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function findOne($query = [], array $fields = [], array $options = [])$/;"	v
fields	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $fields = array();$/;"	v
fields	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $fields = [],$/;"	v
file	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $file = $this->insertFile($record, $options);$/;"	v
file	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^        $file = $this->current();$/;"	v
file	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^        $file = parent::current();$/;"	v
file	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $this->file = $file;$/;"	v
file	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public $file;$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = $this->getFile();$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = $this->getFile(['_id' => $id, 'length' => 4]);$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = $this->getGridFS()->findOne(['_id' => $id]);$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = $this->getGridFS()->findOne(['filename' => 'foo']);$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = [$/;"	v
file	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $file = array_merge($file, $extra);$/;"	v
file	vendor/composer/ClassLoader.php	/^            $file = $this->findFileWithExtension($class, '.hh');$/;"	v
file	vendor/composer/ClassLoader.php	/^            $file = apcu_fetch($this->apcuPrefix.$class, $hit);$/;"	v
file	vendor/composer/ClassLoader.php	/^        $file = $this->findFileWithExtension($class, '.php');$/;"	v
file	vendor/composer/ClassLoader.php	/^        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $file = $this->collectionWrapper->findFileByFilenameAndRevision($filename, $options['revision']);$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $file = $this->collectionWrapper->findFileById($id);$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $file = $this->getRawFileDocumentForStream($stream);$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $file = \\MongoDB\\apply_type_map_to_document($file, $typeMap);$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->file = $file;$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $file;$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $file = $this->stream->getFile();$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->file = [$/;"	v
file	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $file;$/;"	v
file	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleError($code, $message, $file = '', $line = 0, $context = [])$/;"	v
file	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $file = $record['extra']['file'];$/;"	v
file	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $file = $line = '';$/;"	v
file	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $file = __FILE__;$/;"	v
file	vendor/pinguo/php-msf/src/Server.php	/^                    $file = $error['file'];$/;"	v
file	vendor/pinguo/plates/src/Template/Name.php	/^        $file   = array_pop($parts);$/;"	v
file	vendor/pinguo/plates/src/Template/Name.php	/^        $this->file = $file;$/;"	v
file	vendor/pinguo/plates/src/Template/Name.php	/^    protected $file;$/;"	v
fileCollectionInsert	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private function fileCollectionInsert()$/;"	f
fileDocument	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $fileDocument = $this->bucket->findOne($/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $fileDocument = $this->bucket->getFileDocumentForStream($stream);$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $fileDocument = $this->filesCollection->findOne($/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $fileDocument = $this->filesCollection->findOne(['_id' => $id]);$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $fileDocument = current($cursor->toArray());$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $fileDocument = $this->collectionWrapper->findFileById($fileId);$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $fileDocument = $this->collectionWrapper->findFileById('length-0');$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $fileDocument = $this->collectionWrapper->findFileById('length-10');$/;"	v
fileDocument	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^        $fileDocument = $this->filesCollection->findOne($/;"	v
fileExtension	vendor/pinguo/plates/src/Engine.php	/^        $this->fileExtension = new FileExtension($fileExtension);$/;"	v
fileExtension	vendor/pinguo/plates/src/Engine.php	/^    protected $fileExtension;$/;"	v
fileExtension	vendor/pinguo/plates/src/Engine.php	/^    public function __construct($directory = null, $fileExtension = 'php')$/;"	v
fileExtension	vendor/pinguo/plates/src/Template/FileExtension.php	/^        $this->fileExtension = $fileExtension;$/;"	v
fileExtension	vendor/pinguo/plates/src/Template/FileExtension.php	/^    protected $fileExtension;$/;"	v
fileId	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $fileId = $record['_id'];$/;"	v
fileIdentifier	vendor/composer/autoload_real.php	/^        foreach ($includeFiles as $fileIdentifier => $file) {$/;"	v
fileInfo	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $fileInfo = pathinfo($this->filename);$/;"	v
fileInfo	vendor/pinguo/php-msf/src/Process/Inotify.php	/^            $fileInfo = pathinfo($file);$/;"	v
filePath	vendor/pinguo/plates/src/Extension/Asset.php	/^        $filePath = $this->path . '\/' .  ltrim($url, '\/');$/;"	v
filePermission	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->filePermission = $filePermission;$/;"	v
filePermission	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $filePermission;$/;"	v
filename	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^            $filename = $this->getFilename();$/;"	v
filename	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^            $filename = 'file';$/;"	v
filename	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $filename = '\/tmp\/test-mongo-grid-fs-file';$/;"	v
filename	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $filename = __FILE__;$/;"	v
filename	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $filename = basename(__FILE__);$/;"	v
filename	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $filename  = isset($error['file']) ? $error['file'] : __FILE__;$/;"	v
filename	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $filename = (string) $filename;$/;"	v
filename	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filename = $filename;$/;"	v
filename	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $filename;$/;"	v
filenameFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filenameFormat = $filenameFormat;$/;"	v
filenameFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->filenameFormat = '{filename}-{date}';$/;"	v
filenameFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $filenameFormat;$/;"	v
filenameFormatProvider	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function filenameFormatProvider()$/;"	f
filenameMethod	vendor/pinguo/plates/src/Extension/Asset.php	/^        $this->filenameMethod = $filenameMethod;$/;"	v
filenameMethod	vendor/pinguo/plates/src/Extension/Asset.php	/^    public $filenameMethod;$/;"	v
filenameMethod	vendor/pinguo/plates/src/Extension/Asset.php	/^    public function __construct($path, $filenameMethod = false)$/;"	v
files	vendor/composer/ClassLoader.php	/^     * Turns on searching the include path for class files.$/;"	c
files	vendor/composer/autoload_static.php	/^    public static $files = array ($/;"	v
files	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $files = new RegexIterator(new RecursiveIteratorIterator(new RecursiveDirectoryIterator($srcDir)), '\/\\.php$\/i');$/;"	v
filesCollection	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $this->filesCollection = new Collection($manager, $databaseName, sprintf('%s.files', $bucketName), $collectionOptions);$/;"	v
filesCollection	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private $filesCollection;$/;"	v
filesCollection	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^        $this->filesCollection = new Collection($this->manager, $this->getDatabaseName(), 'fs.files');$/;"	v
filesCollection	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    protected $filesCollection;$/;"	v
filesName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $this->filesName = $prefix . '.files';$/;"	v
filesName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    protected $filesName;$/;"	v
filter	vendor/mongodb/mongodb/src/Collection.php	/^    public function distinct($fieldName, $filter = [], array $options = [])$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $this->filter = $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Count.php	/^    public function __construct($databaseName, $collectionName, $filter = [], array $options = [])$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $this->filter = $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $this->filter = $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    public function __construct($databaseName, $collectionName, $fieldName, $filter = [], array $options = [])$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $this->filter = $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $filter = empty($this->options['filter']) ? [] : (array) $this->options['filter'];$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $filter = ['ns' => $this->databaseName . '.' . $this->collectionName];$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $this->filter = $filter;$/;"	v
filter	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private $filter;$/;"	v
filter	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $filter = ['_id' => ['$lt' => 5]];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $filter = ['_id' => 1];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $filter = ['_id' => ['$gt' => 1]];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $filter = ['_id' => 1];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $filter = ['_id' => 5];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $filter = ['_id' => ['$gt' => 1]];$/;"	v
filter	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $filter = ['x' => 66];$/;"	v
filterEmptyFields	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function filterEmptyFields(array $record)$/;"	f
filtered	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $filtered = $this->filterEmptyFields($record['formatted']);$/;"	v
filtered	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $filtered = [];$/;"	v
finalMethods	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $finalMethods = array_merge($defaultMethods, $newMethods);$/;"	v
finalize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $finalize = 'function (key, value) { value.test = "test"; return value; }';$/;"	v
finalizeWrite	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function finalizeWrite()$/;"	f
find	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function find(array $query = [], array $fields = [])$/;"	f
find	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function find(array $query = [], array $fields = [])$/;"	f
find	vendor/mongodb/mongodb/src/Collection.php	/^    public function find($filter = [], array $options = [])$/;"	f
find	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function find($filter = [], array $options = [])$/;"	f
find	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^        $this->find = new Find($/;"	v
find	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^    private $find;$/;"	v
findAndModify	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function findAndModify(array $query, array $update = null, array $fields = null, array $options = [])$/;"	f
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^        $this->findAndModify = new FindAndModify($/;"	v
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^    private $findAndModify;$/;"	v
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^        $this->findAndModify = new FindAndModify($/;"	v
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^    private $findAndModify;$/;"	v
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^        $this->findAndModify = new FindAndModify($/;"	v
findAndModify	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^    private $findAndModify;$/;"	v
findChunksByFileId	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findChunksByFileId($id, $fromChunk = 0)$/;"	f
findControllerClassName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function findControllerClassName();$/;"	f
findControllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function findControllerClassName()$/;"	f
findFile	vendor/composer/ClassLoader.php	/^    public function findFile($class)$/;"	f
findFileByFilenameAndRevision	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findFileByFilenameAndRevision($filename, $revision)$/;"	f
findFileById	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findFileById($id)$/;"	f
findFileWithExtension	vendor/composer/ClassLoader.php	/^    private function findFileWithExtension($class, $ext)$/;"	f
findFiles	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findFiles($filter, array $options = [])$/;"	f
findOne	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function findOne($query = [], array $fields = [], array $options = [])$/;"	f
findOne	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function findOne($query = [], array $fields = [], array $options = [])$/;"	f
findOne	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOne($filter = [], array $options = [])$/;"	f
findOne	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function findOne($filter = [], array $options = [])$/;"	f
findOne	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function findOne($/;"	f
findOneAndDelete	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndDelete($filter, array $options = [])$/;"	f
findOneAndReplace	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndReplace($filter, $replacement, array $options = [])$/;"	f
findOneAndUpdate	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndUpdate($filter, $update, array $options = [])$/;"	f
findOneFile	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findOneFile($filter, array $options = [])$/;"	f
fingerprint	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $fingerprint = ['{{ default }}', 'other value'];$/;"	v
first	vendor/composer/ClassLoader.php	/^        $first = $class[0];$/;"	v
first	vendor/composer/ClassLoader.php	/^        $first = $prefix[0];$/;"	v
first	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $first = new Logger('first', [$handler = new TestHandler()]);$/;"	v
firstChunk	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $firstChunk = $chunks[0];$/;"	v
firstChunk	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $firstChunk = $newChunksCollection->findOne([], ['sort' => ['n' => 1]]);$/;"	v
firstDot	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^        $firstDot = strpos($info['name'], '.');$/;"	v
firstKey	vendor/mongodb/mongodb/src/functions.php	/^    $firstKey = (string) key($document);$/;"	v
fixtures	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $fixtures = [$/;"	v
flag	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                            $flag = true;$/;"	v
flag	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                    $flag = false;$/;"	v
flag	vendor/pinguo/php-msf/src/Process/Inotify.php	/^                    $flag = false;$/;"	v
flag	vendor/pinguo/php-msf/src/Process/Inotify.php	/^            $flag = true;$/;"	v
flags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $flags = 0;$/;"	v
flags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^            $this->flags = $regex->getFlags();$/;"	v
flags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^        $this->flags = $matches[2];$/;"	v
flags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^    public $flags;$/;"	v
flags	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public function __construct($input = [], $flags = ArrayObject::ARRAY_AS_PROPS, $iterator_class = 'ArrayIterator')$/;"	v
flags	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        socket_sendto($this->socket, $chunk, strlen($chunk), $flags = 0, $this->ip, $this->port);$/;"	v
flags	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^            ->will($this->returnCallback(function ($message, $routing_key, $flags = 0, $attributes = []) use (&$messages) {$/;"	v
flags	vendor/pinguo/plates/src/Template/Template.php	/^            $flags = ENT_QUOTES | (defined('ENT_SUBSTITUTE') ? ENT_SUBSTITUTE : 0);$/;"	v
flags	vendor/pinguo/plates/src/Template/Template.php	/^        static $flags;$/;"	v
fluentHandler	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^ * $fluentHandler = new Monolog\\Handler\\SocketHandler('unix:\/\/\/var\/run\/td-agent\/td-agent.sock');$/;"	v
flush	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function flush()$/;"	f
flush	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    public function flush()$/;"	f
flush	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function flush()$/;"	f
flushOnOverflow	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->flushOnOverflow = $flushOnOverflow;$/;"	v
flushOnOverflow	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $flushOnOverflow;$/;"	v
folder	vendor/pinguo/plates/src/Template/Name.php	/^        $folder = implode('\/', $parts);$/;"	v
folder	vendor/pinguo/plates/src/Template/Name.php	/^        $this->folder = $this->engine->getFolders()->get($folder);$/;"	v
folder	vendor/pinguo/plates/src/Template/Name.php	/^    protected $folder;$/;"	v
folders	vendor/pinguo/plates/src/Engine.php	/^        $this->folders = new Folders();$/;"	v
folders	vendor/pinguo/plates/src/Engine.php	/^    protected $folders;$/;"	v
folders	vendor/pinguo/plates/src/Template/Folders.php	/^    protected $folders = array();$/;"	v
foo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    private $foo = 'bar';$/;"	v
foo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoLogTest.php	/^        $foo = function() {};$/;"	v
foo	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public $foo = 'fooValue';$/;"	v
foo	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $foo = new \\stdClass();$/;"	v
foo	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $this->foo = 'BAR';$/;"	v
foo	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $foo = 'fooValue';$/;"	v
foo	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $foo;$/;"	v
for	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^ * Result class for a bulk write operation.$/;"	c
for	vendor/mongodb/mongodb/src/Client.php	/^     * This is the preferred class for connecting to a MongoDB server or$/;"	c
for	vendor/mongodb/mongodb/src/DeleteResult.php	/^ * Result class for a delete operation.$/;"	c
for	vendor/mongodb/mongodb/src/InsertManyResult.php	/^ * Result class for a multi-document insert operation.$/;"	c
for	vendor/mongodb/mongodb/src/InsertOneResult.php	/^ * Result class for a single-document insert operation.$/;"	c
for	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^ * Model class for a BSON array.$/;"	c
for	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^ * Model class for a BSON document.$/;"	c
for	vendor/mongodb/mongodb/src/Operation/Executable.php	/^ * Executable interface for operation classes.$/;"	i
for	vendor/mongodb/mongodb/src/UpdateResult.php	/^ * Result class for an update operation.$/;"	c
for	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^ * Base class for Collection functional tests.$/;"	c
for	vendor/mongodb/mongodb/tests/Database/FunctionalTestCase.php	/^ * Base class for Database functional tests.$/;"	c
for	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^ * Base class for GridFS functional tests.$/;"	c
for	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^     * Returns the exception class for the "error" section of an "assert" block.$/;"	c
for	vendor/mongodb/mongodb/tests/Operation/FunctionalTestCase.php	/^ * Base class for Operation functional tests.$/;"	c
for	vendor/mongodb/mongodb/tests/Operation/TestCase.php	/^ * Base class for Operation unit tests.$/;"	c
for	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^ * Base class for all mail handlers$/;"	c
for	vendor/pinguo/php-msf/src/Pools/Miner.php	/^ * A dead simple PHP class for building SQL statements. No manual string$/;"	c
for	vendor/pinguo/plates/src/Extension/ExtensionInterface.php	/^ * A common interface for extensions.$/;"	i
for	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^ * Provides a base test class for ensuring compliance with the LoggerInterface.$/;"	c
forceConnect	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private function forceConnect()$/;"	f
forceError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function forceError()$/;"	f
forceError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function forceError()$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    public function format(array $record)$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function format(array $record)$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function format(array $record): array$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^    public function format(array $record);$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function format(array $record): Message$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->format = $format ?: static::SIMPLE_FORMAT;$/;"	v
format	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $format;$/;"	v
format	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function __construct(string $format = null, string $dateFormat = null, bool $allowInlineLineBreaks = false, bool $ignoreEmptyContextAndExtra = false)$/;"	v
format	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function format(array $record): array$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function format(array $record)$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^    public function format(array $record): array$/;"	f
format	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    public function format(array $record): string$/;"	f
format	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $format = substr($format, 0, $pos) . '%c' . $match[1][0] . '%c' . substr($format, $pos + strlen($match[0][0]));$/;"	v
format	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $format = '%c' . $formatted;$/;"	v
format	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $format = self::getResponseFormat();$/;"	v
format	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->format = $format;$/;"	v
format	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $format;$/;"	v
format	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $format = "Y-m-d";$/;"	v
format	vendor/pinguo/php-log/src/PGLog.php	/^                $format = new LineFormatter($handler['format'], $handler['dateFormat']);$/;"	v
format	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function dump($var, $format = true, $return = false)$/;"	v
format	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function dumpInternal(&$output, $var, $level, $format = true, $truncated = true)$/;"	v
formatArray	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatArray(array $record, int $nestingLevel = 0)$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function formatBatch(array $records): array$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function formatBatch(array $records): string$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php	/^    public function formatBatch(array $records);$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    public function formatBatch(array $records): string$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function formatBatch(array $records): string$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function formatBatch(array $records): string$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function formatBatch(array $records): array$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    public function formatBatch(array $records)$/;"	f
formatBatchJson	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function formatBatchJson(array $records): string$/;"	f
formatBatchNewlines	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function formatBatchNewlines(array $records): string$/;"	f
formatBytes	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected function formatBytes(int $bytes)$/;"	f
formatDate	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatDate(\\DateTimeInterface $value, int $nestingLevel): UTCDateTime$/;"	f
formatDate	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function formatDate(\\DateTimeInterface $date)$/;"	f
formatException	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatException(\\Throwable $exception, int $nestingLevel)$/;"	f
formatException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatException($exception, $previous = null)$/;"	f
formatExceptionFilePathWithLine	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatExceptionFilePathWithLine($exception)$/;"	f
formatObject	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatObject($value, int $nestingLevel)$/;"	f
formatRecordWithExceptionInContext	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatRecordWithExceptionInContext(JsonFormatter $formatter, $exception)$/;"	f
formatted	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $formatted = [];$/;"	v
formatted	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $formatted = [];$/;"	v
formatted	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $formatted = $this->client->formatAttributes($filtered);$/;"	v
formatted	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $formatted = $this->marshaler->marshalItem($filtered);$/;"	v
formatted	vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php	/^        $formatted = $this->formatBytes($bytes);$/;"	v
formatted	vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php	/^        $formatted = $this->formatBytes($bytes);$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatted = $formatter->format($record);$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatted = $formatter->formatBatch($records);$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatted = $formatter->format([$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatted = $formatter->formatBatch([$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $formatted = $this->formatter->format([$/;"	v
formatted	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $formatted = ['foo' => 1, 'bar' => 2];$/;"	v
formattedException	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $formattedException = [$/;"	v
formattedException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException = $this->formatException($exception);$/;"	v
formattedException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException = $this->formatException($exception, $formattedPrevException);$/;"	v
formattedException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedException =$/;"	v
formattedMessageStr	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $formattedMessageStr = implode('', $formattedMessages);$/;"	v
formattedMessages	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $formattedMessages = [$lastFormattedMessage];$/;"	v
formattedMessages	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $formattedMessages = [];$/;"	v
formattedPrevException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedPrevException = $this->formatException($exception->getPrevious());$/;"	v
formattedRecord	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formattedRecord = $formatter->format($record);$/;"	v
formattedResult	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formattedResult = $formatter->format($record);$/;"	v
formattedThrowable	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formattedThrowable = $this->formatException($throwable);$/;"	v
formatted_decoded	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatted_decoded = json_decode($formatter->format($record), true);$/;"	v
formatted_decoded	vendor/monolog/monolog/tests/Monolog/Formatter/LogmaticFormatterTest.php	/^        $formatted_decoded = json_decode($formatter->format($record), true);$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^            $this->formatter = $this->getDefaultFormatter();$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^        $this->formatter = $formatter;$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^    protected $formatter;$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^        $formatter = new LogmaticFormatter();$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->formatter = $formatter;$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $formatter;$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $formatter = parent::getFormatter();$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $formatter = parent::getFormatter();$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $formatter = new LineFormatter("%channel%.%level_name%: %message% %extra%");$/;"	v
formatter	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^        $formatter = $this->createMock(FormatterInterface::class);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $formatter = new ChromePHPFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $formatter = new ElasticaFormatter('my_index', 'doc_type');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $formatter = new FlowdockFormatter('test_source', 'source@test.com');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter(false);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $formatter = new FluentdFormatter(true);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter('LONG_SYSTEM_NAME', null, 'ctxt_', PHP_INT_MAX);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter('mysystem');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter(null, 'EXT');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $formatter = new GelfMessageFormatter(null, null, 'CTX');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_JSON, false);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_NEWLINES);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $formatter = new JsonFormatter(JsonFormatter::BATCH_MODE_NEWLINES, false);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter("[%datetime%] %channel%.%level_name%: %message% %context% %extra.file% %extra%\\n", 'Y-m-d');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter('%context.foo% => %extra.foo%');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d', false, true);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $formatter = new LineFormatter(null, 'Y-m-d', true);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatter = new LogglyFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $formatter = new LogglyFormatter(LogglyFormatter::BATCH_MODE_JSON);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogmaticFormatterTest.php	/^        $formatter = new LogmaticFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('app', 'test', null, 'ctxt_');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('mysystem', null, null, 'ctxt_');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', 'hostname');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', 'hostname', null, 'ctxt_');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, 'EXT', 'ctxt_');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, null, 'CTX');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $formatter = new LogstashFormatter('test', null, null, 'ctxt_');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter($traceDepth, $traceAsString);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(0);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2, false);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $formatter = new MongoDBFormatter(2, true);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatter = new NormalizerFormatter('Y-m-d');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $formatter = new NormalizerFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $this->formatter = new ScalarFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    private $formatter;$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $formatter = $this->createMock('Monolog\\Formatter\\FormatterInterface');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new ElasticaFormatter($this->options['index'], $this->options['type']);$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new ElasticaFormatter('index_new', 'type_new');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $formatter = new NormalizerFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $formatter = $this->createMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $formatter = $this->createMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $formatter = $this->createMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $formatter = $handler->getFormatter();$/;"	v
formatter	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $formatter = new LineFormatter();$/;"	v
formatter2	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $formatter2 = $this->createMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
formatterMock	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $formatterMock = $this->getMockBuilder('Monolog\\Formatter\\NormalizerFormatter')$/;"	v
formatterResult	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $formatterResult = [$/;"	v
found	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $found = $updateResult->getMatchedCount() !== null$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^                $foundCollection = $collection;$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $foundCollection = null;$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^                $foundCollection = $collection;$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $foundCollection = null;$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^                $foundCollection = $collection;$/;"	v
foundCollection	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $foundCollection = null;$/;"	v
foundDatabase	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^                $foundDatabase = $database;$/;"	v
foundDatabase	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $foundDatabase = null;$/;"	v
foundDatabase	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^                $foundDatabase = $database;$/;"	v
foundDatabase	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $foundDatabase = null;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^                $foundIndex = $index;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $foundIndex = null;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^                $foundIndex = $index;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $foundIndex = null;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^                $foundIndex = $index;$/;"	v
foundIndex	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $foundIndex = null;$/;"	v
freeBind	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function freeBind($bindId, Context $context = null)$/;"	f
from	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ * MongoDB\\Driver\\Manager class from ext-mongodb is also supported.$/;"	c
from	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $this->from = $from;$/;"	v
from	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected $from;$/;"	v
from	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $from = 'receiver@example.org';$/;"	v
from	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->from = array();$/;"	v
from	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $from;$/;"	v
from	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function from($table, $alias = null)$/;"	f
fromChunk	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findChunksByFileId($id, $fromChunk = 0)$/;"	v
fromLegacy	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    public static function fromLegacy($value)$/;"	f
fsockopen	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function fsockopen()$/;"	f
fsync	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $fsync = false$/;"	v
func	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function func($method, ...$args)$/;"	f
func	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^                    $func = $task->getCallBack();$/;"	v
functions	vendor/pinguo/plates/src/Engine.php	/^        $this->functions = new Functions();$/;"	v
functions	vendor/pinguo/plates/src/Engine.php	/^    protected $functions;$/;"	v
functions	vendor/pinguo/plates/src/Template/Functions.php	/^    protected $functions = array();$/;"	v
functions	vendor/pinguo/plates/src/Template/Template.php	/^    public function e($string, $functions = null)$/;"	v
functions	vendor/pinguo/plates/src/Template/Template.php	/^    public function escape($string, $functions = null)$/;"	v
fwrite	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function fwrite($data)$/;"	f
gc	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^                $this->gc = true;$/;"	v
gc	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->gc = false;$/;"	v
gc	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private $gc = false;$/;"	v
genLogId	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function genLogId($request)$/;"	f
genTime	vendor/pinguo/php-context/src/AbstractContext.php	/^    public $genTime;$/;"	v
generateAttachmentField	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function generateAttachmentField($title, $value)$/;"	f
generateAttachmentFields	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private function generateAttachmentFields(array $data)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    protected function generateDataStream($record): string$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateDataStream	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function generateDataStream($record)$/;"	f
generateScript	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function generateScript()$/;"	f
generateScript	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    protected function generateScript()$/;"	f
generateUniqueKey	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    protected function generateUniqueKey(string $key)$/;"	f
generateUniqueKey	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private function generateUniqueKey(string $key)$/;"	f
generate_index_name	vendor/mongodb/mongodb/src/functions.php	/^function generate_index_name($document)$/;"	f
generator	vendor/pinguo/php-msf/src/HttpServer.php	/^                            $generator = $instance->$methodName(...array_values($this->route->getParams()));$/;"	v
generator	vendor/pinguo/php-msf/src/HttpServer.php	/^                    $generator = $instance->$methodName(...array_values($this->route->getParams()));$/;"	v
generator	vendor/pinguo/php-msf/src/MSFCli.php	/^                        $generator = $instance->$methodName(...$params);$/;"	v
generator	vendor/pinguo/php-msf/src/MSFCli.php	/^                $generator = $instance->$methodName(...$params);$/;"	v
genericMethod	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $genericMethod = $matches[1] . ('Records' !== $matches[3] ? 'Record' : '') . $matches[3];$/;"	v
get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    public static function get($db, $ref)$/;"	f
get	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function get($id)$/;"	f
get	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function get($key, $default = null)$/;"	f
get	vendor/hassankhan/config/src/ConfigInterface.php	/^    public function get($key, $default = null);$/;"	f
get	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function get($index)$/;"	f
get	vendor/pinguo/php-msf/src/Base/Pool.php	/^    public function get($class, ...$args)$/;"	f
get	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function get($path, $query, $callback)$/;"	f
get	vendor/pinguo/php-msf/src/Console/Request.php	/^        $this->get                 = $params;$/;"	v
get	vendor/pinguo/php-msf/src/Console/Request.php	/^    public $get;$/;"	v
get	vendor/pinguo/plates/src/Template/Data.php	/^    public function get($template = null)$/;"	f
get	vendor/pinguo/plates/src/Template/Directory.php	/^    public function get()$/;"	f
get	vendor/pinguo/plates/src/Template/FileExtension.php	/^    public function get()$/;"	f
get	vendor/pinguo/plates/src/Template/Folders.php	/^    public function get($name)$/;"	f
get	vendor/pinguo/plates/src/Template/Functions.php	/^    public function get($name)$/;"	f
getAcceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function getAcceptedLevels(): array$/;"	f
getActionName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getActionName()$/;"	f
getAlertColor	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function getAlertColor($level)$/;"	f
getAllCountingInfo	vendor/pinguo/php-log/src/PGLog.php	/^    protected function getAllCountingInfo()$/;"	f
getAllGet	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getAllGet()$/;"	f
getAllHeader	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getAllHeader()$/;"	f
getAllPost	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getAllPost()$/;"	f
getAllPostGet	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getAllPostGet()$/;"	f
getAllProfileInfo	vendor/pinguo/php-log/src/PGLog.php	/^    public function getAllProfileInfo()$/;"	f
getAllServer	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getAllServer()$/;"	f
getAllTargets	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function getAllTargets()$/;"	f
getAllTaskMessage	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function getAllTaskMessage()$/;"	f
getAllUserDefined	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getAllUserDefined()$/;"	f
getApcuPrefix	vendor/composer/ClassLoader.php	/^    public function getApcuPrefix()$/;"	f
getAppName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getAppName(array $context)$/;"	f
getAsynName	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function getAsynName();$/;"	f
getAsynName	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function getAsynName()$/;"	f
getAsynName	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function getAsynName()$/;"	f
getAsynPool	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function getAsynPool($name)$/;"	f
getAttachmentColor	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function getAttachmentColor($level)$/;"	f
getAttachmentColor	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function getAttachmentColor($level)$/;"	f
getAutoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getAutoQuote($override = null)$/;"	f
getAvailableTypes	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public static function getAvailableTypes()$/;"	f
getBasicCheckCallback	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        function getBasicCheckCallback($expected, $optionName) {$/;"	f
getBatchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function getBatchFormatter()$/;"	f
getBatchMode	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function getBatchMode(): int$/;"	f
getBubble	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function getBubble(): bool$/;"	f
getBucketName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function getBucketName()$/;"	f
getBucketName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function getBucketName()$/;"	f
getBytes	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function getBytes()$/;"	f
getCallBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function getCallBack()$/;"	f
getCallback	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function getCallback()$/;"	f
getCallback	vendor/pinguo/plates/src/Template/Func.php	/^    public function getCallback()$/;"	f
getCappedMax	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function getCappedMax()$/;"	f
getCappedSize	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function getCappedSize()$/;"	f
getCheckClient	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getCheckClient()$/;"	f
getCheckDatabase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getCheckDatabase()$/;"	f
getChunks	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    private function getChunks()$/;"	f
getClassMap	vendor/composer/ClassLoader.php	/^    public function getClassMap()$/;"	f
getClient	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function getClient()$/;"	f
getClient	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getClient($options = null, $uri = 'mongodb:\/\/localhost')$/;"	f
getCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function getCollection()$/;"	f
getCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getCollection($name = 'test', \\MongoDB $database = null)$/;"	f
getCollectionInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $getCollectionInfo = function (CollectionInfo $collectionInfo) {$/;"	v
getCollectionInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getCollectionInfo(array $options = [])$/;"	f
getCollectionMock	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    protected function getCollectionMock()$/;"	f
getCollectionName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $getCollectionName = function (CollectionInfo $collectionInfo) {$/;"	v
getCollectionName	vendor/mongodb/mongodb/src/Collection.php	/^    public function getCollectionName()$/;"	f
getCollectionName	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getCollectionName()$/;"	f
getCollectionNames	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getCollectionNames(array $options = [])$/;"	f
getConfig	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getConfig()$/;"	f
getConnection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getConnection()$/;"	f
getConnectionString	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getConnectionString()$/;"	f
getConnectionTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getConnectionTimeout(): float$/;"	f
getConnections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public static function getConnections()$/;"	f
getConnector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function getConnector()$/;"	f
getContentType	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function getContentType()$/;"	f
getContext	vendor/pinguo/php-aop/src/MI.php	/^    public function getContext()$/;"	f
getController	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function getController()$/;"	f
getControllerClassName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getControllerClassName();$/;"	f
getControllerClassName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getControllerClassName()$/;"	f
getControllerName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getControllerName()$/;"	f
getControllerName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getControllerName();$/;"	f
getControllerName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getControllerName()$/;"	f
getCookie	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getCookie($index)$/;"	f
getCoroutine	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function getCoroutine()$/;"	f
getCreatedDocId	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected function getCreatedDocId(Response $response)$/;"	f
getCriteriaString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getCriteriaString($/;"	f
getCurrentUser	vendor/pinguo/php-msf/src/Server.php	/^    protected static function getCurrentUser()$/;"	f
getCursorInfo	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    abstract protected function getCursorInfo();$/;"	f
getCursorInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    protected function getCursorInfo()$/;"	f
getCursorInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function getCursorInfo()$/;"	f
getCursorOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public static function getCursorOptions()$/;"	f
getDBQueryBuilder	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function getDBQueryBuilder(Context $context = null)$/;"	f
getDBQueryBuilder	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function getDBQueryBuilder(Context $context = null)$/;"	f
getDBRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function getDBRef(array $ref)$/;"	f
getDBRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getDBRef(array $ref)$/;"	f
getData	vendor/pinguo/plates/src/Engine.php	/^    public function getData($template = null)$/;"	f
getDatabase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getDatabase(\\MongoClient $client = null)$/;"	f
getDatabaseName	vendor/mongodb/mongodb/src/Collection.php	/^    public function getDatabaseName()$/;"	f
getDatabaseName	vendor/mongodb/mongodb/src/Database.php	/^    public function getDatabaseName()$/;"	f
getDatabaseName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function getDatabaseName()$/;"	f
getDatabaseName	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function getDatabaseName()$/;"	f
getDatabaseName	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getDatabaseName()$/;"	f
getDateTime	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function getDateTime()$/;"	f
getDb	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getDb()$/;"	f
getDefaultBatchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getDefaultBatchFormatter()$/;"	f
getDefaultDirectory	vendor/pinguo/plates/src/Template/Name.php	/^    protected function getDefaultDirectory()$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultFormatter	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function getDefaultFormatter(): FormatterInterface$/;"	f
getDefaultIndexVersion	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getDefaultIndexVersion()$/;"	f
getDefaults	vendor/hassankhan/config/src/AbstractConfig.php	/^    protected function getDefaults()$/;"	f
getDeleteStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getDeleteStatement($usePlaceholders = true)$/;"	f
getDeleteString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getDeleteString($includeText = true)$/;"	f
getDeletedCount	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getDeletedCount()$/;"	f
getDeletedCount	vendor/mongodb/mongodb/src/DeleteResult.php	/^    public function getDeletedCount()$/;"	f
getDirFromStream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    private function getDirFromStream($stream)$/;"	f
getDirectory	vendor/pinguo/plates/src/Engine.php	/^    public function getDirectory()$/;"	f
getDnsCache	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public static function getDnsCache($host)$/;"	f
getDocSourceFromElastic	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected function getDocSourceFromElastic(Client $client, $index, $type, $documentId)$/;"	f
getDocument	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoResultException.php	/^    public function getDocument()$/;"	f
getDocument	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteConcernException.php	/^    public function getDocument()$/;"	f
getDocument	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected function getDocument(array $record): Document$/;"	f
getEnableCache	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getEnableCache();$/;"	f
getEnableCache	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getEnableCache()$/;"	f
getEncoding	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function getEncoding()$/;"	f
getEngine	vendor/pinguo/plates/src/Template/Name.php	/^    public function getEngine()$/;"	f
getExceptionClassForError	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function getExceptionClassForError($error)$/;"	f
getExtraParameters	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function getExtraParameters()$/;"	f
getFallback	vendor/pinguo/plates/src/Template/Folder.php	/^    public function getFallback()$/;"	f
getFallbackDirs	vendor/composer/ClassLoader.php	/^    public function getFallbackDirs()$/;"	f
getFallbackDirsPsr4	vendor/composer/ClassLoader.php	/^    public function getFallbackDirsPsr4()$/;"	f
getFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    protected function getFile($extra = [])$/;"	f
getFile	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function getFile()$/;"	f
getFile	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function getFile()$/;"	f
getFile	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function getFile()$/;"	f
getFile	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getFile($index)$/;"	f
getFile	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getFile()$/;"	f
getFile	vendor/pinguo/plates/src/Template/Name.php	/^    public function getFile()$/;"	f
getFileDocumentForStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function getFileDocumentForStream($stream)$/;"	f
getFileExtension	vendor/pinguo/plates/src/Engine.php	/^    public function getFileExtension()$/;"	f
getFileIdForStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function getFileIdForStream($stream)$/;"	f
getFilename	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function getFilename()$/;"	f
getFilesNamespace	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function getFilesNamespace()$/;"	f
getFolder	vendor/pinguo/plates/src/Template/Name.php	/^    public function getFolder()$/;"	f
getFolders	vendor/pinguo/plates/src/Engine.php	/^    public function getFolders()$/;"	f
getFormatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerInterface.php	/^    public function getFormatter(): FormatterInterface;$/;"	f
getFormatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^    public function getFormatter(): FormatterInterface$/;"	f
getFormatter	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function getFormatter(): FormatterInterface$/;"	f
getFormatter	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function getFormatter(): FormatterInterface$/;"	f
getFormatter	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function getFormatter(): FormatterInterface$/;"	f
getFrom	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getFrom()$/;"	f
getFromAlias	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getFromAlias()$/;"	f
getFromString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getFromString($includeText = true)$/;"	f
getFunction	vendor/pinguo/plates/src/Engine.php	/^    public function getFunction($name)$/;"	f
getGetCollectionName	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function getGetCollectionName()$/;"	f
getGetDatabaseName	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function getGetDatabaseName()$/;"	f
getGetDatabaseName	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function getGetDatabaseName()$/;"	f
getGitInfo	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private static function getGitInfo(): array$/;"	f
getGlobPattern	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function getGlobPattern()$/;"	f
getGridFS	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getGridFS($prefix = "fs")$/;"	f
getGridFS	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    protected function getGridFS($name = 'testfs', \\MongoDB $database = null)$/;"	f
getGridFS	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getGridFS($prefix = 'fs', \\MongoDB $database = null)$/;"	f
getGroupByString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getGroupByString($includeText = true)$/;"	f
getHandler	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    protected function getHandler($messagePublisher)$/;"	f
getHandler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    protected function getHandler($ravenClient)$/;"	f
getHandler	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function getHandler()$/;"	f
getHandlerDefaultOption	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function getHandlerDefaultOption($name)$/;"	f
getHandlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getHandlers(): array$/;"	f
getHavingPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getHavingPlaceholderValues()$/;"	f
getHavingString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getHavingString($usePlaceholders = true, $includeText = true)$/;"	f
getHeader	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getHeader($index)$/;"	f
getHeaders	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function getHeaders()$/;"	f
getHeaders	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function getHeaders()$/;"	f
getHeaders	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function getHeaders()$/;"	f
getHighestRecord	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function getHighestRecord(array $records)$/;"	f
getHost	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getHost()$/;"	f
getHostname	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public static function getHostname()$/;"	f
getHosts	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function getHosts()$/;"	f
getIdentityFormatter	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^    protected function getIdentityFormatter(): FormatterInterface$/;"	f
getInc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function getInc()$/;"	f
getIndex	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function getIndex(): string$/;"	f
getIndexInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function getIndexInfo()$/;"	f
getInitHeaders	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function getInitHeaders()$/;"	f
getInitializer	vendor/composer/autoload_static.php	/^    public static function getInitializer(ClassLoader $loader)$/;"	f
getInput	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getInput()$/;"	f
getInsert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getInsert()$/;"	f
getInsertStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getInsertStatement($usePlaceholders = true)$/;"	f
getInsertString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getInsertString($includeText = true)$/;"	f
getInsertedCount	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getInsertedCount()$/;"	f
getInsertedCount	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    public function getInsertedCount()$/;"	f
getInsertedCount	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    public function getInsertedCount()$/;"	f
getInsertedId	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    public function getInsertedId()$/;"	f
getInsertedIds	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getInsertedIds()$/;"	f
getInsertedIds	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    public function getInsertedIds()$/;"	f
getInstance	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function getInstance($name): Logger$/;"	f
getInstance	vendor/pinguo/php-msf/src/Base/Pool.php	/^    public static function getInstance()$/;"	f
getInstance	vendor/pinguo/php-msf/src/Coroutine/CNull.php	/^    public static function &getInstance()$/;"	f
getInstance	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function &getInstance()$/;"	f
getInstance	vendor/pinguo/php-msf/src/Server.php	/^    public static function &getInstance()$/;"	f
getIntoString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getIntoString($usePlaceholders = true)$/;"	f
getInvalidArrayValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidArrayValues()$/;"	f
getInvalidBooleanValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidBooleanValues()$/;"	f
getInvalidDocumentValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidDocumentValues()$/;"	f
getInvalidHintValues	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^    private function getInvalidHintValues()$/;"	f
getInvalidIntegerValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidIntegerValues()$/;"	f
getInvalidReadConcernValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidReadConcernValues()$/;"	f
getInvalidReadPreferenceValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidReadPreferenceValues()$/;"	f
getInvalidStreamValues	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    private function getInvalidStreamValues()$/;"	f
getInvalidStringValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidStringValues()$/;"	f
getInvalidWriteConcernValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getInvalidWriteConcernValues()$/;"	f
getIsDelete	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsDelete()$/;"	f
getIsDestroy	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getIsDestroy()$/;"	f
getIsGet	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsGet()$/;"	f
getIsHead	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsHead()$/;"	f
getIsOptions	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsOptions()$/;"	f
getIsPatch	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsPatch()$/;"	f
getIsPost	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsPost()$/;"	f
getIsPut	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function getIsPut()$/;"	f
getIsRpc	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getIsRpc();$/;"	f
getIsRpc	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getIsRpc()$/;"	f
getIterationInfo	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function getIterationInfo()$/;"	f
getIterationInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^    protected function getIterationInfo()$/;"	f
getJoinCriteriaUsingPreviousTable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getJoinCriteriaUsingPreviousTable($joinIndex, $table, $column)$/;"	f
getJoinString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getJoinString()$/;"	f
getKey	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function getKey()$/;"	f
getLevel	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function getLevel()$/;"	f
getLevel	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function getLevel(): int$/;"	f
getLevelMap	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    public function getLevelMap()$/;"	f
getLevelName	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function getLevelName(int $level): string$/;"	f
getLevels	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function getLevels(): array$/;"	f
getLimit	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getLimit()$/;"	f
getLimitOffset	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getLimitOffset()$/;"	f
getLimitString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getLimitString($includeText = true)$/;"	f
getLoader	vendor/composer/autoload_real.php	/^    public static function getLoader()$/;"	f
getLog	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function getLog()$/;"	f
getLogId	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function getLogId()$/;"	f
getLogger	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    public function getLogger()$/;"	f
getLogger	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    abstract public function getLogger();$/;"	f
getLogs	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    public function getLogs()$/;"	f
getLogs	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    abstract public function getLogs();$/;"	f
getManager	vendor/mongodb/mongodb/src/Client.php	/^    public function getManager()$/;"	f
getManager	vendor/mongodb/mongodb/src/Collection.php	/^    public function getManager()$/;"	f
getManager	vendor/mongodb/mongodb/src/Database.php	/^    public function getManager()$/;"	f
getMatchedCount	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getMatchedCount()$/;"	f
getMatchedCount	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function getMatchedCount()$/;"	f
getMercurialInfo	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private static function getMercurialInfo(): array$/;"	f
getMessagePublisher	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    protected function getMessagePublisher()$/;"	f
getMethodName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getMethodName();$/;"	f
getMethodName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getMethodName()$/;"	f
getMissingOptionCallback	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        function getMissingOptionCallback($optionName) {$/;"	f
getMockIds	app/Models/Demo.php	/^    public function getMockIds()$/;"	f
getModifiedCount	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getModifiedCount()$/;"	f
getModifiedCount	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function getModifiedCount()$/;"	f
getModifierCheckCallback	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        function getModifierCheckCallback($expected, $modifierName) {$/;"	f
getModule	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function getModule()$/;"	f
getMongoDbDateTime	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private function getMongoDbDateTime(\\DateTimeInterface $value): UTCDateTime$/;"	f
getMultipleRecords	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^    protected function getMultipleRecords()$/;"	f
getMysqlPool	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getMysqlPool(string $poolName)$/;"	f
getMysqlPoolCoroutine	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    public static function getMysqlPoolCoroutine(MysqlAsynPool $mysqlPoolCoroutine, $coreBase)$/;"	f
getMysqlProxy	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    public static function getMysqlProxy(IProxy $mysqlProxy, $coreBase)$/;"	f
getMysqlProxy	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getMysqlProxy(string $proxyName)$/;"	f
getMysqlProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function getMysqlProxy($name)$/;"	f
getName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function getName()$/;"	f
getName	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function getName()$/;"	f
getName	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    public function getName()$/;"	f
getName	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function getName()$/;"	f
getName	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getName(): string$/;"	f
getName	vendor/pinguo/plates/src/Template/Folder.php	/^    public function getName()$/;"	f
getName	vendor/pinguo/plates/src/Template/Func.php	/^    public function getName()$/;"	f
getName	vendor/pinguo/plates/src/Template/Name.php	/^    public function getName()$/;"	f
getNamespace	vendor/mongodb/mongodb/src/Collection.php	/^    public function getNamespace()$/;"	f
getNamespace	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function getNamespace()$/;"	f
getNamespace	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getNamespace()$/;"	f
getNext	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function getNext()$/;"	f
getNextId	app/Tasks/Idallloc.php	/^    public function getNextId($key)$/;"	f
getObject	vendor/pinguo/php-aop/src/MI.php	/^    public function getObject(...$args)$/;"	f
getObjectPool	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    public static function getObjectPool(Pool $pool, $coreBase)$/;"	f
getObjectPool	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function getObjectPool()$/;"	f
getObjectPool	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getObjectPool()$/;"	f
getOptions	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function getOptions($optionNames = null)$/;"	f
getOptions	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function getOptions()$/;"	f
getOptions	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function getOptions()$/;"	f
getOptions	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function getOptions()$/;"	f
getOptionsString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getOptionsString($includeTrailingSpace = false)$/;"	f
getOrderByString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getOrderByString($includeText = true)$/;"	f
getOutput	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getOutput()$/;"	f
getPID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function getPID()$/;"	f
getPack	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getPack()$/;"	f
getPairs	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^    public function getPairs()$/;"	f
getParams	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getParams();$/;"	f
getParams	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getParams()$/;"	f
getParent	vendor/pinguo/php-aop/src/MI.php	/^    public function getParent()$/;"	f
getParser	vendor/hassankhan/config/src/Config.php	/^    private function getParser($extension)$/;"	f
getPath	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getPath();$/;"	f
getPath	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getPath()$/;"	f
getPath	vendor/pinguo/plates/src/Template/Folder.php	/^    public function getPath()$/;"	f
getPath	vendor/pinguo/plates/src/Template/Name.php	/^    public function getPath()$/;"	f
getPathFromArray	vendor/hassankhan/config/src/Config.php	/^    private function getPathFromArray($path)$/;"	f
getPathInfo	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getPathInfo()$/;"	f
getPdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getPdoConnection()$/;"	f
getPipeMessage	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function getPipeMessage($pipe)$/;"	f
getPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getPlaceholderValues()$/;"	f
getPoolSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function getPoolSize()$/;"	f
getPost	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getPost($index)$/;"	f
getPrefixes	vendor/composer/ClassLoader.php	/^    public function getPrefixes()$/;"	f
getPrefixesPsr4	vendor/composer/ClassLoader.php	/^    public function getPrefixesPsr4()$/;"	f
getPreviousMessage	vendor/pinguo/php-msf/src/Coroutine/Exception.php	/^    public function getPreviousMessage()$/;"	f
getPrimaryServer	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function getPrimaryServer()$/;"	f
getPrivatePropertyValue	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    protected function getPrivatePropertyValue($instance, $property)$/;"	f
getProcessors	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getProcessors(): array$/;"	f
getProfilingLevel	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getProfilingLevel()$/;"	f
getRavenClient	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    protected function getRavenClient()$/;"	f
getRawContent	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getRawContent()$/;"	f
getRawFileDocumentForStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function getRawFileDocumentForStream($stream)$/;"	f
getReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    public function getReadPreference()$/;"	f
getReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function getReadPreference();$/;"	f
getReadPreferenceTags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private function getReadPreferenceTags($readPreferenceTagString)$/;"	f
getRecord	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^    protected function getRecord($level = Logger::WARNING, $message = 'test', $context = [])$/;"	f
getRecordTags	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function getRecordTags(array &$record)$/;"	f
getRecordWithMessage	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    protected function getRecordWithMessage($msg)$/;"	f
getRecords	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function getRecords()$/;"	f
getRedisPool	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getRedisPool(string $poolName)$/;"	f
getRedisPoolCoroutine	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    public static function getRedisPoolCoroutine(CoroutineRedisProxy $redisPoolCoroutine, $coreBase)$/;"	f
getRedisProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function &getRedisProxies()$/;"	f
getRedisProxy	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    public static function getRedisProxy(IProxy $redisProxy, $coreBase)$/;"	f
getRedisProxy	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getRedisProxy(string $proxyName)$/;"	f
getRedisProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function getRedisProxy($name)$/;"	f
getRemoteAddr	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getRemoteAddr()$/;"	f
getRemoteAddr	vendor/pinguo/php-msf/src/HttpServer.php	/^    public static function getRemoteAddr($request)$/;"	f
getReplace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getReplace()$/;"	f
getReplaceStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getReplaceStatement($usePlaceholders = true)$/;"	f
getReplaceString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getReplaceString($includeText = true)$/;"	f
getRequestMethod	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getRequestMethod()$/;"	f
getRequestType	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function getRequestType()$/;"	f
getRequestUri	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getRequestUri()$/;"	f
getResource	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function getResource()$/;"	f
getResource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function getResource()$/;"	f
getResponseFormat	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static function getResponseFormat()$/;"	f
getResult	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function getResult()$/;"	f
getResult	vendor/pinguo/php-msf/src/Coroutine/IBase.php	/^    function getResult();$/;"	f
getResult	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function getResult()$/;"	f
getRouteCache	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getRouteCache($path);$/;"	f
getRouteCache	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getRouteCache($path)$/;"	f
getRoutine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function getRoutine()$/;"	f
getRoutingKey	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function getRoutingKey(array $record)$/;"	f
getSelectStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getSelectStatement($usePlaceholders = true)$/;"	f
getSelectString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getSelectString($includeText = true)$/;"	f
getServer	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function getServer($index)$/;"	f
getServer	vendor/pinguo/php-msf/src/Console/Request.php	/^    public function getServer()$/;"	f
getServerInstance	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function getServerInstance()$/;"	f
getServerVersion	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getServerVersion()$/;"	f
getServerVersion	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function getServerVersion(ReadPreference $readPreference = null)$/;"	f
getSetPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getSetPlaceholderValues()$/;"	f
getSetString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getSetString($usePlaceholders = true, $includeText = true)$/;"	f
getShortMessage	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    public function getShortMessage(string $message): string$/;"	f
getSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function getSize()$/;"	f
getSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoPool.php	/^    public static function getSize()$/;"	f
getSize	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function getSize()$/;"	f
getSize	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function getSize()$/;"	f
getSizeOnDisk	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    public function getSizeOnDisk()$/;"	f
getSlackData	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function getSlackData(array $record)$/;"	f
getSlackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function getSlackRecord()$/;"	f
getSlackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function getSlackRecord()$/;"	f
getSlave	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function getSlave()$/;"	f
getSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/SlaveOkay.php	/^    public function getSlaveOkay()$/;"	f
getSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function getSlaveOkay()$/;"	f
getSlaveOkayFromReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected function getSlaveOkayFromReadPreference()$/;"	f
getSlaveOkayFromReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/SlaveOkay.php	/^    abstract protected function getSlaveOkayFromReadPreference();$/;"	f
getSortValue	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $getSortValue = function(ReflectionMethod $method) {$/;"	v
getStatTemplate	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private function getStatTemplate()$/;"	f
getStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getStatement($usePlaceholders = true)$/;"	f
getStream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function getStream()$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/FileParserInterface.php	/^    public function getSupportedExtensions();$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/Ini.php	/^    public function getSupportedExtensions()$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/Json.php	/^    public function getSupportedExtensions()$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/Php.php	/^    public function getSupportedExtensions()$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/Xml.php	/^    public function getSupportedExtensions()$/;"	f
getSupportedExtensions	vendor/hassankhan/config/src/FileParser/Yaml.php	/^    public function getSupportedExtensions()$/;"	f
getSync	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    abstract public function getSync();$/;"	f
getSync	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function getSync();$/;"	f
getSync	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function getSync(Context $context = null)$/;"	f
getSync	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function getSync()$/;"	f
getSystemCollectionFilterClosure	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    private function getSystemCollectionFilterClosure($includeSystemCollections = false)$/;"	f
getTimedFilename	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function getTimedFilename()$/;"	f
getTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getTimeout(): float$/;"	f
getTimeout	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function getTimeout()$/;"	f
getTimerContext	vendor/pinguo/php-msf/src/Server.php	/^    public function getTimerContext()$/;"	f
getTimestamp	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function getTimestamp()$/;"	f
getTimezone	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function getTimezone(): DateTimeZone$/;"	f
getTransactionName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function getTransactionName(array $context)$/;"	f
getType	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    public function getType(): string$/;"	f
getUid	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function getUid(): string$/;"	f
getUpdate	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getUpdate()$/;"	f
getUpdateStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function getUpdateStatement($usePlaceholders = true)$/;"	f
getUpdateString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getUpdateString($includeText = true)$/;"	f
getUpsertedCount	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getUpsertedCount()$/;"	f
getUpsertedCount	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function getUpsertedCount()$/;"	f
getUpsertedId	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function getUpsertedId()$/;"	f
getUpsertedIds	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function getUpsertedIds()$/;"	f
getUri	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function getUri()$/;"	f
getUrl	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function getUrl()$/;"	f
getUseIncludePath	vendor/composer/ClassLoader.php	/^    public function getUseIncludePath()$/;"	f
getUserDefined	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function getUserDefined($key)$/;"	f
getValidPath	vendor/hassankhan/config/src/Config.php	/^    private function getValidPath($path)$/;"	f
getVerb	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function getVerb();$/;"	f
getVerb	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function getVerb()$/;"	f
getVersion	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function getVersion()$/;"	f
getWherePlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getWherePlaceholderValues()$/;"	f
getWhereString	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getWhereString($usePlaceholders = true, $includeText = true)$/;"	f
getWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    public function getWriteConcern()$/;"	f
getWritingTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function getWritingTimeout(): float$/;"	f
glob	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $glob = str_replace($/;"	v
globalInc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    private static $globalInc = 0;$/;"	v
go	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $go               = [];$/;"	v
go	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function go($bindId = null, $sql = null)$/;"	f
go	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function go($context, $name, ...$arg)$/;"	f
goBegin	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goBegin(Context $context = null)$/;"	f
goCommit	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goCommit($id, Context $context = null)$/;"	f
goConcurrent	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goConcurrent(array $requests)$/;"	f
goConcurrent	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public static function goConcurrent(array $multiRpc)$/;"	f
goDnsLookup	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goDnsLookup($url = '', $timeout = 0, $headers = [])$/;"	f
goGet	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goGet($url = '', $query = null, $timeout = 30000, $headers = [])$/;"	f
goPost	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goPost($url = '', $data = [], $timeout = 30000, $headers = [])$/;"	f
goRollback	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function goRollback($id, Context $context = null)$/;"	f
goSingleGet	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goSingleGet($url = '', $query = null, $timeout = 30000, $headers = [])$/;"	f
goSinglePost	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goSinglePost($url = '', $data = [], $timeout = 30000, $headers = [])$/;"	f
goSleep	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^    public function goSleep(int $mSec)$/;"	f
goodPools	vendor/pinguo/php-msf/src/Process/Config.php	/^                $goodPools = [];$/;"	v
goodPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->goodPools = [];$/;"	v
goodPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->goodPools = getInstance()->sysCache->get($this->name) ?? [];$/;"	v
goodPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $goodPools = [];$/;"	v
goodPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $this->goodPools = getInstance()->sysCache->get($this->name) ?? [];$/;"	v
goodPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private $goodPools;$/;"	v
gridfs	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^        $this->gridfs = $gridfs;$/;"	v
gridfs	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    protected $gridfs;$/;"	v
gridfs	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $this->gridfs = $gridfs;$/;"	v
gridfs	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    protected $gridfs;$/;"	v
gridfs	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^        $gridfs = $this->getGridFS();$/;"	v
group	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function group($keys, array $initial, $reduce, array $condition = [])$/;"	f
groupBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->groupBy = array();$/;"	v
groupBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $groupBy;$/;"	v
groupBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function groupBy($column, $order = null)$/;"	f
handle	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $handle = $filename;$/;"	v
handle	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $handle = fopen($filename, 'r');$/;"	v
handle	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $handle = fopen('php:\/\/temp', 'w+');$/;"	v
handle	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        if (! $handle = fopen($filename, 'w')) {$/;"	v
handle	vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $handle = fopen($this->deduplicationStore, 'rw+');$/;"	v
handle	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function handle(array $record): bool;$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^ *   public function handle(array $record)$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/NoopHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handle = fopen('php:\/\/memory', 'a+');$/;"	v
handle	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function handle(array $record): bool$/;"	f
handle	vendor/pinguo/php-msf/src/Proxy/IProxy.php	/^    public function handle(string $method, array $arguments);$/;"	f
handle	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function handle(string $method, array $arguments)$/;"	f
handle	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    public function handle(string $method, array $arguments)$/;"	f
handle	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    public function handle(string $method, array $arguments)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function handleBatch(array $records);$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^    public function handleBatch(array $records)$/;"	f
handleCustomStyles	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function handleCustomStyles($style, $string)$/;"	f
handleDebugRecord	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleDebugRecord(array $record)$/;"	f
handleError	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleError($code, $message, $file = '', $line = 0, $context = [])$/;"	f
handleError	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $handleError = true;$/;"	v
handleError	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $handleError = false;$/;"	v
handleErrorRecord	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleErrorRecord(array $record)$/;"	f
handleException	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleException($e)$/;"	f
handleExceptionRecord	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function handleExceptionRecord(array $record)$/;"	f
handleFatalError	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function handleFatalError()$/;"	f
handleHttpRequest	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function handleHttpRequest($request);$/;"	f
handleHttpRequest	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function handleHttpRequest($request)$/;"	f
handleHttpRequest	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public function handleHttpRequest($request)$/;"	f
handleJsonError	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function handleJsonError(int $code, $data): string$/;"	f
handleOnlyReportedErrors	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->handleOnlyReportedErrors = $handleOnlyReportedErrors;$/;"	v
handleOnlyReportedErrors	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $handleOnlyReportedErrors;$/;"	v
handleStartupErrors	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private function handleStartupErrors()$/;"	f
handleStyles	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function handleStyles($formatted)$/;"	f
handleTaskException	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function handleTaskException(\\Throwable $e, $value)$/;"	f
handleTaskTimeout	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function handleTaskTimeout(\\Throwable $e, $value)$/;"	f
handled	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $handled = true;$/;"	v
handled	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $handled = false;$/;"	v
handledRecord	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^                $handledRecord = $record;$/;"	v
handledRecord	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handledRecord = null;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $handler = new static($logger);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^        $this->handler = $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $handler = new ElasticSearchHandler($client, $options);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^        $this->handler  = $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    protected $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^ *   $handler = new FingersCrossedHandler(new StreamHandler('php:\/\/stderr'), $activationStrategy);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->handler = $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^        $this->handler = $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    protected $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^                $handler = VendorPhpConsoleHandler::getInstance();$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^                $this->handler = call_user_func($this->handler, $record, $this);$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^        $this->handler = $handler;$/;"	v
handler	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    protected $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler', ['warning', false]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractHandler', [Logger::WARNING, false]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', [Logger::DEBUG, false]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', [Logger::DEBUG, true]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', [Logger::WARNING, false]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler', [Logger::WARNING, true]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $handler = new AmqpHandler($exchange);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $handler = new AmqpHandler($exchange, 'log');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler = new BrowserConsoleHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 0);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 0, Logger::INFO);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 2);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $handler = new BufferHandler($test, 3, Logger::DEBUG, true, true);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $handler = new TestChromePHPHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^        $handler = new CouchDBHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $handler = new DeduplicationHandler($test, sys_get_temp_dir().'\/monolog_dedup.log', 0);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $handler = new DoctrineCouchDBHandler($client);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $handler = new DynamoDbHandler($this->client, 'foo');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($client, $handlerOpts);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($client, $this->options);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($this->client);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handler = new ElasticSearchHandler($this->client, $this->options);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $handler = new ErrorLogHandler($type);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $handler = new ErrorLogHandler($type, Logger::DEBUG, true, true);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::DEBUG, Logger::EMERGENCY);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE, false);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, Logger::INFO, Logger::NOTICE, true);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $handler = new FilterHandler($test, [Logger::INFO, Logger::ERROR]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::ERROR);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::INFO);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::WARNING, 0, false, false);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, Logger::WARNING, 2);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ChannelLevelActivationStrategy('error', ['othertest' => 'debug']));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ChannelLevelActivationStrategy(Logger::ERROR, ['othertest' => Logger::DEBUG]));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy('warning'));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING), 0, true, true, LogLevel::INFO);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler($test, new ErrorLevelActivationStrategy(Logger::WARNING), 0, true, true, Logger::INFO);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler(function ($record, $handler) use ($test) {$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $handler = new FingersCrossedHandler(function ($record, $handler) {$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $handler = new TestFirePHPHandler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $this->handler = new FleepHookHandler(self::TOKEN);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\FlowdockHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = $this->getHandler($messagePublisher);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = new GelfHandler($messagePublisher);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $handler = new GelfHandler($this->getMessagePublisher());$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $handler = new GroupHandler($testHandlers);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $handler = new GroupHandler([$test]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $this->handler = $this->createMock('Monolog\\\\Handler\\\\HandlerInterface');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\HipChatHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\LogEntriesHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\LogmaticHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\\\Handler\\\\MailHandler');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $handler = $this->getMockForAbstractClass('Monolog\\\\Handler\\\\MailHandler', [], '', true, true, true, ['send', 'write']);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $handler = new MongoDBHandler($mongodb, 'db', 'collection');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $handler = new MongoDBHandler($mongodb, 'test', 'monolog');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::DEBUG, false, 'myAppName');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::DEBUG, false, null, false, 'myTransaction');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandler(Logger::ERROR, true, self::$appname, true);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $handler = new StubNewRelicHandlerWithoutExtension();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NoopHandlerTest.php	/^        $handler = new NoopHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^        $handler = new NullHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^        $handler = new NullHandler(Logger::WARNING);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = $this->initLogger();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = new PHPConsoleHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $handler = new PHPConsoleHandler([], $this->connector);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $handler = $mockBuilder->getMock();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $handler = new ProcessHandler('>&2 echo "some fake error message"');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $handler = new ProcessHandler(self::DUMMY_COMMAND);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $handler = new ProcessHandler(self::DUMMY_COMMAND, Logger::DEBUG, true, sys_get_temp_dir());$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $handler = new PsrHandler($psrLogger);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\PushoverHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getHandler($ravenClient);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getHandler($this->getRavenClient());$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = $this->getMockBuilder('Monolog\\Handler\\RavenHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = new RavenHandler($ravenClient);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $handler = new RavenHandler($this->getRavenClient());$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $handler = new RedisHandler($redis, 'key');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $handler = new RedisHandler($redis, 'key', Logger::DEBUG, true, 10);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^        $handler = $this->createHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $handler = new RotatingFileHandler(__DIR__.'\/Fixtures\/foo.rot');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $handler = new RotatingFileHandler(__DIR__.'\/Fixtures\/foo.rot', 2);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $handler = new SamplingHandler($testHandler, 2);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\SlackHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $handler = new SlackWebhookHandler($/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $handler = new SlackWebhookHandler(self::WEBHOOK_URL);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^        $handler = new SlackbotHandler($/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^        $handler = new SlackbotHandler('test-team', 'test-token', 'test-channel');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->handler = $this->getMockBuilder('Monolog\\Handler\\SocketHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->handler = new SocketHandler($connectionString);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($handle);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($invalidArgument);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler($temp, Logger::DEBUG, true, null, true);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('\/foo\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('bogus:\/\/url');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('file:\/\/'.sys_get_temp_dir().'\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('file:\/\/\/foo\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('ftp:\/\/foo\/bar\/baz\/'.rand(0, 10000));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler('php:\/\/memory');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler(null);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = new StreamHandler(sys_get_temp_dir().'\/bar\/'.rand(0, 10000).DIRECTORY_SEPARATOR.rand(0, 10000));$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $handler = unserialize($serialized);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $handler = new SwiftMailerHandler($this->mailer, $callback);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $handler = new SwiftMailerHandler($this->mailer, $messageTemplate);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', 'unknown');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', 'user');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', LOG_USER);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^        $handler = new SyslogHandler('test', LOG_USER, Logger::DEBUG, true, LOG_PERROR);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = $this->getMockBuilder('\\Monolog\\Handler\\SyslogUdpHandler')$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = new SyslogUdpHandler("127.0.0.1", 514, "authpriv");$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $handler = new SyslogUdpHandler("ip", null, "invalidFacility");$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $handler = new TestHandler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler($testHandlers);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler([$exception, $test, $exception]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $handler = new WhatFailureGroupHandler([$test]);$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^            $handler = new TestHandler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = $this->createMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = $this->prophesize('Monolog\\Handler\\NullHandler');$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler = new TestHandler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $handler = $this->getHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $handler = new TestHandler();$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $this->handler = $handler;$/;"	v
handler	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^    private $handler;$/;"	v
handler	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $this->handler   = $handler;$/;"	v
handler	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $handler = '';$/;"	v
handler	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function handler($handler, $construct = null)$/;"	f
handler	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->handler   = $unPackArgs['handler'];$/;"	v
handler	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $handler = null;$/;"	v
handler1	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler1 = new BrowserConsoleHandler();$/;"	v
handler1	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler1 = $this->createMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler1	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler1 = new TestHandler;$/;"	v
handler2	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $handler2 = new BrowserConsoleHandler();$/;"	v
handler2	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^        $handler2 = new TestChromePHPHandler();$/;"	v
handler2	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^        $handler2 = new TestFirePHPHandler;$/;"	v
handler2	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler2 = $this->createMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handler2	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler2 = new TestHandler;$/;"	v
handler3	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $handler3 = $this->createMock('Monolog\\Handler\\HandlerInterface');$/;"	v
handlerClass	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^        $handlerClass    = '\\\\App\\\\Models\\\\Handlers\\\\' . $this->handler;$/;"	v
handlerFormatter	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $handlerFormatter = $this->handler->getFormatter();$/;"	v
handlerInstance	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^        $handlerInstance = $this->getObject($handlerClass, ...$this->construct);$/;"	v
handlerKey	vendor/monolog/monolog/src/Monolog/Logger.php	/^                $handlerKey = $key;$/;"	v
handlerKey	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $handlerKey = null;$/;"	v
handlerKey	vendor/pinguo/php-log/src/PGLog.php	/^                $handlerKey = key($this->handlers);$/;"	v
handlerKey	vendor/pinguo/php-log/src/PGLog.php	/^        $handlerKey = null;$/;"	v
handlerOpts	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $handlerOpts = ['ignore_error' => $ignore];$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^        $this->handlers = $handlers;$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    protected $handlers;$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->handlers = $handlers;$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->handlers = [];$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $handlers;$/;"	v
handlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function __construct(string $name, array $handlers = [], array $processors = [], DateTimeZone $timezone = null)$/;"	v
handlers	vendor/pinguo/php-log/src/PGLog.php	/^        array $handlers = [],$/;"	v
harray	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $harray = $arguments[0];$/;"	v
harray	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $harray = $arguments[1];$/;"	v
has	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^ * @deprecated This class has been DEPRECATED as of version 1.3.0.$/;"	c
has	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function has($key)$/;"	f
has	vendor/hassankhan/config/src/ConfigInterface.php	/^    public function has($key);$/;"	f
hasFatalErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->hasFatalErrorHandler = true;$/;"	v
hasFatalErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $hasFatalErrorHandler;$/;"	v
hasLogger	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function hasLogger($logger): bool$/;"	f
hasLoggerProvider	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function hasLoggerProvider()$/;"	f
hasMbString	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^            $hasMbString = function_exists('mb_strlen');$/;"	v
hasMbString	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        static $hasMbString;$/;"	v
hasNext	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function hasNext()$/;"	f
hasNonNumericKeys	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $hasNonNumericKeys = !count(array_filter(array_keys($normalized), 'is_numeric'));$/;"	v
hasOutStage	vendor/mongodb/mongodb/src/Collection.php	/^        $hasOutStage = \\MongoDB\\is_last_pipeline_operator_out($pipeline);$/;"	v
hasRecord	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecord($record, $level)$/;"	f
hasRecordThatContains	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatContains($message, $level)$/;"	f
hasRecordThatMatches	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatMatches($regex, $level)$/;"	f
hasRecordThatPasses	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecordThatPasses(callable $predicate, $level)$/;"	f
hasRecords	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $this->hasRecords = false;$/;"	v
hasRecords	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $this->hasRecords = true;$/;"	v
hasRecords	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    private $hasRecords = false;$/;"	v
hasRecords	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    public function hasRecords($level)$/;"	f
hasSecondDimension	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $hasSecondDimension = count(array_filter($normalized, 'is_array'));$/;"	v
hash	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $hash = hash_init('md5');$/;"	v
hash	vendor/flexihash/flexihash/src/Hasher/Crc32Hasher.php	/^    public function hash($string)$/;"	f
hash	vendor/flexihash/flexihash/src/Hasher/HasherInterface.php	/^    public function hash($string);$/;"	f
hash	vendor/flexihash/flexihash/src/Hasher/Md5Hasher.php	/^    public function hash($string)$/;"	f
hash	vendor/flexihash/flexihash/tests/Hasher/MockHasher.php	/^    public function hash($value)$/;"	f
hashCount	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $hashCount = 100000;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->hashKey        = $redisAsynPool->hashKey;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $hashKey = false;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $this->hashKey        = $redisAsynPool->hashKey;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public $hashKey = false;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $this->hashKey = $config['hashKey'];$/;"	v
hashKey	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $hashKey = false;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->hashKey   = $config['hashKey'] ?? false;$/;"	v
hashKey	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $hashKey = false;$/;"	v
hashSpace	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $hashSpace = new Flexihash($/;"	v
hashSpace	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $hashSpace = new Flexihash($mockHasher, 1);$/;"	v
hashSpace	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $hashSpace = new Flexihash();$/;"	v
hashSpace1	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $hashSpace1 = new Flexihash();$/;"	v
hashSpace2	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $hashSpace2 = new Flexihash();$/;"	v
hashValue	vendor/flexihash/flexihash/tests/Hasher/MockHasher.php	/^        $this->hashValue = $hash;$/;"	v
hashValue	vendor/flexihash/flexihash/tests/Hasher/MockHasher.php	/^    private $hashValue;$/;"	v
hasher	vendor/flexihash/flexihash/src/Flexihash.php	/^        $this->hasher = $hasher ? $hasher : new Crc32Hasher();$/;"	v
hasher	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $hasher;$/;"	v
hasher	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function __construct(HasherInterface $hasher = null, $replicas = null)$/;"	v
hasher	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^        $hasher = new Crc32Hasher();$/;"	v
hasher	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^        $hasher = new Md5Hasher();$/;"	v
hasher	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $hasher          = $config['hasher'] ?? Md5Hasher::class;$/;"	v
hasher	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $hasher          = new $hasher;$/;"	v
having	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->having = array();$/;"	v
having	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $having;$/;"	v
having	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function having($column, $value, $operator = self::EQUALS, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
havingBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
havingIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
havingNotBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingNotBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
havingNotIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function havingNotIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
havingPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->havingPlaceholderValues = array();$/;"	v
havingPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $havingPlaceholderValues;$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^            foreach ($this->getInitHeaders() as $header => $content) {$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^        $header = $this->createRecordHeader($record);$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^        $header = sprintf('%s-%s', self::HEADER_PREFIX, join('-', $meta));$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $header = "POST " . self::FLEEP_HOOK_URI . $this->token . " HTTP\/1.1\\r\\n";$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^        $header = "POST \/v1\/messages\/team_inbox\/" . $this->apiToken . " HTTP\/1.1\\r\\n";$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $header = "POST \/v2\/room\/{$room}\/notification?auth_token={$this->token} HTTP\/1.1\\r\\n";$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $header = "POST \/1\/messages.json HTTP\/1.1\\r\\n";$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $header = "POST \/api\/chat.postMessage HTTP\/1.1\\r\\n";$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function write($line, $header = "")$/;"	v
header	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $header = $this->makeCommonSyslogHeader($this->logLevels[$record['level']]);$/;"	v
header	vendor/pinguo/php-msf/src/Console/Request.php	/^    public $header;$/;"	v
headers	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $headers = ['Content-Type: application\/json'];$/;"	v
headers	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $headers = ltrim(implode("\\r\\n", $this->headers) . "\\r\\n", "\\r\\n");$/;"	v
headers	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $headers = [];$/;"	v
headers	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected $headers = [];$/;"	v
headers	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    protected $headers = [];$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $headers    = [];$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $headers = $request['headers'];$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                $headers          = [];$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $headers = array_merge($headers, [$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $this->headers = $headers;$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $this->headers = array_merge($this->headers, $headers);$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $headers = array_merge($this->urlData['headers'], [$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $this->headers = array_merge($this->headers, $headers);$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public $headers;$/;"	v
headers	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function asyncDnsLookup($callBack, array $headers = [])$/;"	v
headers	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $headers = [$/;"	v
headers	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $this->headers   = $headers;$/;"	v
headers	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public $headers;$/;"	v
headers	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public function __construct(Client $client, $timeout, $headers = [])$/;"	v
headers	vendor/pinguo/php-msf/src/HttpServer.php	/^        $headers       = getInstance()->config->get("fileHeader.$extension", $normalHeaders);$/;"	v
headersAccepted	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function headersAccepted(): bool$/;"	f
headersAccepted	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function headersAccepted()$/;"	f
highPriorityLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->highPriorityLevel = $value;$/;"	v
highPriorityLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->highPriorityLevel = Logger::toMonologLevel($highPriorityLevel);$/;"	v
highPriorityLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $highPriorityLevel;$/;"	v
highestRecord	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^                $highestRecord = $record;$/;"	v
highestRecord	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^        $highestRecord = null;$/;"	v
hint	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->hint = $keyPattern;$/;"	v
hint	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $hint;$/;"	v
hint	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function hint($keyPattern)$/;"	f
hipChatHandler	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $hipChatHandler = new HipChatHandler('token', 'room', 'SixteenCharsHere', false, Logger::CRITICAL, true, true, 'test', 'api.hipchat.com', 'v2');$/;"	v
host	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->host = $urlInfo['host'];$/;"	v
host	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $host;$/;"	v
host	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->host = $host;$/;"	v
host	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $host;$/;"	v
host	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $host = gethostname();$/;"	v
host	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->host    = $config['host'];$/;"	v
host	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->host    = static::$services[$service]['host'];$/;"	v
host	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $host = 'http:\/\/127.0.0.1';$/;"	v
host	vendor/pinguo/php-msf/src/Process/Config.php	/^        $host             = gethostname();$/;"	v
host	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                    $host = getInstance()->getAsynPool($pool)->getSync()->getHost();$/;"	v
host	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $host = explode(':', $host)[0] ?? '';$/;"	v
host	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^        $host = $request->header['host'] ?? '';$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^        $this->hostname = $hostname;$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^    protected $hostname = '';$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^        $this->hostname = $hostname;$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    private $hostname;$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    public function __construct(string $token, string $hostname = '', string $appname = '', bool $useSSL = true, $level = Logger::DEBUG, bool $bubble = true)$/;"	v
hostname	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $hostname = '-';$/;"	v
hosts	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $hosts = $client->getHosts();$/;"	v
httpCode	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function end($output = '', $httpCode = 200, $gzip = true)$/;"	v
httpCode	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function output($data = null, $httpCode = 200)$/;"	v
httpCode	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function outputJson($data = null, $httpCode = 200)$/;"	v
httpCode	vendor/pinguo/php-msf/src/HttpServer.php	/^                    $httpCode = 404;$/;"	v
httpCode	vendor/pinguo/php-msf/src/HttpServer.php	/^                $httpCode  = $this->sendFile($indexFile, $request, $response);$/;"	v
httpCode	vendor/pinguo/php-msf/src/HttpServer.php	/^                $httpCode  = $this->sendFile($this->route->getFile(), $request, $response);$/;"	v
httpCode	vendor/pinguo/php-msf/src/HttpServer.php	/^                $httpCode = 404;$/;"	v
httpCode	vendor/pinguo/php-msf/src/HttpServer.php	/^        $httpCode           = 500;$/;"	v
httpConnection	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->httpConnection = curl_init('http:\/\/'.$this->host.':'.$this->port.'\/1.0\/event\/put');$/;"	v
httpConnection	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $httpConnection;$/;"	v
httpEnable	vendor/pinguo/php-msf/src/HttpServer.php	/^        $this->httpEnable     = $this->config->get('http_server.enable', true);$/;"	v
httpEnable	vendor/pinguo/php-msf/src/HttpServer.php	/^    public $httpEnable;$/;"	v
httpPort	vendor/pinguo/php-msf/src/HttpServer.php	/^        $this->httpPort       = $this->config['http_server']['port'];$/;"	v
httpPort	vendor/pinguo/php-msf/src/HttpServer.php	/^    public $httpPort;$/;"	v
httpSocketName	vendor/pinguo/php-msf/src/HttpServer.php	/^        $this->httpSocketName = $this->config['http_server']['socket'];$/;"	v
httpSocketName	vendor/pinguo/php-msf/src/HttpServer.php	/^    public $httpSocketName;$/;"	v
httponly	vendor/pinguo/php-msf/src/Base/Output.php	/^        $httponly = false$/;"	v
i	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $i = 0;$/;"	v
i	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $i = 0;$/;"	v
i	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $i = 0;$/;"	v
i	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        $i = 0;$/;"	v
i	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        foreach ($pipeline as $i => $operation) {$/;"	v
i	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        foreach ($operations as $i => $operation) {$/;"	v
i	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        foreach ($this->operations as $i => $operation) {$/;"	v
i	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        foreach ($indexes as $i => $index) {$/;"	v
i	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        foreach ($documents as $i => $document) {$/;"	v
i	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        foreach ($this->documents as $i => $document) {$/;"	v
i	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        foreach ($this->recordsByLevel[$level] as $i => $rec) {$/;"	v
i	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $i = 0;$/;"	v
i	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                        foreach ($val as $i => $v) {$/;"	v
i	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $i = 0;$/;"	v
i	vendor/pinguo/php-msf/src/HttpServer.php	/^                $i = $i > 0xFFFFFE ? 1 : $i + 1$/;"	v
i	vendor/pinguo/php-msf/src/HttpServer.php	/^        $i || $i = mt_rand(1, 0x7FFFFF);$/;"	v
i	vendor/pinguo/php-msf/src/HttpServer.php	/^        static $i = 0;$/;"	v
i	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        foreach ($val as $i => $v) {$/;"	v
i	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            foreach ($keys as $i => $key) {$/;"	v
i	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        foreach ($criteria as $i => $criterion) {$/;"	v
i	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        foreach ($this->join as $i => $join) {$/;"	v
i	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                            for ($i = 0; $i < $count; $i = $i + 2) {$/;"	v
i	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                        for ($i = 0; $i < $count; $i = $i + 2) {$/;"	v
i	vendor/pinguo/php-msf/src/Server.php	/^                    foreach ($trace as $i => $t) {$/;"	v
id	app/Controllers/MySQL.php	/^        $id = yield $mysqlPool->goBegin();$/;"	v
id	app/Controllers/MySQL.php	/^        $id = yield $mysqlProxy->goBegin();$/;"	v
id	app/Tasks/Demo.php	/^        $id = $mysqlPool->begin();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $id = $document_or_id->_id;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $id = $document_or_id;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $id = $document_or_id['_id'];$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $id = $this->ensureDocumentHasMongoId($a);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^                $id = $document_or_id->_id;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^                $id = $document_or_id;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $id = $document_or_id;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $id = $document_or_id['_id'];$/;"	v
id	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^        $id = (string) $this->objectID;$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $id = '54203e08d51d4a1f868b456e';$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $id = (string) $document['_id'];$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $id = new \\MongoId();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $id = new \\MongoId();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^        $id = $gridfs->storeBytes('foo', ['filename' => 'foo.txt']);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $id = $this->prepareFile($data);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $id = $this->prepareFile('abcd', ['filename' => $filename]);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $id = $this->prepareFile();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $collection->put(__FILE__, ['chunkSize' => 100, 'foo' => 'bar']);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $collection->storeBytes($/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $collection->storeFile($/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $collection->storeFile(__FILE__, ['chunkSize' => 100, 'foo' => 'bar']);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $collection->storeUpload($/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = $this->prepareFile();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $id = new \\MongoID();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $id = new \\MongoId($objectId);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $id = new \\MongoId($original);$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $id = new \\MongoId();$/;"	v
id	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^        $id = str_repeat('0123', 6);$/;"	v
id	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^            $id = (string) $file->_id;$/;"	v
id	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^            $id = \\MongoDB\\BSON\\toJSON(\\MongoDB\\BSON\\fromPHP(['_id' => $file->_id]));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->getFileIdForStream($stream);$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream("filename", $this->createStream("foobar"));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('a', $this->createStream('foo'));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('filename', $this->createStream($input));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('filename', $this->createStream(''));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('filename', $this->createStream('foobar'));$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('filename', $this->createStream('foobar'), $options);$/;"	v
id	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $id = $this->bucket->uploadFromStream('filename', $this->createStream('foobar'), ['metadata' => $metadata]);$/;"	v
id	vendor/pinguo/php-msf/src/Controllers/Monitor.php	/^            foreach ($data['worker'] as $id => $worker) {$/;"	v
id	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $this->id            = $id;$/;"	v
id	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^    public $id;$/;"	v
id	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->id         = null;$/;"	v
id	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->id         = $this->getContext()->getLogId();$/;"	v
id	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $id;$/;"	v
id	vendor/pinguo/php-msf/src/MSFServer.php	/^        foreach ($this->tidPidTable as $id => $row) {$/;"	v
id	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $id = $this->bind($context);$/;"	v
idAlloc	app/Controllers/MongoDBTest.php	/^        $idAlloc = $this->getObject(Idallloc::class);$/;"	v
idIndex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $idIndex = [$/;"	v
idKey	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    protected static $idKey = '$id';$/;"	v
ident	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^        $this->ident = $ident;$/;"	v
ident	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected $ident;$/;"	v
ident	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->ident = $ident;$/;"	v
ident	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected $ident;$/;"	v
ids	app/Controllers/Demo.php	/^        $ids       = $demoModel->getMockIds();$/;"	v
ids	app/Controllers/Demo.php	/^        $ids = $this->getConfig()->get('params.mock_ids', []);$/;"	v
ids	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $ids = [];$/;"	v
ignore	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function ignoreEmptyContextAndExtra(bool $ignore = true)$/;"	v
ignoreEmptyContextAndExtra	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->ignoreEmptyContextAndExtra = $ignore;$/;"	v
ignoreEmptyContextAndExtra	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->ignoreEmptyContextAndExtra = $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function ignoreEmptyContextAndExtra(bool $ignore = true)$/;"	f
ignoreErrors	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function toJson($data, bool $ignoreErrors = false)$/;"	v
immortal	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function immortal($liveForever = true)$/;"	f
in	vendor/composer/ClassLoader.php	/^ * In this example, if you try to use a class in the Symfony\\Component$/;"	c
inc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^            $inc = static::$globalInc;$/;"	v
inc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^            $this->inc = (int) $parts[0];$/;"	v
inc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^        $this->inc = (int) $inc;$/;"	v
inc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public $inc;$/;"	v
inc	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public function __construct($sec = 0, $inc = 0)$/;"	v
include	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function includeStacktraces(bool $include = true)$/;"	v
include	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function includeStacktraces(bool $include = true)$/;"	v
includeContextAndExtra	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->includeContextAndExtra = $includeContextAndExtra;$/;"	v
includeContextAndExtra	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $includeContextAndExtra;$/;"	v
includeFile	vendor/composer/ClassLoader.php	/^function includeFile($file)$/;"	f
includeFiles	vendor/composer/autoload_real.php	/^            $includeFiles = Composer\\Autoload\\ComposerStaticInit0b38b3a26e76b1c1cca49aaf455c88c6::$files;$/;"	v
includeFiles	vendor/composer/autoload_real.php	/^            $includeFiles = require __DIR__ . '\/autoload_files.php';$/;"	v
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $this->includeStacktraces = $include;$/;"	v
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected $includeStacktraces = false;$/;"	v
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function includeStacktraces(bool $include = true)$/;"	f
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $this->includeStacktraces = $include;$/;"	v
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected $includeStacktraces;$/;"	v
includeStacktraces	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function includeStacktraces(bool $include = true)$/;"	f
includeSystemCollections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^            $includeSystemCollections = $options['includeSystemCollections'];$/;"	v
includeSystemCollections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $includeSystemCollections = false;$/;"	v
includeText	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getHavingString($usePlaceholders = true, $includeText = true)$/;"	v
includeText	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getSetString($usePlaceholders = true, $includeText = true)$/;"	v
includeText	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function getWhereString($usePlaceholders = true, $includeText = true)$/;"	v
index	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        foreach (explode(',', $readPreferenceTagString) as $index => $tagSet) {$/;"	v
index	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^                foreach ($writeResult->getUpsertedIds() as $index => $id) {$/;"	v
index	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $index = $indexes[1];$/;"	v
index	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $index = $indexes[1];$/;"	v
index	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^        $this->index = $index;$/;"	v
index	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^    private $index;$/;"	v
index	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $this->index = $index;$/;"	v
index	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected $index;$/;"	v
index	vendor/monolog/monolog/src/Monolog/Registry.php	/^            $index = array_search($logger, self::$loggers, true);$/;"	v
index	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        foreach ($loggersToCheck as $index => $loggerToCheck) {$/;"	v
index	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                    $index = count($arrRedis);$/;"	v
index	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $index = array_search($redisPoolName, $arrRedis, true);$/;"	v
index	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        foreach ($arrRedis as $index => $redisPoolName) {$/;"	v
indexCount	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $indexCount = 1;$/;"	v
indexCount	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $indexCount = count($indexes);$/;"	v
indexExists	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $indexExists = true;$/;"	v
indexExists	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $indexExists = false;$/;"	v
indexFile	vendor/pinguo/php-msf/src/HttpServer.php	/^                $indexFile = $this->config['http']['domain'][$this->route->getHost()]['index'] ?? null;$/;"	v
indexInput	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^        $indexInput = new IndexInput([$/;"	v
indexName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $indexName = $keys;$/;"	v
indexName	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $indexName = \\MongoDB\\generate_index_name($keys);$/;"	v
indexName	vendor/mongodb/mongodb/src/Collection.php	/^        $indexName = (string) $indexName;$/;"	v
indexName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $indexName = (string) $indexName;$/;"	v
indexName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $this->indexName = $indexName;$/;"	v
indexName	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private $indexName;$/;"	v
indexOptions	vendor/mongodb/mongodb/src/Collection.php	/^        $indexOptions = array_diff_key($options, ['writeConcern' => 1]);$/;"	v
indexVersion	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $indexVersion = $this->getDefaultIndexVersion();$/;"	v
indexes	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $indexes = iterator_to_array($this->collection->listIndexes());$/;"	v
indexes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $indexes = iterator_to_array($iterator);$/;"	v
indexes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $indexes = iterator_to_array($newCollection->listIndexes());$/;"	v
indexes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $indexes = iterator_to_array($newChunksCollection->listIndexes());$/;"	v
indexes	vendor/mongodb/mongodb/src/Collection.php	/^     *     $indexes = [$/;"	v
indexes	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private $indexes = [];$/;"	v
indexes	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $indexes = $operation->execute($this->getPrimaryServer());$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = $operation->execute($this->getPrimaryServer());$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = [$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = [['key' => ['g' => '2dsphere', 'z' => 1]]];$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = [['key' => ['t' => 1], 'expireAfterSeconds' => 0, 'name' => 'my_ttl']];$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = [['key' => ['x' => 1], 'sparse' => true, 'unique' => true]];$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $indexes = [['key' => ['y' => -1, 'z' => 1]]];$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $indexes = $operation->execute($this->getPrimaryServer());$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $indexes = [$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $indexes = [['key' => ['x' => 1]]];$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $indexes = $operation->execute($this->getPrimaryServer());$/;"	v
indexes	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $indexes = iterator_to_array($indexes);$/;"	v
info	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function info()$/;"	f
info	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $info = $server->getInfo();$/;"	v
info	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $info = $this->client->__debugInfo();$/;"	v
info	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function info();$/;"	f
info	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoPool.php	/^    public static function info()$/;"	f
info	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        $info = $cursor->info();$/;"	v
info	vendor/hassankhan/config/src/Config.php	/^            $info      = pathinfo($path);$/;"	v
info	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^        $this->info = $info;$/;"	v
info	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    private $info;$/;"	v
info	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^        $info = parent::current();$/;"	v
info	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^        $this->info = $info;$/;"	v
info	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    private $info;$/;"	v
info	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^        $this->info = $info;$/;"	v
info	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    private $info;$/;"	v
info	vendor/mongodb/mongodb/src/functions.php	/^    $info = $server->getInfo();$/;"	v
info	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^        $info = new CollectionInfo($expectedInfo);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^        $info = new CollectionInfo(['name' => 'foo', 'options' => ['capped' => true, 'size' => 1048576, 'max' => 100]]);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^        $info = new CollectionInfo(['name' => 'foo', 'options' => ['capped' => true, 'size' => 1048576]]);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^        $info = new CollectionInfo(['name' => 'foo']);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $info = new DatabaseInfo($expectedInfo);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $info = new DatabaseInfo(['empty' => false]);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $info = new DatabaseInfo(['empty' => true]);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $info = new DatabaseInfo(['name' => 'foo']);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^        $info = new DatabaseInfo(['sizeOnDisk' => 1048576]);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^        $info = new IndexInfo($expectedInfo);$/;"	v
info	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^        $info = new IndexInfo([$/;"	v
info	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function info($message, array $context = [])$/;"	f
info	vendor/pinguo/php-msf/src/HttpServer.php	/^        $info      = pathinfo($path);$/;"	v
info	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function info($message, array $context = array())$/;"	f
info	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function info($message, array $context = array());$/;"	f
info	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function info($message, array $context = array())$/;"	f
infoLoggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $infoLoggerRecord = $this->getRecord(Logger::INFO);$/;"	v
infos	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $infos = [$/;"	v
init	vendor/pinguo/php-log/src/PGLog.php	/^    public function init()$/;"	f
init	vendor/pinguo/php-msf/src/HttpServer.php	/^                $init = $instance->__construct($controllerName, $methodName);$/;"	v
init	vendor/pinguo/php-msf/src/MSFCli.php	/^            $init = $instance->__construct($controllerName, $methodName);$/;"	v
init	vendor/pinguo/php-msf/src/MSFCli.php	/^    protected static function init()$/;"	f
init	vendor/pinguo/php-msf/src/Server.php	/^    protected static function init()$/;"	f
initAsynPools	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function initAsynPools()$/;"	f
initBufferFromCurrentChunk	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private function initBufferFromCurrentChunk()$/;"	f
initBufferFromNextChunk	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private function initBufferFromNextChunk()$/;"	f
initChunksIterator	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private function initChunksIterator()$/;"	f
initConnector	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initConnector(Connector $connector = null)$/;"	f
initConnectorMock	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initConnectorMock()$/;"	f
initDebugDispatcherMock	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initDebugDispatcherMock(Connector $connector)$/;"	f
initErrorDispatcherMock	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initErrorDispatcherMock(Connector $connector)$/;"	f
initLogger	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initLogger($handlerOptions = [], $level = Logger::DEBUG)$/;"	f
initMysqlProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function initMysqlProxies()$/;"	f
initOptions	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private function initOptions(array $options)$/;"	f
initProtocol	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private function initProtocol($path)$/;"	f
initReadableStream	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private function initReadableStream()$/;"	f
initRedisProxies	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function initRedisProxies()$/;"	f
initRules	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    protected function initRules()$/;"	f
initWorkers	vendor/pinguo/php-msf/src/MSFCli.php	/^    protected static function initWorkers()$/;"	f
initWorkers	vendor/pinguo/php-msf/src/Server.php	/^    protected static function initWorkers()$/;"	f
initWritableStream	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private function initWritableStream()$/;"	f
initial	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $initial = ["count" => 0];$/;"	v
initialBufferLength	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^            $initialBufferLength = strlen($this->buffer);$/;"	v
initialDataLength	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^            $initialDataLength = strlen($data);$/;"	v
initialTZ	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $initialTZ = ini_get("date.timezone");$/;"	v
initializeData	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function initializeData(array $initialData, array $expectedData = null)$/;"	f
initializeData	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    private function initializeData(array $data)$/;"	f
initialized	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^            $this->initialized = true;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^    protected $initialized = false;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $initialized = false;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $this->initialized = true;$/;"	v
initialized	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $initialized = false;$/;"	v
innerJoin	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function innerJoin($table, $criteria = null, $alias = null)$/;"	f
inotify	vendor/pinguo/php-msf/src/Process/Inotify.php	/^    public function inotify()$/;"	f
inotifyFd	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $this->inotifyFd = inotify_init();$/;"	v
inotifyFd	vendor/pinguo/php-msf/src/Process/Inotify.php	/^    public $inotifyFd;$/;"	v
input	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $input = [$/;"	v
input	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->input          = null;$/;"	v
input	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->input = $input;$/;"	v
input	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $input;$/;"	v
input	vendor/pinguo/php-msf/src/HttpServer.php	/^                $input    = $instance->context->getObjectPool()->get(Input::class);$/;"	v
input	vendor/pinguo/php-msf/src/MSFCli.php	/^            $input    = $instance->getObjectPool()->get(Input::class);$/;"	v
insert	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function insert(&$a, array $options = [])$/;"	f
insert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->insert = $table;$/;"	v
insert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->insert = array();$/;"	v
insert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $insert;$/;"	v
insert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function insert($table)$/;"	f
insert	vendor/pinguo/plates/src/Template/Template.php	/^    public function insert($name, array $data = array())$/;"	f
insertChunk	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function insertChunk($fileId, $data, $chunkNumber)$/;"	f
insertChunk	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function insertChunk($chunk)$/;"	f
insertChunkFromBuffer	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private function insertChunkFromBuffer()$/;"	f
insertChunksFromBytes	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function insertChunksFromBytes($bytes, $record)$/;"	f
insertChunksFromFile	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function insertChunksFromFile($handle, $record, &$md5)$/;"	f
insertDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $insertDocument = ['_id' => 1, 'foo' => 'bar'];$/;"	v
insertDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $insertDocument = ['_id' => new \\MongoId($id), 'foo' => 'bar'];$/;"	v
insertFile	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function insertFile($record, array $options = [])$/;"	f
insertFile	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function insertFile($file)$/;"	f
insertInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function insertInto($table)$/;"	f
insertMany	vendor/mongodb/mongodb/src/Collection.php	/^    public function insertMany(array $documents, array $options = [])$/;"	f
insertOne	vendor/mongodb/mongodb/src/Collection.php	/^    public function insertOne($document, array $options = [])$/;"	f
insertOne	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $insertOne = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), ['x' => 1]);$/;"	v
insertOne	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $insertOne = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), ['x' => 1]);$/;"	v
insertOne	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $insertOne = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), ['x' => 1]);$/;"	v
insertOne	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $insertOne = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), ['x' => 1]);$/;"	v
insertedId	vendor/mongodb/mongodb/src/InsertOneResult.php	/^        $this->insertedId = $insertedId;$/;"	v
insertedId	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    private $insertedId;$/;"	v
insertedId	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^                    $insertedId = $bulk->insert($args[0]);$/;"	v
insertedId	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^            $insertedId = $bulk->insert($document);$/;"	v
insertedId	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^            $insertedId = \\MongoDB\\extract_id_from_inserted_document($this->document);$/;"	v
insertedId	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $insertedId = $bulk->insert($this->document);$/;"	v
insertedIds	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^        $this->insertedIds = $insertedIds;$/;"	v
insertedIds	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    private $insertedIds;$/;"	v
insertedIds	vendor/mongodb/mongodb/src/InsertManyResult.php	/^        $this->insertedIds = $insertedIds;$/;"	v
insertedIds	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    private $insertedIds;$/;"	v
insertedIds	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $insertedIds = [];$/;"	v
insertedIds	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $insertedIds = [];$/;"	v
insertedIds	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $insertedIds = $result->getInsertedIds();$/;"	v
insertedIds	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $insertedIds = $result->getInsertedIds();$/;"	v
instance	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $instance = $this;$/;"	v
instance	vendor/pinguo/php-aop/src/Wrapper.php	/^        $this->instance     = null;$/;"	v
instance	vendor/pinguo/php-aop/src/Wrapper.php	/^        $this->instance = $instance;$/;"	v
instance	vendor/pinguo/php-aop/src/Wrapper.php	/^    private $instance;$/;"	v
instance	vendor/pinguo/php-msf/src/Base/Pool.php	/^    private static $instance;$/;"	v
instance	vendor/pinguo/php-msf/src/Coroutine/CNull.php	/^    private static $instance;$/;"	v
instance	vendor/pinguo/php-msf/src/HttpServer.php	/^                $instance = $this->objectPool->get($controllerClassName, [$controllerName, $methodName]);$/;"	v
instance	vendor/pinguo/php-msf/src/HttpServer.php	/^        $instance           = null;$/;"	v
instance	vendor/pinguo/php-msf/src/MSFCli.php	/^            $instance = $this->objectPool->get($controllerClassName, [$controllerName, $methodName]);$/;"	v
instance	vendor/pinguo/php-msf/src/Server.php	/^    protected static $instance;$/;"	v
intoColumns	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function intoColumns(array $columns)$/;"	f
intoColums	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->intoColums = $columns;$/;"	v
intoColums	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->intoColums = array();$/;"	v
intoColums	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $intoColums;$/;"	v
intoValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $this->intoValues = $values;$/;"	v
intoValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->intoValues = array();$/;"	v
intoValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $intoValues;$/;"	v
intoValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function intoValues(array $values)$/;"	f
invalidArgumentProvider	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function invalidArgumentProvider()$/;"	f
invalidCharacters	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $invalidCharacters = ['.', '$', '\/', ' ', '\\\\'];$/;"	v
invalidCommandProvider	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function invalidCommandProvider()$/;"	f
invalidCwdProvider	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function invalidCwdProvider()$/;"	f
invalidType	vendor/mongodb/mongodb/src/Exception/InvalidArgumentException.php	/^    public static function invalidType($name, $value, $expectedType)$/;"	f
ioBack	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->ioBack    = false;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $ioBack = false;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^            $this->ioBack = true;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^            $this->ioBack = true;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^            $this->ioBack = true;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^            $this->ioBack = true;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^            $this->ioBack = true;$/;"	v
ioBack	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^            $this->ioBack = true;$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->ioBackKey = null;$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $ioBackKey = null;$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ioBackKey	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^        $this->ioBackKey = array_pop($keys);$/;"	v
ip	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->ip = $ip;$/;"	v
ip	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $ip;$/;"	v
ip	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $ip = '127.0.0.1';$/;"	v
ip	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $ip = Client::getDnsCache($this->urlData['host']);$/;"	v
ip	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $ip = self::getDnsCache($this->urlData['host']);$/;"	v
ip	vendor/pinguo/php-msf/src/HttpServer.php	/^            $ip = explode(',', $ip);$/;"	v
ip	vendor/pinguo/php-msf/src/HttpServer.php	/^            $ip = trim($ip[0]);$/;"	v
ip	vendor/pinguo/php-msf/src/HttpServer.php	/^        $ip = $request->header['http_client_ip']       ??$/;"	v
ip	vendor/pinguo/php-msf/src/HttpServer.php	/^        $ip = $request->header['x-forwarded-for']      ??$/;"	v
is	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^        throw new \\Exception('The Mongo class is deprecated and not supported through mongo-php-adapter');$/;"	c
is	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^ * This class is used to initiate a connection and for database server commands.$/;"	c
is	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^ * A connection between PHP and MongoDB. This class is used to create and manage connections$/;"	c
is	vendor/composer/ClassLoader.php	/^     * Finds the path to the file where the class is defined.$/;"	c
is	vendor/composer/ClassLoader.php	/^ * This class is loosely based on the Symfony UniversalClassLoader.$/;"	c
is	vendor/mongodb/mongodb/src/Model/IndexInput.php	/^ * This class is used to validate user input for index creation.$/;"	c
is	vendor/mongodb/mongodb/src/Operation/Delete.php	/^ * This class is used internally by the DeleteMany and DeleteOne operation$/;"	c
is	vendor/mongodb/mongodb/src/Operation/Executable.php	/^ * This interface is reserved for internal use until PHPC-378 is implemented,$/;"	i
is	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^ * This class is used internally by the FindOneAndDelete, FindOneAndReplace, and$/;"	c
is	vendor/mongodb/mongodb/src/Operation/Update.php	/^ * This class is used internally by the ReplaceOne, UpdateMany, and UpdateOne$/;"	c
is	vendor/mongodb/mongodb/src/functions.php	/^ * This function is used by operations where it is not possible to apply a type$/;"	f
is	vendor/mongodb/mongodb/src/functions.php	/^ * This function is used when BulkWrite::insert() does not return a generated$/;"	f
is	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^     * If the `mb_strlen()` function is available, it will use that, as HipChat$/;"	f
isAcknowledged	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^        $this->isAcknowledged = $writeResult->isAcknowledged();$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    private $isAcknowledged;$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    public function isAcknowledged()$/;"	f
isAcknowledged	vendor/mongodb/mongodb/src/DeleteResult.php	/^        $this->isAcknowledged = $writeResult->isAcknowledged();$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/DeleteResult.php	/^    private $isAcknowledged;$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/DeleteResult.php	/^    public function isAcknowledged()$/;"	f
isAcknowledged	vendor/mongodb/mongodb/src/InsertManyResult.php	/^        $this->isAcknowledged = $writeResult->isAcknowledged();$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    private $isAcknowledged;$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    public function isAcknowledged()$/;"	f
isAcknowledged	vendor/mongodb/mongodb/src/InsertOneResult.php	/^        $this->isAcknowledged = $writeResult->isAcknowledged();$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    private $isAcknowledged;$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    public function isAcknowledged()$/;"	f
isAcknowledged	vendor/mongodb/mongodb/src/UpdateResult.php	/^        $this->isAcknowledged = $writeResult->isAcknowledged();$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/UpdateResult.php	/^    private $isAcknowledged;$/;"	v
isAcknowledged	vendor/mongodb/mongodb/src/UpdateResult.php	/^    public function isAcknowledged()$/;"	f
isAppendingNewlines	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    public function isAppendingNewlines(): bool$/;"	f
isArgument	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionCallsConnectorMethod($option, $method, $value, $isArgument = true)$/;"	v
isAssoc	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $isAssoc = array_keys($key) !== range(0, count($key) - 1); \/\/true关联 false索引$/;"	v
isBreak	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^            $this->isBreak = true;$/;"	v
isBreak	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->isBreak   = false;$/;"	v
isBreak	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $isBreak = false;$/;"	v
isCapped	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^    public function isCapped()$/;"	f
isClassMapAuthoritative	vendor/composer/ClassLoader.php	/^    public function isClassMapAuthoritative()$/;"	f
isClone	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function __construct($instance, $isClone = false)$/;"	v
isClosed	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $this->isClosed = true;$/;"	v
isClosed	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $isClosed = false;$/;"	v
isCollationUsed	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^                        $this->isCollationUsed = true;$/;"	v
isCollationUsed	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private $isCollationUsed = false;$/;"	v
isCollationUsed	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^                $this->isCollationUsed = true;$/;"	v
isCollationUsed	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private $isCollationUsed = false;$/;"	v
isConnected	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function isConnected()$/;"	f
isCursorSupported	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $isCursorSupported = \\MongoDB\\server_supports_feature($server, self::$wireVersionForCursor);$/;"	v
isDelete	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function isDelete()$/;"	f
isDeleteTableFrom	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function isDeleteTableFrom()$/;"	f
isDuplicate	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    private function isDuplicate(array $record)$/;"	f
isEOF	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function isEOF()$/;"	f
isEmpty	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^    public function isEmpty()$/;"	f
isFilesCollectionEmpty	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    private function isFilesCollectionEmpty()$/;"	f
isFinished	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function isFinished()$/;"	f
isHandlerActivated	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php	/^    public function isHandlerActivated(array $record);$/;"	f
isHandlerActivated	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php	/^    public function isHandlerActivated(array $record)$/;"	f
isHandlerActivated	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php	/^    public function isHandlerActivated(array $record)$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^    public function isHandling(array $record): bool;$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/NoopHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^    public function isHandling(array $record): bool$/;"	f
isHandling	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function isHandling(int $level): bool$/;"	f
isHtmlBody	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function isHtmlBody($body)$/;"	f
isInsert	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function isInsert()$/;"	f
isInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->isInto = false;$/;"	v
isInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->isInto = true;$/;"	v
isInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $isInto = false;$/;"	v
isJoinUnique	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function isJoinUnique($table, $alias)$/;"	f
isLegacy	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    private function isLegacy()$/;"	f
isLegacyMongoExt	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $this->isLegacyMongoExt = version_compare(phpversion('mongodb'), '1.1.9', '<=');$/;"	v
isLegacyMongoExt	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private $isLegacyMongoExt;$/;"	v
isNewRelicEnabled	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function isNewRelicEnabled()$/;"	f
isNewRelicEnabled	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    protected function isNewRelicEnabled()$/;"	f
isNumericArray	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    public static function isNumericArray(array $array)$/;"	f
isOKResult	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function isOKResult($result)$/;"	f
isPersistent	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function isPersistent()$/;"	f
isRandom	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->isRandom  = $config['random'] ?? false;$/;"	v
isRandom	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $isRandom = false;$/;"	v
isRef	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    public static function isRef($ref)$/;"	f
isRegister	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function addAsynPool($name, AsynPool $pool, $isRegister = false)$/;"	v
isReplace	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $isReplace = ! \\MongoDB\\is_first_key_operator($newobj);$/;"	v
isReplace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function isReplace()$/;"	f
isRpc	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $isRpc = true;$/;"	v
isSelect	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $isSelect = true;$/;"	v
isSelect	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $isSelect = false;$/;"	v
isSelect	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function isSelect()$/;"	f
isSparse	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function isSparse()$/;"	f
isTaskWorker	vendor/pinguo/php-msf/src/Server.php	/^    public function isTaskWorker()$/;"	f
isTimeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function isTimeout()$/;"	f
isTimeout	vendor/pinguo/php-msf/src/Coroutine/IBase.php	/^    function isTimeout();$/;"	f
isTraceClassOrSkippedFunction	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private function isTraceClassOrSkippedFunction(array $trace, int $index)$/;"	f
isTtl	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function isTtl()$/;"	f
isUnique	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function isUnique()$/;"	f
isUpdate	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function isUpdate()$/;"	f
isUse	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function isUse()$/;"	f
isUsingLevelsInTag	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function isUsingLevelsInTag(): bool$/;"	f
isV3	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $isV3 = defined('Aws\\Sdk::VERSION') && version_compare(\\Aws\\Sdk::VERSION, '3.0', '>=');$/;"	v
isValid	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public static function isValid($value)$/;"	f
is_first_key_operator	vendor/mongodb/mongodb/src/functions.php	/^function is_first_key_operator($document)$/;"	f
is_last_pipeline_operator_out	vendor/mongodb/mongodb/src/functions.php	/^function is_last_pipeline_operator_out(array $pipeline)$/;"	f
is_string_array	vendor/mongodb/mongodb/src/functions.php	/^function is_string_array($input) {$/;"	f
item	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $item = (array)$item;$/;"	v
item	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $item = $collection->findOne($/;"	v
item	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $item = $cursor->current();$/;"	v
item	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $item = $cursor->getNext();$/;"	v
items	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $items = iterator_to_array($this->find($query, $fields)->limit(1));$/;"	v
items	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^        $this->items = [];$/;"	v
items	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private $items = [];$/;"	v
items	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $items = iterator_to_array($cursor, false);$/;"	v
iterated	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $iterated = 0;$/;"	v
iterationInfo	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $iterationInfo = [$/;"	v
iterationInfo	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCommandCursor.php	/^        $iterationInfo = parent::getIterationInfo();$/;"	v
iterator	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->iterator = $this->wrapTraversable($this->ensureCursor());$/;"	v
iterator	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->iterator = null;$/;"	v
iterator	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $iterator;$/;"	v
iterator	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $iterator = $newCollection->listIndexes();$/;"	v
iterator	vendor/mongodb/mongodb/src/Model/CollectionInfoLegacyIterator.php	/^            $iterator = new IteratorIterator($iterator);$/;"	v
iterator	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $iterator     = new \\RecursiveIteratorIterator($dirIterator);$/;"	v
javascript	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^            $javascript = $code;$/;"	v
join	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->join = array();$/;"	v
join	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $join;$/;"	v
join	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function join($table, $criteria = null, $type = self::INNER_JOIN, $alias = null)$/;"	f
joinCriteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $joinCriteria = "";$/;"	v
json	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $json = json_encode($id);$/;"	v
json	vendor/mongodb/mongodb/src/GridFS/Exception/FileNotFoundException.php	/^        $json = \\MongoDB\\BSON\\toJSON(\\MongoDB\\BSON\\fromPHP(['_id' => $id]));$/;"	v
json	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^            $json = json_decode(file_get_contents($filename), true);$/;"	v
json	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^            $json = json_decode(file_get_contents($filename), true);$/;"	v
json	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $json = $this->handleJsonError(json_last_error(), $data);$/;"	v
json	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $json = $this->jsonEncode($data);$/;"	v
json	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $json = $this->toJson([$/;"	v
json	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $json = @json_encode(self::$json);$/;"	v
json	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $json = @json_encode(self::$json);$/;"	v
json	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $json = [$/;"	v
jsonEncode	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function jsonEncode($data)$/;"	f
jsonPrettyPrintFlag	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $jsonPrettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
jsonPrettyPrintFlag	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $this->jsonPrettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
jsonPrettyPrintFlag	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    private $jsonPrettyPrintFlag;$/;"	v
jsonSerialize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function jsonSerialize()$/;"	f
jsonSerialize	vendor/mongodb/mongodb/src/Model/BSONArray.php	/^    public function jsonSerialize()$/;"	f
jsonSerialize	vendor/mongodb/mongodb/src/Model/BSONDocument.php	/^    public function jsonSerialize()$/;"	f
jsonSerialize	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^    public function jsonSerialize(): string$/;"	f
justOne	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $justOne = false,$/;"	v
k	vendor/pinguo/php-log/src/PGLog.php	/^        foreach ($this->_countings as $k => $v) {$/;"	v
k	vendor/pinguo/php-msf/src/Base/Core.php	/^            foreach ($this->redisPools as $k => &$pool) {$/;"	v
k	vendor/pinguo/php-msf/src/Base/Core.php	/^            foreach ($this->redisProxies as $k => &$proxy) {$/;"	v
k	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^            foreach ($this->objectPoolBuckets as $k => $obj) {$/;"	v
k	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        foreach (getInstance()->scheduler->IOCallBack[$this->requestId] as $k => $coroutine) {$/;"	v
k	vendor/pinguo/php-msf/src/MSFServer.php	/^                    foreach ($this->objectPoolBuckets as $k => $obj) {$/;"	v
k	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    foreach ($arguments as $k => $argument) {$/;"	v
k	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                foreach ($arguments as $k => $argument) {$/;"	v
k	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                foreach ($key as $k => $v) {$/;"	v
k	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                foreach ($keysValues as $k => $v) {$/;"	v
k	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            foreach ($key as $k => $v) {$/;"	v
k	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        foreach ($ret as $k => $item) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->key = null;$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            yield $key => $value;$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->key = $this->ensureIterator()->key();$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        foreach ($traversable as $key => $value) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    private $key = null;$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function key()$/;"	f
key	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^                foreach ($value as $key => $item) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $key = sprintf('%s:%d;-;.;%d', $server->getHost(), $server->getPort(), getmypid());$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        foreach ($a as $key => $item) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^                $key = (string) $value->_id;$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            yield $key => $value;$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        foreach ($traversable as $key => $value) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            foreach ($uploadedFile['tmp_name'] as $key => $file) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    public function key()$/;"	f
key	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^        foreach ($array as $key => $value) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        foreach ($cursor as $key => $item) {$/;"	v
key	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^        foreach ($cursor as $key => $value) {$/;"	v
key	vendor/flexihash/flexihash/src/Flexihash.php	/^        foreach ($this->positionToTarget as $key => $value) {$/;"	v
key	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function key()$/;"	f
key	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function key()$/;"	f
key	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        foreach ($bson as $key => $value) {$/;"	v
key	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^            foreach ($expectedDocument as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        foreach ($record['context'] as $key => $val) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        foreach ($record['extra'] as $key => $val) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            foreach ($record['context'] as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            foreach ($record['extra'] as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            foreach ($data as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        foreach ($records as $key => $record) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            foreach ($data as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        foreach ($records as $key => $record) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^        foreach ($record as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        foreach ($dict as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^            foreach ($record['formatted']['context'] as $key => $parameter) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^            foreach ($record['formatted']['extra'] as $key => $parameter) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        foreach ($data as $key => $value) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Logger.php	/^        foreach ($this->handlers as $key => $handler) {$/;"	v
key	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^        foreach ($record['context'] as $key => $val) {$/;"	v
key	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        foreach ($messageArray as $key => $value) {$/;"	v
key	vendor/pinguo/php-log/src/PGLog.php	/^        $key = urlencode($key);$/;"	v
key	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        foreach ($dns as $key => $goDns) {$/;"	v
key	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        foreach ($go as $key => $client) {$/;"	v
key	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        foreach ($requests as $key => $request) {$/;"	v
key	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        foreach ($sendHttpRequests as $key => $httpRequest) {$/;"	v
key	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        foreach ($multiRpc as $key => $rpc) {$/;"	v
key	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        foreach ($responses as $key => $response) {$/;"	v
key	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                        $key = substr($keys[$k], $len);$/;"	v
key	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^                foreach ($callBacks as $key => $callBack) {$/;"	v
key	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $key = str_replace('*', '', $key);$/;"	v
key	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $key = strtr(trim($key), "\\0", ':');$/;"	v
key	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                foreach ($dumpValues as $key => $value) {$/;"	v
key	vendor/pinguo/php-msf/src/MSFServer.php	/^        $key  = Marco::SERVER_STATS . getInstance()->server->worker_id . '_exit';$/;"	v
key	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $key = substr($keys[$k], $len);$/;"	v
key	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $key = $arguments[1];$/;"	v
key	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $key = $arguments[0];$/;"	v
key	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    foreach ($harray as $key => $value) {$/;"	v
key	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $key = $arguments[1];$/;"	v
key	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $key = $this->generateUniqueKey($key);$/;"	v
key	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            foreach ($matches as $key => $value) {$/;"	v
key	vendor/pinguo/php-msf/src/Server.php	/^            $key = Marco::SERVER_STATS . getInstance()->server->worker_id . '_exit';$/;"	v
keyDisplay	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $keyDisplay = strtr(trim($key), "\\0", ':');$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->keyPrefix      = $redisAsynPool->keyPrefix;$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $keyPrefix = '';$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $this->keyPrefix      = $redisAsynPool->keyPrefix;$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public $keyPrefix = '';$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $this->keyPrefix = $config['keyPrefix'];$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $keyPrefix = '';$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->keyPrefix = $config['keyPrefix'] ?? '';$/;"	v
keyPrefix	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $keyPrefix = '';$/;"	v
keyValue	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $keyValue = explode('=', $option);$/;"	v
keys	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^        $keys = array_keys($array);$/;"	v
keys	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $keys = (array) $keys;$/;"	v
keys	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $keys = [$keys => 1];$/;"	v
keys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $keys = [];$/;"	v
keys	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $keys = explode('.', $field);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $keys = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $keys = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $keys = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $keys            = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $keys = $this->arguments[0];$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $keys            = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    protected function unSerializeHandler($data, $keys = [], $len = 0)$/;"	v
keys	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^        $keys = array_keys(getInstance()->scheduler->IOCallBack[$this->requestId]);$/;"	v
keys	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $keys = array_keys(array_slice($var, 0, 100));$/;"	v
keys	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $keys = $this->arguments[0];$/;"	v
keys	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $keys         = array_slice($args, 0, $numKeys);$/;"	v
keys	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    protected function unSerializeHandler($data, $keys = [], $len = 0)$/;"	v
keys	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $keys = $opArr[$redisPoolName];$/;"	v
keys	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $keys         = array_slice($args, 0, $numKeys);$/;"	v
keysValues	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $keysValues = $arguments[1];$/;"	v
keysValues	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $keysValues = $arguments[2];$/;"	v
killCursor	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function killCursor($server_hash, $id)$/;"	f
label	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $label = $record['channel'] .': '. $record['message'];$/;"	v
label	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $label = $record['channel'];$/;"	v
labels	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        static $labels = [];$/;"	v
largeArray	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $largeArray = range(1, 2000);$/;"	v
lastData	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^        $this->lastData = $data;$/;"	v
lastData	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^    public $lastData;$/;"	v
lastData	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $this->lastData = $data;$/;"	v
lastData	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public $lastData;$/;"	v
lastError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function lastError()$/;"	f
lastError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function lastError()$/;"	f
lastError	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $lastError = error_get_last();$/;"	v
lastError	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^            $this->lastError = [$/;"	v
lastError	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $this->lastError = null;$/;"	v
lastError	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    private $lastError;$/;"	v
lastFormattedMessage	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $lastFormattedMessage = array_pop($formattedMessages);$/;"	v
lastKey	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $lastKey = end($keys);$/;"	v
lastMessage	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $lastMessage = array_pop($messages);$/;"	v
lastMinute	vendor/pinguo/php-msf/src/Process/Config.php	/^            $this->lastMinute = ceil(time() \/ 60);$/;"	v
lastMinute	vendor/pinguo/php-msf/src/Process/Config.php	/^        $this->lastMinute = ceil(time() \/ 60);$/;"	v
lastMinute	vendor/pinguo/php-msf/src/Process/Config.php	/^    public $lastMinute;$/;"	v
lastModified	vendor/pinguo/php-msf/src/HttpServer.php	/^        $lastModified = gmdate('D, d M Y H:i:s', filemtime($path)) . ' GMT';$/;"	v
lastOp	vendor/mongodb/mongodb/src/functions.php	/^    $lastOp = (array) $lastOp;$/;"	v
lastOp	vendor/mongodb/mongodb/src/functions.php	/^    $lastOp = end($pipeline);$/;"	v
lastPos	vendor/composer/ClassLoader.php	/^            while (false !== $lastPos = strrpos($subPath, '\\\\')) {$/;"	v
lastSentBytes	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->lastSentBytes = $sent;$/;"	v
lastSentBytes	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->lastSentBytes = $sent;$/;"	v
lastSentBytes	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $lastSentBytes = null;$/;"	v
lastStack	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^        $this->lastStack = $stack;$/;"	v
lastStack	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^    public $lastStack;$/;"	v
lastStack	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^        $this->lastStack = $stack;$/;"	v
lastStack	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public $lastStack;$/;"	v
lastStats	vendor/pinguo/php-msf/src/Process/Config.php	/^        $lastStats = $this->MSFServer->sysCache->get(Marco::SERVER_STATS);$/;"	v
lastUpdated	vendor/pinguo/plates/src/Extension/Asset.php	/^        $lastUpdated = filemtime($filePath);$/;"	v
lastWritingAt	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->lastWritingAt = time();$/;"	v
lastWritingAt	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $lastWritingAt;$/;"	v
latestError	vendor/hassankhan/config/src/FileParser/Xml.php	/^            $latestError = array_pop($errors);$/;"	v
layout	vendor/pinguo/plates/src/Template/Template.php	/^                $layout = $this->engine->make($this->layoutName);$/;"	v
layout	vendor/pinguo/plates/src/Template/Template.php	/^    public function layout($name, array $data = array())$/;"	f
layoutData	vendor/pinguo/plates/src/Template/Template.php	/^        $this->layoutData = $data;$/;"	v
layoutData	vendor/pinguo/plates/src/Template/Template.php	/^    protected $layoutData;$/;"	v
layoutName	vendor/pinguo/plates/src/Template/Template.php	/^        $this->layoutName = $name;$/;"	v
layoutName	vendor/pinguo/plates/src/Template/Template.php	/^    protected $layoutName;$/;"	v
leftJoin	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function leftJoin($table, $criteria = null, $alias = null)$/;"	f
legacyGetMongoDbDateTime	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private function legacyGetMongoDbDateTime(\\DateTimeInterface $value): UTCDateTime$/;"	f
len	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $len = strlen($this->contextPrefix . $key . $val);$/;"	v
len	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $len = strlen($this->extraPrefix . $key . $val);$/;"	v
len	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $len = 200 + strlen((string) $record['message']) + strlen($this->systemName);$/;"	v
len	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $len = strlen($this->keyPrefix);$/;"	v
len	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $len = strlen($this->keyPrefix);$/;"	v
length	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $length = $this->insertChunksFromFile($handle, $file, $md5);$/;"	v
length	vendor/composer/ClassLoader.php	/^                        $length = $this->prefixLengthsPsr4[$first][$search];$/;"	v
length	vendor/composer/ClassLoader.php	/^            $length = strlen($prefix);$/;"	v
length	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        $this->length = (integer) $file->length;$/;"	v
length	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $length;$/;"	v
length	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    private $length = 0;$/;"	v
length	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $length = strlen($data);$/;"	v
length	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    public function __construct(int $length = 7)$/;"	v
length	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $length = 200;$/;"	v
level	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    private static $level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^                $level = $candidate;$/;"	v
level	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $level = $this->errorLevelMap[$code] ?? LogLevel::CRITICAL;$/;"	v
level	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $level = LogLevel::ERROR;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    protected $level = Logger::DEBUG;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    public function __construct($facility = LOG_USER, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    public function __construct($url, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    public function __construct(CouchDBClient $client, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    public function __construct(DynamoDbClient $client, $table, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    public function __construct($messageType = self::OPERATING_SYSTEM, $level = Logger::DEBUG, $bubble = true, $expandNewlines = false)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $level = $this->passthruLevel;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function __construct($apiToken, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    public function __construct(PublisherInterface $publisher, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $level = $record['level'];$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            case $level == Logger::DEBUG:$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $level = 0;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function __construct($eventName, $secretKey, $level = Logger::ERROR, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $level = $this->level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function __construct($token, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    public function __construct($apiKey, $message, $level = Logger::ERROR, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    public function __construct($mongodb, $database, $collection, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function __construct($to, $subject, $from, $level = Logger::ERROR, $bubble = true, $maxColumnWidth = 70)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $level = Logger::ERROR,$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^        $this->level = $level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    private $level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php	/^    public function __construct(int $level = Logger::DEBUG)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    public function __construct(string $command, $level = Logger::DEBUG, bool $bubble = true, string $cwd = null)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    public function __construct(LoggerInterface $logger, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $level = $this->level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function __construct(Raven_Client $ravenClient, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    public function __construct($redis, string $key, $level = Logger::DEBUG, bool $bubble = true, int $capSize = 0)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    public function __construct(RollbarNotifier $rollbarNotifier, $level = Logger::ERROR, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    public function __construct(string $apiUser, string $apiKey, string $from, $to, string $subject, int $level = Logger::ERROR, bool $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    public function __construct($slackTeam, $token, $channel, $level = Logger::CRITICAL, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function __construct($connectionString, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^    public function __construct(SqsClient $sqsClient, $queueUrl, $level = Logger::DEBUG, $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    public function __construct(\\Swift_Mailer $mailer, $message, $level = Logger::ERROR, bool $bubble = true)$/;"	v
level	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $level = constant('Monolog\\Logger::' . strtoupper($matches[2]));$/;"	v
level	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $level = static::toMonologLevel($level);$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php	/^    private $level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $level;$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^    private $level;$/;"	v
level	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function initLogger($handlerOptions = [], $level = Logger::DEBUG)$/;"	v
level	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $level = Logger::ERROR;$/;"	v
level	vendor/pinguo/plates/src/Template/Template.php	/^            $level = ob_get_level();$/;"	v
levelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerErrorHandler(array $levelMap = [], $callPrevious = true, $errorTypes = -1, $handleOnlyReportedErrors = true): self$/;"	v
levelMap	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $levelMap = [$/;"	v
levelMap	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected $levelMap = [$/;"	v
levelMap	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $levelMap = $zendMonitor->getLevelMap();$/;"	v
levelName	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $levelName = $record['level_name'];$/;"	v
levelName	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $levelName = null;$/;"	v
levelName	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $levelName = static::getLevelName($level);$/;"	v
levelName	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        foreach ($monologLogger->getLevels() as $levelName => $level) {$/;"	v
levelName	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $levelName = Logger::getLevelName($level);$/;"	v
levelName	vendor/pinguo/php-log/src/PGLog.php	/^        $levelName = static::getLevelName($level);$/;"	v
levelTag	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $this->levelTag = $levelTag;$/;"	v
levelTag	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    protected $levelTag = false;$/;"	v
levelTag	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^    public function __construct(bool $levelTag = false)$/;"	v
levels	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected static $levels = [$/;"	v
levels	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $levels = [Logger::CRITICAL, Logger::ALERT, Logger::EMERGENCY];$/;"	v
levels	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $levels = [Logger::INFO, Logger::ERROR];$/;"	v
levels	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $levels = [];$/;"	v
levels	vendor/pinguo/php-log/src/PGLog.php	/^    protected static $levels = [$/;"	v
limit	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $limit = $options;$/;"	v
limit	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->limit = $num;$/;"	v
limit	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $limit;$/;"	v
limit	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function limit($num)$/;"	f
limit	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $this->limit = $limit;$/;"	v
limit	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private $limit;$/;"	v
limit	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->limit = array();$/;"	v
limit	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $limit;$/;"	v
limit	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function limit($limit, $offset = 0)$/;"	f
limit	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $limit = null,$/;"	v
line	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $line = $record['extra']['line'];$/;"	v
line	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $line = __LINE__;$/;"	v
line	vendor/pinguo/php-msf/src/Server.php	/^                    $line = $error['line'];$/;"	v
lineno	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $lineno    = isset($error['line']) ? $error['line'] : __LINE__;$/;"	v
lines	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^        $lines = preg_split('{[\\r\\n]+}', (string) $record['formatted']);$/;"	v
lines	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $lines = $this->splitMessageIntoLines($record['formatted']);$/;"	v
listCollections	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function listCollections(array $options = [])$/;"	f
listCollections	vendor/mongodb/mongodb/src/Database.php	/^    public function listCollections(array $options = [])$/;"	f
listDBs	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function listDBs()$/;"	f
listDatabases	vendor/mongodb/mongodb/src/Client.php	/^    public function listDatabases(array $options = [])$/;"	f
listIndexes	vendor/mongodb/mongodb/src/Collection.php	/^    public function listIndexes(array $options = [])$/;"	f
load	vendor/hassankhan/config/src/Config.php	/^    public static function load($path)$/;"	f
loadClass	vendor/composer/ClassLoader.php	/^    public function loadClass($class)$/;"	f
loadClassLoader	vendor/composer/autoload_real.php	/^    public static function loadClassLoader($class)$/;"	f
loadExtension	vendor/pinguo/plates/src/Engine.php	/^    public function loadExtension(ExtensionInterface $extension)$/;"	f
loadExtensions	vendor/pinguo/plates/src/Engine.php	/^    public function loadExtensions(array $extensions = array())$/;"	f
loader	vendor/composer/ClassLoader.php	/^ *     $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	vendor/composer/ClassLoader.php	/^ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.$/;"	c
loader	vendor/composer/autoload_real.php	/^        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	vendor/composer/autoload_real.php	/^    private static $loader;$/;"	v
loader	vendor/mongodb/mongodb/tests/bootstrap.php	/^    $loader = require_once __DIR__ . '\/..\/..\/..\/..\/autoload.php';$/;"	v
loader	vendor/mongodb/mongodb/tests/bootstrap.php	/^    $loader = require_once __DIR__ . '\/..\/vendor\/autoload.php';$/;"	v
localRelease	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $localRelease = 'v41.41.41';$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^            $log = fgets($handle);$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $log = new Logger('application');$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ *   $log = new \\Monolog\\Logger('application');$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^ * $log = new Logger('myLogger');$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^ *   $log = new Logger('application');$/;"	v
log	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $log = new Logger('application');$/;"	v
log	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function log($level, $message, array $context = [])$/;"	f
log	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $log = __DIR__.'\/Fixtures\/foo-'.date($dateFormat).'.rot';$/;"	v
log	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $log = __DIR__.'\/Fixtures\/foo-'.date('Y-m-d').'.rot';$/;"	v
log	vendor/pinguo/php-msf/src/Server.php	/^        $log = "WORKER Error ";$/;"	v
log	vendor/pinguo/php-msf/src/Server.php	/^        $this->log = new PGLog($this->name, $this->config->get('server.log', ['handlers' => []]));$/;"	v
log	vendor/pinguo/php-msf/src/Server.php	/^    public $log;$/;"	v
log	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function log($level, $message, array $context = array());$/;"	f
log	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    abstract public function log($level, $message, array $context = array());$/;"	f
log	vendor/psr/log/Psr/Log/NullLogger.php	/^    public function log($level, $message, array $context = array())$/;"	f
log1	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $log1 = new Logger('test1');$/;"	v
log2	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $log2 = new Logger('test2');$/;"	v
logFile	vendor/pinguo/php-msf/src/Server.php	/^    protected static $logFile = '';$/;"	v
logFiles	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $logFiles = glob($this->getGlobPattern());$/;"	v
logFormatter	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $logFormatter = $this->createMock('Monolog\\\\Formatter\\\\FormatterInterface');$/;"	v
logId	vendor/pinguo/php-context/src/AbstractContext.php	/^        $this->logId = $logId;$/;"	v
logId	vendor/pinguo/php-context/src/AbstractContext.php	/^    protected $logId;$/;"	v
logId	vendor/pinguo/php-log/src/PGLog.php	/^    public $logId;$/;"	v
logId	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $logId = $this->getContext()->getLogId();$/;"	v
logId	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^            foreach ($this->IOCallBack as $logId => $callBacks) {$/;"	v
logId	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^        $logId = $controller->getContext()->getLogId();$/;"	v
logId	vendor/pinguo/php-msf/src/HttpServer.php	/^            $logId = sprintf("%08x%06x%04x%06x",$/;"	v
logId	vendor/pinguo/php-msf/src/HttpServer.php	/^        $logId              = $this->genLogId($request);$/;"	v
logId	vendor/pinguo/php-msf/src/HttpServer.php	/^        $logId = $request->header['x-ngx-logid'] ?? $request->header['log_id'] ?? '' ;$/;"	v
logLevelProvider	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^    public function logLevelProvider()$/;"	f
logLevels	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^    private $logLevels = [$/;"	v
logLevels	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    private $logLevels = [$/;"	v
logLevels	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected $logLevels = [$/;"	v
logLevels	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    private $logLevels = [$/;"	v
logLevels	vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php	/^    protected $logLevels = [$/;"	v
logLevels	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    private $logLevels = [$/;"	v
logLevelsProvider	vendor/monolog/monolog/tests/Monolog/Handler/NoopHandlerTest.php	/^    public function logLevelsProvider()$/;"	f
logMethodProvider	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function logMethodProvider()$/;"	f
logMsg	vendor/pinguo/php-msf/src/Server.php	/^        $logMsg  = "WORKER EXIT UNEXPECTED ";$/;"	v
logToken	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^        $this->logToken = $token;$/;"	v
logToken	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    protected $logToken;$/;"	v
logToken	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^        $this->logToken = $token;$/;"	v
logToken	vendor/monolog/monolog/src/Monolog/Handler/LogmaticHandler.php	/^    private $logToken;$/;"	v
logValue	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $logValue = '';$/;"	v
logWarn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $logWarn = dump($e, false, true) . $this->mysqlPool->getAsynName() . ' reconnect';$/;"	v
logger	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->logger = $logger;$/;"	v
logger	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $logger;$/;"	v
logger	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^ * $logger = new Monolog\\Logger('fluent.tag');$/;"	v
logger	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^ *      $logger = new \\Monolog\\Logger('all', array(new \\Monolog\\Handler\\PHPConsoleHandler()));$/;"	v
logger	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^        $this->logger = $logger;$/;"	v
logger	vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php	/^    protected $logger;$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $logger = new Logger('test', [$handler = new TestHandler]);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $logger = $this->getMockForAbstractClass('Monolog\\Handler\\AbstractProcessingHandler');$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $logger = $this->initLogger($tagsContextKeys ? ['debugTagsKeysInContext' => $tagsContextKeys] : []);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^            $logger = new Logger('foo');$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger('foo');$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, [$handler1, $handler2]);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, ['last' => $handler3, 'second' => $handler2, 'first' => $handler1]);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $logger = new Logger(__METHOD__, [], [$processor1, $processor2]);$/;"	v
logger	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^        $logger = new Logger('foo');$/;"	v
logger	vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^        $this->logger = $logger;$/;"	v
logger	vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^    protected $logger;$/;"	v
logger	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^        $logger = $this->getLogger();$/;"	v
logger1	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger1 = new Logger('test1');$/;"	v
logger2	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger2 = new Logger('test2');$/;"	v
logger3	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^        $logger3 = new Logger('test3');$/;"	v
loggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $loggerRecord = $this->getRecord($level, 'test', $context);$/;"	v
loggers	vendor/monolog/monolog/src/Monolog/Registry.php	/^    private static $loggers = [];$/;"	v
logicalPathPsr0	vendor/composer/ClassLoader.php	/^            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logicalPathPsr0	vendor/composer/ClassLoader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	vendor/composer/ClassLoader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logopts	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^        $this->logopts = $logopts;$/;"	v
logopts	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected $logopts;$/;"	v
logs	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $logs = [];$/;"	v
longString	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $longString = str_repeat("derp", 20000);$/;"	v
lookup	vendor/composer/ClassLoader.php	/^     * Should class lookup fail if not found in the current class map?$/;"	c
lookup	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function lookup($resource)$/;"	f
lookupList	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function lookupList($resource, $requestedCount)$/;"	f
lookups	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    private $lookups = 1000;$/;"	v
loses	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $loses    = array_diff($nowPools, $newPools);$/;"	v
loses	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $loses = array_diff($this->slaves, $newSlaves);$/;"	v
lower	vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php	/^            $lower = function ($match) {$/;"	v
mail	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^function mail($to, $subject, $message, $additional_headers = null, $additional_parameters = null)$/;"	f
mailer	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $this->mailer = $mailer;$/;"	v
mailer	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected $mailer;$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler($to, $subject, $from);$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('spammer@example.org', 'dear victim', "receiver@example.org\\r\\nFrom: faked@attacker.org");$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('spammer@example.org', 'dear victim', 'receiver@example.org');$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $mailer = new NativeMailerHandler('to@example.org', 'Alert: %level_name% %message%', 'from@example.org');$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $this->mailer = $this$/;"	v
mailer	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    private $mailer;$/;"	v
make	vendor/pinguo/plates/src/Engine.php	/^    public function make($name)$/;"	f
makeCommonSyslogHeader	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function makeCommonSyslogHeader($severity): string$/;"	f
makeOptionString	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    private static function makeOptionString(array $options)$/;"	f
makeProxy	vendor/pinguo/php-msf/src/Proxy/MysqlProxyFactory.php	/^    public static function makeProxy(string $name, array $config)$/;"	f
makeProxy	vendor/pinguo/php-msf/src/Proxy/RedisProxyFactory.php	/^    public static function makeProxy(string $name, array $config)$/;"	f
manager	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $this->manager = $info['manager'];$/;"	v
manager	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/Client.php	/^        $this->manager = new Manager($uri, $uriOptions, $driverOptions);$/;"	v
manager	vendor/mongodb/mongodb/src/Client.php	/^    private $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/Collection.php	/^        $this->manager = $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/Collection.php	/^    private $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/Database.php	/^        $this->manager = $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/Database.php	/^    private $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->manager = $manager;$/;"	v
manager	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $manager;$/;"	v
manager	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $this->manager = new Manager($this->getUri());$/;"	v
manager	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected $manager;$/;"	v
manager	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^            $this->manager = $mongodb;$/;"	v
manager	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    private $manager;$/;"	v
managerPid	vendor/pinguo/php-msf/src/Server.php	/^            $managerPid = $pids[1];$/;"	v
map	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $map = 'function() {$/;"	v
map	vendor/composer/ClassLoader.php	/^        \/\/ class map lookup$/;"	c
map	vendor/composer/ClassLoader.php	/^     * that have not been registered with the class map.$/;"	c
map	vendor/composer/autoload_real.php	/^            $map = require __DIR__ . '\/autoload_namespaces.php';$/;"	v
map	vendor/composer/autoload_real.php	/^            $map = require __DIR__ . '\/autoload_psr4.php';$/;"	v
map	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^            $map = [$/;"	v
map	vendor/pinguo/php-msf/src/Base/Pool.php	/^        $this->map = [];$/;"	v
map	vendor/pinguo/php-msf/src/Base/Pool.php	/^    public $map;$/;"	v
marshaler	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->marshaler = new Marshaler;$/;"	v
marshaler	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $marshaler;$/;"	v
master	vendor/pinguo/php-msf/src/Process/Config.php	/^                            $master = $pool;$/;"	v
master	vendor/pinguo/php-msf/src/Process/Config.php	/^                    $master = $oldConfig['master'] ?? '';$/;"	v
master	vendor/pinguo/php-msf/src/Process/Config.php	/^                $master    = '';$/;"	v
master	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $this->master = $config['pools']['master'];$/;"	v
master	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    private $master;$/;"	v
master	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                    $this->master = $pool;$/;"	v
master	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                $this->master = $newMaster;$/;"	v
master	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private $master;$/;"	v
masterIsAlive	vendor/pinguo/php-msf/src/Server.php	/^                    $masterIsAlive = $masterPid && posix_kill($masterPid, SIG_BLOCK);$/;"	v
masterIsAlive	vendor/pinguo/php-msf/src/Server.php	/^            $masterIsAlive = $masterPid && @posix_kill($masterPid, SIG_BLOCK);$/;"	v
masterIsAlive	vendor/pinguo/php-msf/src/Server.php	/^            $masterIsAlive = false;$/;"	v
masterPid	vendor/pinguo/php-msf/src/Server.php	/^            $masterPid = $pids[0];$/;"	v
masterPool	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $masterPool = new MysqlAsynPool(getInstance()->config, $this->master);$/;"	v
masterPool	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^        $masterPool = getInstance()->getAsynPool($this->master);$/;"	v
matchVerbs	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                $matchVerbs = [];$/;"	v
matchVerbs	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                $matchVerbs = explode(',', $matches1[1]);$/;"	v
matchingFiles	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $matchingFiles = parent::find($criteria, ['_id' => 1]);$/;"	v
maxColumnWidth	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->maxColumnWidth = $maxColumnWidth;$/;"	v
maxColumnWidth	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $maxColumnWidth;$/;"	v
maxFiles	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->maxFiles = (int) $maxFiles;$/;"	v
maxFiles	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $maxFiles;$/;"	v
maxFiles	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
maxKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMaxKeyTest.php	/^        $maxKey = new \\MongoMaxKey();$/;"	v
maxLength	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $maxLength = 45;$/;"	v
maxLength	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->maxLength = is_null($maxLength) ? self::DEFAULT_MAX_LENGTH : $maxLength;$/;"	v
maxLength	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $maxLength;$/;"	v
maxLevel	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $maxLevel = Logger::toMonologLevel($maxLevel);$/;"	v
maxLevel	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function setAcceptedLevels($minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY)$/;"	v
maxMessageLength	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $maxMessageLength = 512 - strlen($this->title);$/;"	v
maxNestingLevel	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $this->maxNestingLevel = max($maxNestingLevel, 0);$/;"	v
maxNestingLevel	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    private $maxNestingLevel;$/;"	v
maxNestingLevel	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    public function __construct(int $maxNestingLevel = 3, bool $exceptionTraceAsString = true)$/;"	v
maxServerVersion	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^            $maxServerVersion = isset($json['maxServerVersion']) ? $json['maxServerVersion'] : null;$/;"	v
maxTimeMS	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->maxTimeMS = $ms;$/;"	v
maxTimeMS	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $maxTimeMS;$/;"	v
maxTimeMS	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function maxTimeMS($ms)$/;"	f
maxTimeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public static $maxTimeout = 0;$/;"	v
maxWireVersion	vendor/mongodb/mongodb/src/functions.php	/^    $maxWireVersion = isset($info['maxWireVersion']) ? (integer) $info['maxWireVersion'] : 0;$/;"	v
md5	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $md5 = hash_final($hash);$/;"	v
md5	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $md5 = null;$/;"	v
md5	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $md5 = md5_file($filename);$/;"	v
md5	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $md5 = md5_file(__FILE__);$/;"	v
md5	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^        $md5 = hash_final($this->ctx);$/;"	v
md5Hasher	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $md5Hasher = new Md5Hasher();$/;"	v
median	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    private function median($values)$/;"	f
memUsed	vendor/pinguo/php-log/src/PGLog.php	/^        $memUsed = sprintf("%.0f", memory_get_peak_usage() \/ (1024 * 1024));$/;"	v
mergeDeleteInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeDeleteInto(Miner $Miner)$/;"	f
mergeFromInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeFromInto(Miner $Miner)$/;"	f
mergeGroupByInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeGroupByInto(Miner $Miner)$/;"	f
mergeHavingInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeHavingInto(Miner $Miner)$/;"	f
mergeInsertInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeInsertInto(Miner $Miner)$/;"	f
mergeInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeInto(Miner $Miner, $overrideLimit = true)$/;"	f
mergeJoinInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeJoinInto(Miner $Miner)$/;"	f
mergeLimitInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeLimitInto(Miner $Miner)$/;"	f
mergeOptionsInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeOptionsInto(Miner $Miner)$/;"	f
mergeOrderByInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeOrderByInto(Miner $Miner)$/;"	f
mergeReplaceInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeReplaceInto(Miner $Miner)$/;"	f
mergeSelectInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeSelectInto(Miner $Miner)$/;"	f
mergeSetInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeSetInto(Miner $Miner)$/;"	f
mergeUpdateInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeUpdateInto(Miner $Miner)$/;"	f
mergeWhereInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeWhereInto(Miner $Miner)$/;"	f
message	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                    $message = $writeError->getMessage();$/;"	v
message	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^        $message = $e->getMessage();$/;"	v
message	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $message   = $error['message'] ?: 'There was an error parsing the file';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^            $message = reset($message);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php	/^        $message = ['message' => $record['message']];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^                $message = mb_substr($message, 0, $maxLength - 4, 'UTF-8') . ' ...';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^                $message = substr($message, 0, $maxLength - 4) . ' ...';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $message = '';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $message = [$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $message = new Message();$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $message = '';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $message = '';$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $message = [$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $message = $record['context'][self::TABLE];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $message = reset($message);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $message = ['message' => $record['message']];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^            if ($level === $record['level_name'] && $message === $expectedMessage && $timestamp > $timestampValidity) {$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^            $message = sprintf('The given message type "%s" is not supported', print_r($messageType, true));$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^            $message = call_user_func($message);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $message = clone $this->message;$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $this->message = $message;$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected $message;$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $message = $record['message'];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $message = ($this->useFormattedMessage) ? $record['formatted'] : $record['message'];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $message = substr($message, 0, $maxMessageLength);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $message = [];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $message = $record['message'];$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $message = $this->formatter->format($record);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $message = call_user_func($this->messageTemplate, $content, $records);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $message = clone $this->messageTemplate;$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $message = null;$/;"	v
message	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $message = implode("\\n", $message);$/;"	v
message	vendor/monolog/monolog/src/Monolog/Test/TestCase.php	/^    protected function getRecord($level = Logger::WARNING, $message = 'test', $context = [])$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $message = $formatter->format($record);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $message = $formatter->format($record);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $formatter->format([$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $this->formatRecordWithExceptionInContext($formatter, $exception);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $message = $this->formatRecordWithExceptionInContext($formatter, $throwable);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->format($/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->format([$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $message = $formatter->formatBatch([$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $message = json_decode($formatter->format($record), true);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $message = $wildfire->format($record);$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $message = 'message';$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $message = 'test';$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $message = 'Hello, world! ' . $level;$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $message = str_pad('test', 520, 'a');$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function createExceptionRecord($level = Logger::DEBUG, $message = 'test', $exception = null): array$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $message = 'Test message';$/;"	v
message	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $message = $proc([$/;"	v
message	vendor/pinguo/php-log/src/PGLog.php	/^        $message = "[$timeUsed(ms)]"$/;"	v
message	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $message = 'Yield ' . $logValue . ' message: ' . $e->getMessage();$/;"	v
message	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $message = 'message: ' . $e->getMessage();$/;"	v
message	vendor/pinguo/php-msf/src/MSFServer.php	/^        $message = $unserializeData['message'] ?? '';$/;"	v
message	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^            $message  = $this->swooleServer->packSerevrMessageBody(Marco::MSG_TYPR_ASYN, $data);$/;"	v
message	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function outputJson($data = null, $message = '', $status = 200)$/;"	v
message	vendor/pinguo/php-msf/src/Server.php	/^                    $message = $error['message'];$/;"	v
messageArray	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $messageArray = $message->toArray();$/;"	v
messageIndex	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $messageIndex = 1;$/;"	v
messagePublisher	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $messagePublisher = $this->getMessagePublisher();$/;"	v
messageStr	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $messageStr = implode(PHP_EOL, $messages);$/;"	v
messageTemplate	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $this->messageTemplate = $message;$/;"	v
messageTemplate	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    private $messageTemplate;$/;"	v
messageTemplate	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $messageTemplate = new \\Swift_Message();$/;"	v
messageType	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^        $this->messageType = $messageType;$/;"	v
messageType	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected $messageType;$/;"	v
message_array	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $message_array = $message->toArray();$/;"	v
messages	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $messages = $this->getFormatter()->formatBatch($messages);$/;"	v
messages	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^        $messages = [];$/;"	v
messages	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^                $messages = [$lastMessage];$/;"	v
messages	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $messages = [];$/;"	v
messages	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^        $messages = [];$/;"	v
messages	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $messages = [];$/;"	v
metadata	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeUpload($name, array $metadata = [])$/;"	v
metadata	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $metadata = stream_get_meta_data($stream);$/;"	v
metadata	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $metadata = ['foo' => 'bar'];$/;"	v
method	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $method = $isReplace ? 'replace' : 'update';$/;"	v
method	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $method = $multiple ? 'deleteMany' : 'deleteOne';$/;"	v
method	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^                $method = $item['limit'] === 0 ? 'deleteMany' : 'deleteOne';$/;"	v
method	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^                $method = isset($item['multi']) ? 'updateMany' : 'updateOne';$/;"	v
method	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $method = array_shift($args);$/;"	v
method	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $method = new \\ReflectionMethod(ErrorHandler::class, 'codeToString');$/;"	v
method	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $method = new \\ReflectionMethod('Monolog\\Handler\\SwiftMailerHandler', 'buildMessage');$/;"	v
method	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                    $method = strtoupper($request['method']);$/;"	v
method	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $this->method = $method;$/;"	v
method	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $method = '';$/;"	v
method	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->method    = $unPackArgs['method'];$/;"	v
method	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $method = null;$/;"	v
method	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->method     = $method;$/;"	v
method	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public $method;$/;"	v
method	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^        if ($method === 'cache' || $method === 'evalMock') {$/;"	v
methodDefault	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $methodDefault  = getInstance()->config->get('http.default_method', 'Index');$/;"	v
methodName	vendor/pinguo/php-msf/src/HttpServer.php	/^            $methodName   = $methodPrefix . $this->route->getMethodName();$/;"	v
methodName	vendor/pinguo/php-msf/src/MSFCli.php	/^            $methodName          = $methodPrefix . $this->route->getMethodName();$/;"	v
methodName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                $methodName = array_pop($route);$/;"	v
methodName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                $methodName = getInstance()->config->get('http.default_method', 'Index');$/;"	v
methodPrefix	vendor/pinguo/php-msf/src/HttpServer.php	/^            $methodPrefix = $this->config->get('http.method_prefix', 'action');$/;"	v
methodPrefix	vendor/pinguo/php-msf/src/MSFCli.php	/^            $methodPrefix        = $this->config->get('http.method_prefix', 'action');$/;"	v
methodProvider	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function methodProvider()$/;"	f
methodThatThrowsAnException	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    private function methodThatThrowsAnException()$/;"	f
methods	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $methods = $class->getMethods();$/;"	v
methods	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $methods = array_filter($/;"	v
methods	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $methods = array_map(function(ReflectionMethod $method) { return $method->getName(); }, $methods);$/;"	v
methods	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function setMockHandler(array $methods = [])$/;"	v
mi	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $mi = new MultipleIterator;$/;"	v
mi	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $mi = new MultipleIterator;$/;"	v
microSeconds	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^        $microSeconds = $this->truncateMicroSeconds($this->usec);$/;"	v
microsecondTimestamps	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->microsecondTimestamps = $micro;$/;"	v
microsecondTimestamps	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $microsecondTimestamps = true;$/;"	v
microseconds	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $microseconds = round(($this->timeout - $seconds) * 1e6);$/;"	v
middleFloor	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $middleFloor = floor($count \/ 2);$/;"	v
milliSeconds	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^        $milliSeconds = ($this->sec * 1000) + ($this->truncateMicroSeconds($this->usec) \/ 1000);$/;"	v
milliseconds	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $milliseconds = (PHP_INT_SIZE == 8) \/\/64-bit OS?$/;"	v
milliseconds	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $milliseconds = floor($value->format('U.u') * 1000);$/;"	v
mime	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^            $mime = 'text\/html';$/;"	v
mime	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^        $mime = null;$/;"	v
mime	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $mime = 'text\/html';$/;"	v
mime	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^        $mime = null;$/;"	v
minKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMinKeyTest.php	/^        $minKey = new \\MongoMinKey();$/;"	v
minLevelOrList	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $minLevelOrList = Logger::toMonologLevel($minLevelOrList);$/;"	v
minLevelOrList	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function __construct($handler, $minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY, $bubble = true)$/;"	v
minServerVersion	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^            $minServerVersion = isset($json['minServerVersion']) ? $json['minServerVersion'] : null;$/;"	v
minWireVersion	vendor/mongodb/mongodb/src/functions.php	/^    $minWireVersion = isset($info['minWireVersion']) ? (integer) $info['minWireVersion'] : 0;$/;"	v
missingChunk	vendor/mongodb/mongodb/src/GridFS/Exception/CorruptFileException.php	/^    public static function missingChunk($expectedIndex)$/;"	f
missingClasses	vendor/composer/ClassLoader.php	/^    private $missingClasses = array();$/;"	v
mockBuilder	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $mockBuilder = $this->getMockBuilder('Monolog\\Handler\\ProcessHandler');$/;"	v
mockHasher	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $mockHasher = new MockHasher();$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $mode = \\MongoDB\\Driver\\ReadPreference::RP_NEAREST;$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $mode = \\MongoDB\\Driver\\ReadPreference::RP_PRIMARY;$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $mode = \\MongoDB\\Driver\\ReadPreference::RP_PRIMARY_PREFERRED;$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $mode = \\MongoDB\\Driver\\ReadPreference::RP_SECONDARY;$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $mode = \\MongoDB\\Driver\\ReadPreference::RP_SECONDARY_PREFERRED;$/;"	v
mode	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $mode = $this->readPreference->getMode();$/;"	v
mode	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $this->mode = $mode;$/;"	v
mode	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private $mode;$/;"	v
mode	vendor/pinguo/php-msf/src/Proxy/MysqlProxyFactory.php	/^        $mode = $config['mode'];$/;"	v
mode	vendor/pinguo/php-msf/src/Proxy/RedisProxyFactory.php	/^        $mode = $config['mode'];$/;"	v
mode	vendor/pinguo/php-msf/src/Server.php	/^        $mode = '';$/;"	v
models	vendor/mongodb/mongodb/src/Model/CollectionInfo.php	/^ * This class models the collection information returned by the listCollections$/;"	c
models	vendor/mongodb/mongodb/src/Model/DatabaseInfo.php	/^ * This class models the database information returned by the listDatabases$/;"	c
models	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^ * This class models the index information returned by the listIndexes command$/;"	c
modifiers	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $modifiers = array_key_exists('modifiers', $this->options) ? $this->options['modifiers'] : [];$/;"	v
modifiers	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $modifiers = empty($this->options['modifiers']) ? [] : (array) $this->options['modifiers'];$/;"	v
modify	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function modify($/;"	f
module	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    private static $module;$/;"	v
mongoClient	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $this->mongoClient = new \\MongoClient($conf['server'], $conf['options'], $conf['driverOptions']);$/;"	v
mongoClient	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    protected $mongoClient;$/;"	v
mongoCollection	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    protected $mongoCollection;$/;"	v
mongoConf	app/Tasks/Idallloc.php	/^    protected $mongoConf = ['test', 'demo', 'idalloc'];$/;"	v
mongoConf	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    protected $mongoConf = [];$/;"	v
mongoDb	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    protected $mongoDb;$/;"	v
mongodb	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^ *   $mongodb = new \\Monolog\\Handler\\MongoDBHandler($client, 'logs', 'prod');$/;"	v
mongodb	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $mongodb = $this->getMockBuilder('MongoDB\\Client')$/;"	v
mongodb	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $mongodb = new Manager('mongodb:\/\/localhost:27017');$/;"	v
monitorDir	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $this->monitorDir = realpath(ROOT_PATH . '\/');$/;"	v
monitorDir	vendor/pinguo/php-msf/src/Process/Inotify.php	/^    public $monitorDir;$/;"	v
monitorFiles	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $monitorFiles = [];$/;"	v
monologLogger	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $monologLogger = new Logger('');$/;"	v
monthCallback	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $monthCallback = function($ago) {$/;"	v
msecString	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $msecString = (string) $sec;$/;"	v
msg	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^            $msg = 'MongoCollection::aggregate ( array $op [, array $op [, array $... ]] ) should accept variable amount of pipeline operators as argument'$/;"	v
msg	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Malformed UTF-8 characters, possibly incorrectly encoded';$/;"	v
msg	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Maximum stack depth exceeded';$/;"	v
msg	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Underflow or the modes mismatch';$/;"	v
msg	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Unexpected control character found';$/;"	v
msg	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $msg = 'Unknown error';$/;"	v
msg	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $msg = [$/;"	v
msg	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $msg = $messages[0][0];$/;"	v
msg	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $msg = [$/;"	v
msgStr	vendor/pinguo/php-msf/src/Helpers/Common.php	/^    $msgStr = (string)$messages;$/;"	v
multi	app/Models/Handlers/Sum.php	/^    public function multi(...$args)$/;"	f
multi	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private function multi(string $method, array $key, array $arguments)$/;"	f
multiple	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $multiple = isset($options['justOne']) ? !$options['justOne'] : true;$/;"	v
multiple	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $multiple = isset($options['multiple']) ? $options['multiple'] : false;$/;"	v
multiple	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $multiple = true,$/;"	v
multipleDimensions	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $multipleDimensions = array(array(1, 2));$/;"	v
multipleTagsets	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $multipleTagsets = [$/;"	v
mustRotate	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^            $this->mustRotate = !file_exists($this->url);$/;"	v
mustRotate	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^            $this->mustRotate = true;$/;"	v
mustRotate	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->mustRotate = false;$/;"	v
mustRotate	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $mustRotate;$/;"	v
mysql	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^        $mysql = new Wrapper($mysqlProxy);$/;"	v
mysqlAsynPool	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->mysqlAsynPool = $_mysqlAsynPool;$/;"	v
mysqlAsynPool	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public $mysqlAsynPool;$/;"	v
mysqlMaxCount	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    protected $mysqlMaxCount = 0;$/;"	v
mysqlPool	app/Controllers/MySQL.php	/^        $mysqlPool = $this->getMysqlPool('master');$/;"	v
mysqlPool	app/Tasks/Demo.php	/^        $mysqlPool = $this->getMysqlPool('master');$/;"	v
mysqlPool	app/Tasks/Demo.php	/^        $mysqlPool = $this->getMysqlProxy('master_slave');$/;"	v
mysqlPool	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->mysqlPool = $mysqlPool;$/;"	v
mysqlPool	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public $mysqlPool;$/;"	v
mysqlPools	vendor/pinguo/php-msf/src/Base/Core.php	/^    protected $mysqlPools;$/;"	v
mysqlProxies	vendor/pinguo/php-msf/src/Base/Core.php	/^    protected $mysqlProxies;$/;"	v
mysqlProxy	app/Controllers/MySQL.php	/^        $mysqlProxy = $this->getMysqlProxy('master_slave');$/;"	v
mysqlProxyManager	vendor/pinguo/php-msf/src/MSFServer.php	/^    protected $mysqlProxyManager = [];$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $this->name = (string) $name;$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        if ($name === 'w' || $name === 'wtimeout') {$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    protected $name;$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $this->name = (string) $name;$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        if ($name === 'w' || $name === 'wtimeout') {$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    protected $name;$/;"	v
name	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^        return $name === 'id';$/;"	v
name	vendor/composer/ClassLoader.php	/^            \/\/ PEAR-like class name$/;"	c
name	vendor/composer/ClassLoader.php	/^            \/\/ namespaced class name$/;"	c
name	vendor/mongodb/mongodb/src/functions.php	/^    $name = '';$/;"	v
name	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^     * @param  array|false     $exceptionLevelMap an array of class name to LogLevel::* constant mapping, or false to disable exception handling$/;"	c
name	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^            foreach ($record as $name => $value) {$/;"	v
name	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->name = $name;$/;"	v
name	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $name;$/;"	v
name	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    public function __construct($token, $room, $name = 'Monolog', $notify = false, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $format = 'text', $host = 'api.hipchat.com')$/;"	v
name	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->name = $name;$/;"	v
name	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $name;$/;"	v
name	vendor/monolog/monolog/src/Monolog/Registry.php	/^        $name = $name ?: $logger->getName();$/;"	v
name	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function addLogger(Logger $logger, $name = null, $overwrite = false)$/;"	v
name	vendor/pinguo/php-log/src/PGLog.php	/^        foreach ($this->_profiles as $name => $val) {$/;"	v
name	vendor/pinguo/php-msf/src/Console/Request.php	/^                $name = $matches[1];$/;"	v
name	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->name           = $name;$/;"	v
name	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $name;$/;"	v
name	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->name = self::SERVER_NAME;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^        $this->name   = $name;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    private $name;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->name      = $name;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $name;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^        $this->name = $name;$/;"	v
name	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private $name;$/;"	v
name	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                    $name = '';$/;"	v
name	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                    $name = ucfirst($name);$/;"	v
name	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                    $name = $match[1][0];$/;"	v
name	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            foreach ($data[1] as $name => $value) {$/;"	v
name	vendor/pinguo/php-msf/src/Server.php	/^    public $name = '';$/;"	v
name	vendor/pinguo/plates/src/Engine.php	/^        $name = new Name($this, $name);$/;"	v
name	vendor/pinguo/plates/src/Template/Folder.php	/^        $this->name = $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Folder.php	/^    protected $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Func.php	/^                'Not a valid function name.'$/;"	f
name	vendor/pinguo/plates/src/Template/Func.php	/^        $this->name = $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Func.php	/^     * Get the function name.$/;"	f
name	vendor/pinguo/plates/src/Template/Func.php	/^     * Set the function name.$/;"	f
name	vendor/pinguo/plates/src/Template/Func.php	/^     * The function name.$/;"	f
name	vendor/pinguo/plates/src/Template/Func.php	/^    protected $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Functions.php	/^                'The template function name "' . $name . '" is already registered.'$/;"	f
name	vendor/pinguo/plates/src/Template/Name.php	/^        $this->name = $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Name.php	/^    protected $name;$/;"	v
name	vendor/pinguo/plates/src/Template/Template.php	/^        $this->name = new Name($engine, $name);$/;"	v
name	vendor/pinguo/plates/src/Template/Template.php	/^    protected $name;$/;"	v
namespace	vendor/composer/autoload_real.php	/^            foreach ($map as $namespace => $path) {$/;"	v
namespace	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^            $this->namespace = $database . '.' . $collection;$/;"	v
namespace	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    private $namespace;$/;"	v
needsMicrosecondsHack	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^        static $needsMicrosecondsHack = PHP_VERSION_ID < 70100;$/;"	v
nestingLevel	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^    protected function formatArray(array $record, int $nestingLevel = 0)$/;"	v
new	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $new = clone $this;$/;"	v
newChunksCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $newChunksCollection = $this->getCheckDatabase()->selectCollection('fs.chunks');$/;"	v
newCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $newCollection = $this->getCheckDatabase()->selectCollection('test');$/;"	v
newCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^        $newCollection = $this->getCheckDatabase()->selectCollection('test');$/;"	v
newCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $newCollection = $this->getCheckDatabase()->selectCollection('fs.files');$/;"	v
newCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $newCollection = $this->getCheckDatabase()->selectCollection('test');$/;"	v
newCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $newCollection = $this->getCheckDatabase()->selectCollection('test');$/;"	v
newId	app/Controllers/MongoDBTest.php	/^        $newId   = yield $idAlloc->getNextId('test');$/;"	v
newKey	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $newKey = $this->generateUniqueKey($key);$/;"	v
newKey	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $newKey = [];$/;"	v
newMaster	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $newMaster = $this->goodPools['master'];$/;"	v
newMethods	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $newMethods = array_diff($methods, $defaultMethods);$/;"	v
newPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $newPools = array_keys($this->goodPools);$/;"	v
newSlaves	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $newSlaves = $this->goodPools['slaves'];$/;"	v
newValues	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $newValues = [];$/;"	v
newValues	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $newValues = [];$/;"	v
newrelic_add_custom_parameter	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_add_custom_parameter($key, $value)$/;"	f
newrelic_name_transaction	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_name_transaction($transactionName)$/;"	f
newrelic_notice_error	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_notice_error()$/;"	f
newrelic_set_appname	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^function newrelic_set_appname($appname)$/;"	f
next	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function next()$/;"	f
next	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function next()$/;"	f
next	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function next()$/;"	f
nextRotation	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->nextRotation = new \\DateTimeImmutable('tomorrow');$/;"	v
nextRotation	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected $nextRotation;$/;"	v
nextRun	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function nextRun()$/;"	f
noCursorTimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->noCursorTimeout = $liveForever;$/;"	v
noCursorTimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $noCursorTimeout;$/;"	v
noEventAdd	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function noEventAdd()$/;"	f
node	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^                $node = &$node[$key];$/;"	v
node	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $node = &$record;$/;"	v
normalHeaders	vendor/pinguo/php-msf/src/HttpServer.php	/^        $normalHeaders = getInstance()->config->get("fileHeader.normal", ['Content-Type: application\/octet-stream']);$/;"	v
normalize	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	f
normalize	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	f
normalize	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^    protected function normalize($data, int $depth = 0)$/;"	f
normalizeBSON	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    private function normalizeBSON($bson)$/;"	f
normalizeException	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^    protected function normalizeException(Throwable $e, int $depth = 0): array$/;"	f
normalizeException	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function normalizeException(\\Throwable $e, int $depth = 0): string$/;"	f
normalizeException	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function normalizeException(Throwable $e, int $depth = 0)$/;"	f
normalizeRootDocuments	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^        $normalizeRootDocuments = function($document) {$/;"	v
normalizeValue	vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^    protected function normalizeValue($value)$/;"	f
normalized	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $normalized = [];$/;"	v
normalized	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^            $normalized = [];$/;"	v
normalized	vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php	/^        $normalized = $this->normalize($value);$/;"	v
normalized	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $normalized = $this->normalizerFormatter->format($fields);$/;"	v
normalizerFormatter	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^            $this->normalizerFormatter = new NormalizerFormatter();$/;"	v
normalizerFormatter	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $normalizerFormatter;$/;"	v
notEventAdd	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $this->notEventAdd = false;$/;"	v
notEventAdd	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $this->notEventAdd = true;$/;"	v
notEventAdd	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    protected $notEventAdd = false;$/;"	v
notImplemented	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function notImplemented()$/;"	f
notImplemented	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    protected function notImplemented()$/;"	f
notImplemented	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    private function notImplemented()$/;"	f
notImplemented	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    protected function notImplemented()$/;"	f
notImplemented	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    protected function notImplemented()$/;"	f
notice	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function notice($message, array $context = [])$/;"	f
notice	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $notice = 'Inotify  Reload: ';$/;"	v
notice	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function notice($message, array $context = array())$/;"	f
notice	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function notice($message, array $context = array());$/;"	f
notice	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function notice($message, array $context = array())$/;"	f
notify	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->notify = $notify;$/;"	v
notify	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $notify;$/;"	v
now	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $now = time();$/;"	v
nowPools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $nowPools = $this->getAllTargets();$/;"	v
ns	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->ns = $ns;$/;"	v
ns	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $ns;$/;"	v
nsParts	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $nsParts = explode('.', $ns);$/;"	v
numChunks	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^            $this->numChunks = (integer) ceil($this->length \/ $this->chunkSize);$/;"	v
numChunks	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^        if ($this->chunkOffset === 0 && $this->numChunks === 0) {$/;"	v
numChunks	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    private $numChunks = 0;$/;"	v
numKeys	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $numKeys      = $arguments[3];$/;"	v
numberOfChunks	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $numberOfChunks = (int)ceil($size \/ 100);$/;"	v
numericKeys	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $numericKeys = array('library' => 'monolog');$/;"	v
obj	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $obj = new \\stdClass;$/;"	v
obj	vendor/pinguo/php-msf/src/Base/Pool.php	/^            $obj               = $reflector->newInstanceWithoutConstructor();$/;"	v
obj	vendor/pinguo/php-msf/src/Base/Pool.php	/^            $obj = $pool->shift();$/;"	v
obj	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^                        $obj = $objectsMap->shift();$/;"	v
obj	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^                        $obj = null;$/;"	v
object	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^        $object = new stdClass();$/;"	v
object	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $object = $newCollection->findOne();$/;"	v
object	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $object = new \\stdClass();$/;"	v
objectID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^                $this->objectID = new ObjectID($id);$/;"	v
objectID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^                $this->objectID = new ObjectID((string) $id);$/;"	v
objectID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^                $this->objectID = new ObjectID();$/;"	v
objectID	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    private $objectID;$/;"	v
objectId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $objectId = new \\MongoId($id);$/;"	v
objectId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $objectId = new ObjectID($original);$/;"	v
objectPool	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^        $this->objectPool = $objectPool;$/;"	v
objectPool	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    protected $objectPool;$/;"	v
objectPool	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->objectPool     = null;$/;"	v
objectPool	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->objectPool = $objectPool;$/;"	v
objectPool	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $objectPool;$/;"	v
objectPool	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->objectPool = Pool::getInstance();$/;"	v
objectPool	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $objectPool    = AOPFactory::getObjectPool($this->objectPool, $this);$/;"	v
objectPool	vendor/pinguo/php-msf/src/Server.php	/^        $this->objectPool = Pool::getInstance();$/;"	v
objectPool	vendor/pinguo/php-msf/src/Server.php	/^    public $objectPool;$/;"	v
objectPoolBuckets	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public $objectPoolBuckets = [];$/;"	v
objectPoolBuckets	vendor/pinguo/php-msf/src/MSFServer.php	/^    public $objectPoolBuckets = [];$/;"	v
objectRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $objectRef = new \\stdClass();$/;"	v
objectVars	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^        $objectVars = get_object_vars($value);$/;"	v
objectWithoutId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $objectWithoutId = new \\stdClass();$/;"	v
offset	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $offset = 0;$/;"	v
offset	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $offset = 0;$/;"	v
offset	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function limit($limit, $offset = 0)$/;"	v
offsetExists	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function offsetExists($offset)$/;"	f
offsetExists	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function offsetExists($key)$/;"	f
offsetExists	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function offsetExists($offset)$/;"	f
offsetGet	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function offsetGet($offset)$/;"	f
offsetGet	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function offsetGet($key)$/;"	f
offsetGet	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function offsetGet($offset)$/;"	f
offsetSet	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetSet	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetUnset	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function offsetUnset($offset)$/;"	f
offsetUnset	vendor/mongodb/mongodb/src/Model/IndexInfo.php	/^    public function offsetUnset($key)$/;"	f
offsetUnset	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function offsetUnset($offset)$/;"	f
ok	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $ok = false;$/;"	v
ok	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $ok = true;$/;"	v
ok	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $ok = filter_var($value, FILTER_VALIDATE_FLOAT);$/;"	v
oldConfig	vendor/pinguo/php-msf/src/Process/Config.php	/^                $oldConfig = $this->MSFServer->sysCache->get($proxyName);$/;"	v
oldNewline	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^        $oldNewline = $this->appendNewline;$/;"	v
omitModifiedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $this->omitModifiedCount = version_compare($this->getServerVersion(), '2.6.0', '<');$/;"	v
omitModifiedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    private $omitModifiedCount;$/;"	v
omitModifiedCount	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $this->omitModifiedCount = version_compare($this->getServerVersion(), '2.6.0', '<');$/;"	v
omitModifiedCount	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    private $omitModifiedCount;$/;"	v
onAfterFunc	vendor/pinguo/php-aop/src/Wrapper.php	/^        $this->onAfterFunc  = [];$/;"	v
onAfterFunc	vendor/pinguo/php-aop/src/Wrapper.php	/^    private $onAfterFunc = [];$/;"	v
onBeforeFunc	vendor/pinguo/php-aop/src/Wrapper.php	/^        $this->onBeforeFunc = [];$/;"	v
onBeforeFunc	vendor/pinguo/php-aop/src/Wrapper.php	/^    private $onBeforeFunc = [];$/;"	v
onClose	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function onClose($serv, $fd)$/;"	f
onClose	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function onClose($client)$/;"	f
onClose	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function onClose($client)$/;"	f
onClose	vendor/pinguo/php-msf/src/Server.php	/^    public function onClose($serv, $fd)$/;"	f
onConsoleRequest	vendor/pinguo/php-msf/src/MSFCli.php	/^    public function onConsoleRequest()$/;"	f
onErrorHandle	vendor/pinguo/php-msf/src/Server.php	/^        $this->onErrorHandle = [$this, 'onErrorHandle'];$/;"	v
onErrorHandle	vendor/pinguo/php-msf/src/Server.php	/^    public $onErrorHandle = null;$/;"	v
onErrorHandle	vendor/pinguo/php-msf/src/Server.php	/^    public function onErrorHandle($msg, $log)$/;"	f
onExceptionHandle	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function onExceptionHandle(\\Throwable $e)$/;"	f
onExceptionHandle	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function onExceptionHandle(\\Throwable $e)$/;"	f
onFinish	vendor/pinguo/php-msf/src/Server.php	/^    public function onFinish($serv, $taskId, $data)$/;"	f
onInitTimer	app/AppServer.php	/^    public function onInitTimer()$/;"	f
onInitTimer	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function onInitTimer()$/;"	f
onManagerStart	vendor/pinguo/php-msf/src/Server.php	/^    public function onManagerStart($serv)$/;"	f
onManagerStop	vendor/pinguo/php-msf/src/Server.php	/^    public function onManagerStop($serv)$/;"	f
onPipeMessage	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function onPipeMessage($serv, $fromWorkerId, $message)$/;"	f
onPipeMessage	vendor/pinguo/php-msf/src/Server.php	/^    public function onPipeMessage($serv, $fromWorkerId, $message)$/;"	f
onRequest	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function onRequest($request, $response)$/;"	f
onStart	vendor/pinguo/php-msf/src/Server.php	/^    public function onStart($serv)$/;"	f
onTask	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function onTask($serv, $taskId, $fromId, $data)$/;"	f
onTask	vendor/pinguo/php-msf/src/Server.php	/^    public function onTask($serv, $taskId, $fromId, $data)$/;"	f
onWorkerError	vendor/pinguo/php-msf/src/Server.php	/^    public function onWorkerError($serv, $workerId, $workerPid, $exitCode)$/;"	f
onWorkerStart	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function onWorkerStart($serv, $workerId)$/;"	f
onWorkerStart	vendor/pinguo/php-msf/src/MSFCli.php	/^    public function onWorkerStart($serv, $workerId)$/;"	f
onWorkerStart	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function onWorkerStart($serv, $workerId)$/;"	f
onWorkerStart	vendor/pinguo/php-msf/src/Server.php	/^    public function onWorkerStart($serv, $workerId)$/;"	f
onWorkerStop	vendor/pinguo/php-msf/src/Server.php	/^    public function onWorkerStop($serv, $fd)$/;"	f
op	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function aggregate(array $pipeline, array $op = [])$/;"	v
opArr	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $opArr = [];$/;"	v
opData	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $opData = $this->dispatch($opArr, $method, $arguments);$/;"	v
opData	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $opData = [];$/;"	v
openCriteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function openCriteria(array &$criteria, $connector = self::LOGICAL_AND)$/;"	f
openDownloadStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function openDownloadStream($id)$/;"	f
openDownloadStreamByFile	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function openDownloadStreamByFile(stdClass $file)$/;"	f
openDownloadStreamByName	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function openDownloadStreamByName($filename, array $options = [])$/;"	f
openHaving	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function openHaving($connector = self::LOGICAL_AND)$/;"	f
openUploadStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function openUploadStream($filename, array $options = [])$/;"	f
openWhere	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function openWhere($connector = self::LOGICAL_AND)$/;"	f
operation	vendor/mongodb/mongodb/src/Client.php	/^        $operation = new DropDatabase($databaseName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Client.php	/^        $operation = new ListDatabases($options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new Aggregate($this->databaseName, $this->collectionName, $pipeline, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new BulkWrite($this->databaseName, $this->collectionName, $operations, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new Count($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new CreateIndexes($this->databaseName, $this->collectionName, $indexes, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new DeleteMany($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new DeleteOne($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new Distinct($this->databaseName, $this->collectionName, $fieldName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new DropCollection($this->databaseName, $this->collectionName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new DropIndexes($this->databaseName, $this->collectionName, $indexName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new DropIndexes($this->databaseName, $this->collectionName, '*', $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new Find($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new FindOne($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new FindOneAndDelete($this->databaseName, $this->collectionName, $filter, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new FindOneAndReplace($this->databaseName, $this->collectionName, $filter, $replacement, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new FindOneAndUpdate($this->databaseName, $this->collectionName, $filter, $update, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new InsertMany($this->databaseName, $this->collectionName, $documents, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new InsertOne($this->databaseName, $this->collectionName, $document, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new ListIndexes($this->databaseName, $this->collectionName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new ReplaceOne($this->databaseName, $this->collectionName, $filter, $replacement, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new UpdateMany($this->databaseName, $this->collectionName, $filter, $update, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Collection.php	/^        $operation = new UpdateOne($this->databaseName, $this->collectionName, $filter, $update, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Database.php	/^        $operation = new CreateCollection($this->databaseName, $collectionName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Database.php	/^        $operation = new DatabaseCommand($this->databaseName, $command, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Database.php	/^        $operation = new DropCollection($this->databaseName, $collectionName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Database.php	/^        $operation = new DropDatabase($this->databaseName, $options);$/;"	v
operation	vendor/mongodb/mongodb/src/Database.php	/^        $operation = new ListCollections($this->databaseName, $options);$/;"	v
operation	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^        $operation = new DropCollection($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $operation = new ListCollections($this->getDatabaseName());$/;"	v
operation	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $operation = new ListIndexes($this->getDatabaseName(), $collectionName);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $operation = new Aggregate($this->getDatabaseName(), $this->getCollectionName(), $pipeline, ['typeMap' => $typeMap]);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $operation = new Aggregate($this->getDatabaseName(), $this->getCollectionName(), [['$foo' => 1]]);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $operation = new BulkWrite($this->getDatabaseName(), $this->getCollectionName(), $ops);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $operation = new BulkWrite($this->getDatabaseName(), $this->getCollectionName(), $ops, $options);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $operation = new CreateIndexes($this->getDatabaseName(), $this->getCollectionName(), $indexes);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^        $operation = new ListIndexes($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $operation = new Delete($this->getDatabaseName(), $this->getCollectionName(), $filter, 0);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $operation = new Delete($this->getDatabaseName(), $this->getCollectionName(), $filter, 0, $options);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $operation = new Delete($this->getDatabaseName(), $this->getCollectionName(), $filter, 1);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $operation = new DropCollection($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $operation = new ListCollections($this->getDatabaseName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $operation = new DropDatabase($this->getDatabaseName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $operation = new ListDatabases();$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $operation = new CreateIndexes($this->getDatabaseName(), $this->getCollectionName(), $indexes);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $operation = new DropIndexes($this->getDatabaseName(), $this->getCollectionName(), '*');$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $operation = new DropIndexes($this->getDatabaseName(), $this->getCollectionName(), 'x_1');$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^        $operation = new ListIndexes($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^        $operation = new FindAndModify($/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^        $operation = new Find($this->getDatabaseName(), $this->getCollectionName(), [], ['typeMap' => $typeMap]);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^        $operation = new FindOne($this->getDatabaseName(), $this->getCollectionName(), [], ['typeMap' => $typeMap]);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/FunctionalTestCase.php	/^        $operation = new DropCollection($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $operation = new InsertMany($this->getDatabaseName(), $this->getCollectionName(), $documents);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $operation = new InsertMany($this->getDatabaseName(), $this->getCollectionName(), $documents, $options);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $operation = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), $document);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $operation = new InsertOne($this->getDatabaseName(), $this->getCollectionName(), $document, $options);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $operation = new DropDatabase($this->getDatabaseName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $operation = new ListCollections($this->getDatabaseName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $operation = new ListCollections($this->getDatabaseName(), ['filter' => ['name' => $this->getCollectionName()]]);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $operation = new DropCollection($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $operation = new ListIndexes($this->getDatabaseName(), $this->getCollectionName());$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $operation = new Update($this->getDatabaseName(), $this->getCollectionName(), $filter, $update);$/;"	v
operation	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $operation = new Update($this->getDatabaseName(), $this->getCollectionName(), $filter, $update, $options);$/;"	v
operations	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $this->operations = $operations;$/;"	v
operations	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private $operations;$/;"	v
operations	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $operations = [];$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $operator = self::EQUALS,$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function orCriteria(array &$criteria, $column, $value, $operator = self::EQUALS, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function andHaving($column, $value, $operator = self::EQUALS, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function andWhere($column, $value, $operator = self::EQUALS, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function having($column, $value, $operator = self::EQUALS, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orHaving($column, $value, $operator = self::EQUALS, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orWhere($column, $value, $operator = self::EQUALS, $quote = null)$/;"	v
operator	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function where($column, $value, $operator = self::EQUALS, $connector = self::LOGICAL_AND, $quote = null)$/;"	v
operators	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $operators = func_get_args();$/;"	v
ops	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $ops = [$/;"	v
ops	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $ops = [['insertOne' => [['_id' => 1]]]];$/;"	v
option	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->option = array();$/;"	v
option	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $option;$/;"	v
option	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function option($option)$/;"	f
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $optionNames = $this->optionNames;$/;"	v
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $optionNames = [$/;"	v
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            $optionNames = array_merge($optionNames, ['limit', 'skip']);$/;"	v
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $optionNames = [$/;"	v
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $optionNames = ['hint', 'maxTimeMS'];$/;"	v
optionNames	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $optionNames = [$/;"	v
optionalPath	vendor/hassankhan/config/src/Config.php	/^                $optionalPath = ltrim($unverifiedPath, '?');$/;"	v
options	app/Tasks/Idallloc.php	/^        $options = [$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function __construct($server = 'default', array $options = ['connect' => true], array $driverOptions = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $options = $op;$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $options = [$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $options = ['projection' => TypeConverter::convertProjection($fields)] + $options;$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function aggregateCursor(array $pipeline, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function batchInsert(array &$a, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function count($query = [], $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function createIndex($keys, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function ensureIndex(array $keys, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function insert(&$a, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function save(&$a, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function update(array $criteria, array $newobj, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $options = $this->getOptions($optionNames) + $this->options;$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $options = $this->getOptions($optionNames);$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $options = $this->getOptions() + $this->options;$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $options = [$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function command(array $data, $options = [], &$hash = null)$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function createCollection($name, $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getCollectionInfo(array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function getCollectionNames(array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function listCollections(array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private function insertFile($record, array $options = [])$/;"	v
options	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^                $options = [];$/;"	v
options	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $options = [$/;"	v
options	vendor/mongodb/mongodb/src/Client.php	/^    public function dropDatabase($databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Client.php	/^    public function listDatabases(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Client.php	/^    public function selectCollection($databaseName, $collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Client.php	/^    public function selectDatabase($databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function __construct(Manager $manager, $databaseName, $collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function aggregate(array $pipeline, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function bulkWrite(array $operations, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function count($filter = [], array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function createIndex($key, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function createIndexes(array $indexes, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function deleteMany($filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function deleteOne($filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function drop(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function dropIndex($indexName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function dropIndexes(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function find($filter = [], array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOne($filter = [], array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndDelete($filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndReplace($filter, $replacement, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function findOneAndUpdate($filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function insertMany(array $documents, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function insertOne($document, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function listIndexes(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function replaceOne($filter, $replacement, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function updateMany($filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function updateOne($filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Collection.php	/^    public function withOptions(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function __construct(Manager $manager, $databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function command($command, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function createCollection($collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function drop(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function dropCollection($collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function listCollections(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function selectCollection($collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function selectGridFSBucket(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Database.php	/^    public function withOptions(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function __construct(Manager $manager, $databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function downloadToStreamByName($filename, $destination, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function find($filter = [], array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function findOne($filter = [], array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function openDownloadStreamByName($filename, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function openUploadStream($filename, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function uploadFromStream($filename, $source, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findFiles($filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function findOneFile($filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function __construct(CollectionWrapper $collectionWrapper, $filename, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    public function __construct($databaseName, $collectionName, array $pipeline, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $options = ['ordered' => $this->options['ordered']];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    public function __construct($databaseName, $collectionName, array $operations, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private $options = [];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private $options = [];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    public function __construct($databaseName, $collectionName, array $indexes, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^    public function __construct($databaseName, $command, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    public function __construct($databaseName, $collectionName, $filter, $limit, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DeleteMany.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DeleteOne.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    public function __construct($databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    public function __construct($databaseName, $collectionName, $indexName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Find.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOne.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOneAndDelete.php	/^    public function __construct($databaseName, $collectionName, $filter, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOneAndReplace.php	/^    public function __construct($databaseName, $collectionName, $filter, $replacement, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/FindOneAndUpdate.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $options = ['ordered' => $this->options['ordered']];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    public function __construct($databaseName, $collectionName, array $documents, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    public function __construct($databaseName, $collectionName, $document, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $options = isset($this->options['maxTimeMS'])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    public function __construct($databaseName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^    public function __construct(array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $options = isset($this->options['maxTimeMS'])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    public function __construct($databaseName, $collectionName, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^    public function __construct($databaseName, $collectionName, $filter, $replacement, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $this->options = $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private $options;$/;"	v
options	vendor/mongodb/mongodb/src/Operation/Update.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^    public function __construct($databaseName, $collectionName, $filter, $update, array $options = [])$/;"	v
options	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $options = [$/;"	v
options	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $options = ['filter' => ['name' => $collectionName]];$/;"	v
options	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $options = [$/;"	v
options	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $options = [$/;"	v
options	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $options = ['writeConcern' => new WriteConcern(0)];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/CreateCollectionTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DatabaseCommandTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $options = ['writeConcern' => new WriteConcern(0)];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DistinctTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DropCollectionTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DropDatabaseTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/DropIndexesTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/FindAndModifyTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/FindOneAndDeleteTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $options = ['writeConcern' => new WriteConcern(0)];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $options = ['writeConcern' => new WriteConcern(0)];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/InsertOneTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/ListDatabasesTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/ListIndexesTest.php	/^        $options = [];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $options = ['multi' => true];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $options = ['upsert' => true];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $options = ['writeConcern' => new WriteConcern(0)];$/;"	v
options	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^        $options = [];$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $this->options = array_merge([$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    private $options;$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    public function __construct(array $options = [], $level = Logger::DEBUG, $bubble = true)$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^        $this->options = array_merge($/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected $options = [];$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function __construct(Client $client, array $options = [], $level = Logger::DEBUG, $bubble = true)$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^ *    $options = array($/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $this->options = $this->initOptions($options);$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    private $options = [$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    public function __construct(array $options = [], Connector $connector = null, $level = Logger::DEBUG, $bubble = true)$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $options = [];$/;"	v
options	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $options = array($/;"	v
options	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $options = JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE;$/;"	v
options	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    protected $options = [$/;"	v
options	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $options = $handler->getOptions();$/;"	v
options	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^            $options = $this->collectionOptions;$/;"	v
options	vendor/pinguo/php-msf/src/Controllers/Rest.php	/^            $options = $this->resourceOptions;$/;"	v
options	vendor/pinguo/php-msf/src/Pack/JsonPack.php	/^    public function pack($data, $options = JSON_UNESCAPED_UNICODE, $depth = 512)$/;"	v
options	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $options = [$/;"	v
or	vendor/composer/ClassLoader.php	/^     * Loads the given class or interface.$/;"	c
or	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^            throw new \\MongoConnectionException('No $mongoConf in this class or no server config in $mongoConf');$/;"	c
orCriteria	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private function orCriteria(array &$criteria, $column, $value, $operator = self::EQUALS, $quote = null)$/;"	f
orHaving	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orHaving($column, $value, $operator = self::EQUALS, $quote = null)$/;"	f
orWhere	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orWhere($column, $value, $operator = self::EQUALS, $quote = null)$/;"	f
order	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function groupBy($column, $order = null)$/;"	v
order	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orderBy($column, $order = self::ORDER_BY_ASC)$/;"	v
orderBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->orderBy = array();$/;"	v
orderBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $orderBy;$/;"	v
orderBy	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function orderBy($column, $order = self::ORDER_BY_ASC)$/;"	f
original	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $original = '54203e08d51d4a1f868b456e';$/;"	v
out	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $out = $this->mongoCollection->count($query, $options);$/;"	v
out	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $out = $this->mongoCollection->findOne($query, $fields, $options);$/;"	v
out	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $out = iterator_to_array($cursor);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $output = $this->addTitle($record['level_name'], $record['level']);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%'.$var.'%', $this->stringify($val), $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%context%', '', $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%context.'.$var.'%', $this->stringify($val), $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%extra%', '', $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^                $output = str_replace('%extra.'.$var.'%', $this->stringify($val), $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^            $output = preg_replace('\/%(?:extra|context)\\..+?%\/', '', $output);$/;"	v
output	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $output = $this->format;$/;"	v
output	vendor/pinguo/php-msf/src/Base/Output.php	/^            $output = json_encode($output, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);$/;"	v
output	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function output($data = null, $httpCode = 200)$/;"	f
output	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function output($data = null, $status = 200)$/;"	f
output	vendor/pinguo/php-msf/src/Helpers/Common.php	/^        $output = str_replace([', ,', ',  ', ', )', ', ]'], [', ', ', ', ')', ']'], $output);$/;"	v
output	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->output         = null;$/;"	v
output	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->output = $output;$/;"	v
output	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $output;$/;"	v
output	vendor/pinguo/php-msf/src/HttpServer.php	/^                $output   = $instance->context->getObjectPool()->get(Output::class, [$instance]);$/;"	v
output	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        $output = $this->getContext()->getOutput();$/;"	v
outputJson	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function outputJson($data = null, $httpCode = 200)$/;"	f
outputJson	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function outputJson($data = null, $status = 200)$/;"	f
outputJson	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function outputJson($data = null, $message = '', $status = 200)$/;"	f
outputOptions	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public function outputOptions(array $options)$/;"	f
outputView	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function outputView(array $data, $view = null)$/;"	f
outputView	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function outputView(array $data, $view = null)$/;"	f
overflowed	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $overflowed = false;$/;"	v
overriddenOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^        $overriddenOptions = [$/;"	v
override	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        return $override === null ? $this->autoQuote : $override;$/;"	v
override	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function autoQuote($value, $override = null)$/;"	v
overrideLimit	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function mergeInto(Miner $Miner, $overrideLimit = true)$/;"	v
pack	vendor/pinguo/php-msf/src/Pack/IPack.php	/^    function pack($data);$/;"	f
pack	vendor/pinguo/php-msf/src/Pack/JsonPack.php	/^    public function pack($data, $options = JSON_UNESCAPED_UNICODE, $depth = 512)$/;"	f
pack	vendor/pinguo/php-msf/src/Pack/MsgPack.php	/^    public function pack($data)$/;"	f
pack	vendor/pinguo/php-msf/src/Pack/SerializePack.php	/^    public function pack($data)$/;"	f
pack	vendor/pinguo/php-msf/src/Server.php	/^        $this->pack = new $packClassName;$/;"	v
pack	vendor/pinguo/php-msf/src/Server.php	/^    public $pack;$/;"	v
packClassName	vendor/pinguo/php-msf/src/Server.php	/^                $packClassName = "\\\\PG\\\\MSF\\\\Pack\\\\" . $packTool;$/;"	v
packClassName	vendor/pinguo/php-msf/src/Server.php	/^            $packClassName = "\\\\App\\\\Pack\\\\" . $packTool;$/;"	v
packClassName	vendor/pinguo/php-msf/src/Server.php	/^            $packClassName = $packTool;$/;"	v
packTool	vendor/pinguo/php-msf/src/Server.php	/^        $packTool = $this->config->get('server.pack_tool', 'JsonPack');$/;"	v
pairConnect	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function pairConnect()$/;"	f
pairPersistConnect	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function pairPersistConnect($username = "", $password = "")$/;"	f
palceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                    $palceholderValues = $this->getPlaceholderValues();$/;"	v
palceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoQuery($sql = null, $palceholderValues = null, $fetchmode = \\PDO::FETCH_ASSOC)$/;"	v
parallelCollectionScan	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function parallelCollectionScan($num_cursors)$/;"	f
paramKey	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^                    foreach ($parameter as $paramKey => $paramValue) {$/;"	v
parameterNames	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $parameterNames = [$/;"	v
parameters	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $parameters = implode(' ', $this->parameters);$/;"	v
parameters	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->parameters = array_merge($this->parameters, (array) $parameters);$/;"	v
parameters	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $parameters = [];$/;"	v
params	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^        $params = $doc->getParams();$/;"	v
params	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $params = $GLOBALS['mail'][0];$/;"	v
params	vendor/pinguo/php-msf/src/Console/Request.php	/^        $params = [];$/;"	v
params	vendor/pinguo/php-msf/src/MSFCli.php	/^                            $params = [];$/;"	v
params	vendor/pinguo/php-msf/src/MSFCli.php	/^                        $params = array_values($this->route->getParams());$/;"	v
params	vendor/pinguo/php-msf/src/MSFCli.php	/^                    $params = [];$/;"	v
params	vendor/pinguo/php-msf/src/MSFCli.php	/^                $params = array_values($this->route->getParams());$/;"	v
params	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $params = [];$/;"	v
params	vendor/pinguo/php-msf/src/Server.php	/^    public function registerTimer($ms, callable $callBack, $params = [])$/;"	v
parent	vendor/pinguo/php-aop/src/MI.php	/^    public $parent;$/;"	v
parents	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                    $parents = class_parents($className, true);$/;"	v
parse	vendor/hassankhan/config/src/FileParser/FileParserInterface.php	/^    public function parse($path);$/;"	f
parse	vendor/hassankhan/config/src/FileParser/Ini.php	/^    public function parse($path)$/;"	f
parse	vendor/hassankhan/config/src/FileParser/Json.php	/^    public function parse($path)$/;"	f
parse	vendor/hassankhan/config/src/FileParser/Php.php	/^    public function parse($path)$/;"	f
parse	vendor/hassankhan/config/src/FileParser/Xml.php	/^    public function parse($path)$/;"	f
parse	vendor/hassankhan/config/src/FileParser/Yaml.php	/^    public function parse($path)$/;"	f
parseCommand	vendor/pinguo/php-msf/src/MSFCli.php	/^    protected static function parseCommand()$/;"	f
parseCommand	vendor/pinguo/php-msf/src/Server.php	/^    protected static function parseCommand()$/;"	f
parseHttpArgument	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    protected function parseHttpArgument($arguments)$/;"	f
parsePath	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function parsePath($path)$/;"	f
parseRule	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public function parseRule()$/;"	f
parseUrl	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public static function parseUrl($url)$/;"	f
parseUrlResult	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $parseUrlResult = parse_url($url);$/;"	v
parseVerb	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function parseVerb($request)$/;"	f
parser	vendor/hassankhan/config/src/Config.php	/^                $parser = $tempParser;$/;"	v
parser	vendor/hassankhan/config/src/Config.php	/^            $parser    = $this->getParser($extension);$/;"	v
parser	vendor/hassankhan/config/src/Config.php	/^        $parser = null;$/;"	v
partial	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function partial($okay = true)$/;"	f
parts	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^            $parts = explode(':', substr((string) $sec, 1, -1));$/;"	v
parts	vendor/hassankhan/config/src/Config.php	/^            $parts = explode('.', $info['basename']);$/;"	v
parts	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $parts = explode(':\/\/', $path, 2);$/;"	v
parts	vendor/pinguo/plates/src/Extension/URI.php	/^        $this->parts = explode('\/', $this->uri);$/;"	v
parts	vendor/pinguo/plates/src/Extension/URI.php	/^    protected $parts;$/;"	v
parts	vendor/pinguo/plates/src/Template/Name.php	/^        $parts  = explode('\/', $this->name);$/;"	v
passthru	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^                $passthru = $passthru || !$this->isDuplicate($record);$/;"	v
passthru	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $passthru = null;$/;"	v
passthru	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        if ($passthru === true || $passthru === null) {$/;"	v
passthruLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $this->passthruLevel = Logger::toMonologLevel($passthruLevel);$/;"	v
passthruLevel	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $passthruLevel;$/;"	v
password	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function pairPersistConnect($username = "", $password = "")$/;"	v
password	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function persistConnect($username = "", $password = "")$/;"	v
path	vendor/hassankhan/config/src/FileParser/AbstractFileParser.php	/^        $this->path = $path;$/;"	v
path	vendor/hassankhan/config/src/FileParser/AbstractFileParser.php	/^    protected $path;$/;"	v
path	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $path = $this->createPathForFile($file);$/;"	v
path	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $path = $this->createPathForUpload();$/;"	v
path	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $path = substr(json_encode($exception->getFile(), $options), 1, -1);$/;"	v
path	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $path = str_replace('\\\\\/', '\/', json_encode(__FILE__));$/;"	v
path	vendor/pinguo/php-msf/src/Base/Output.php	/^        $path = '\/',$/;"	v
path	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $path = $path . "?" . http_build_query($query);$/;"	v
path	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->path       = $path;$/;"	v
path	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public $path;$/;"	v
path	vendor/pinguo/php-msf/src/HttpServer.php	/^            $path = __DIR__ . '\/Views\/index.html';$/;"	v
path	vendor/pinguo/php-msf/src/HttpServer.php	/^        $path = realpath(urldecode($path));$/;"	v
path	vendor/pinguo/php-msf/src/Process/Inotify.php	/^                        $path = $monitorFiles[$ev['wd']] .'\/'. $ev['name'];$/;"	v
path	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        $path = $data[0] ?? $this->routeParams->path;$/;"	v
path	vendor/pinguo/plates/src/Engine.php	/^    public function path($name)$/;"	f
path	vendor/pinguo/plates/src/Extension/Asset.php	/^        $this->path = rtrim($path, '\/');$/;"	v
path	vendor/pinguo/plates/src/Extension/Asset.php	/^    public $path;$/;"	v
path	vendor/pinguo/plates/src/Template/Directory.php	/^        $this->path = $path;$/;"	v
path	vendor/pinguo/plates/src/Template/Directory.php	/^    protected $path;$/;"	v
path	vendor/pinguo/plates/src/Template/Folder.php	/^        $this->path = $path;$/;"	v
path	vendor/pinguo/plates/src/Template/Folder.php	/^    protected $path;$/;"	v
path	vendor/pinguo/plates/src/Template/Name.php	/^            $path = $this->getDefaultDirectory() . DIRECTORY_SEPARATOR . $this->file;$/;"	v
path	vendor/pinguo/plates/src/Template/Name.php	/^        $path = $this->folder->getPath() . DIRECTORY_SEPARATOR . $this->file;$/;"	v
path	vendor/pinguo/plates/src/Template/Template.php	/^    public function path()$/;"	f
pathInfo	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        $pathInfo = $this->trimSlashes($this->routeParams->path);$/;"	v
pathInfo	vendor/pinguo/plates/src/Extension/Asset.php	/^        $pathInfo = pathinfo($url);$/;"	v
pathParams	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $pathParams = $rule[1][2];$/;"	v
pathParams	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $pathParams = []; \/\/ path 里含有<>$/;"	v
paths	vendor/hassankhan/config/src/Config.php	/^                    $paths = array_merge($paths, $this->getValidPath($unverifiedPath));$/;"	v
paths	vendor/hassankhan/config/src/Config.php	/^                $paths = array_merge($paths, $this->getValidPath($optionalPath));$/;"	v
paths	vendor/hassankhan/config/src/Config.php	/^            $paths = glob($path . '\/*.*');$/;"	v
paths	vendor/hassankhan/config/src/Config.php	/^        $paths      = $this->getValidPath($path);$/;"	v
paths	vendor/hassankhan/config/src/Config.php	/^        $paths = array();$/;"	v
pattern	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $pattern = '%\\[\\{"Monolog\\\\\\\\\\\\\\\\Formatter\\\\\\\\\\\\\\\\TestFooNorm":"JSON_ERROR"\\}%';$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                $pattern = '#^$#u';$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                $pattern = '\/' . $pattern . '\/';$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                $pattern = isset($matches1[4]) ? $matches1[4] : '';$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $pattern = $this->trimSlashes($pattern);$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $pattern = '#^' . trim(strtr($pattern, $tr), '\/') . '$#u';$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $pattern = preg_replace('\/<([\\w._-]+):?([^>]+)?>\/', '<$1>', $pattern);$/;"	v
pattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        foreach ($rules as $pattern => $path) {$/;"	v
patternParams	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $patternParams = $rule[1][1];$/;"	v
patternParams	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $patternParams = []; \/\/ pattern 里含有<>$/;"	v
patterns	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    \/\/public $patterns = [$/;"	v
payload	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^            $payload = $context['payload'];$/;"	v
payload	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $payload = [];$/;"	v
pdo	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $pdo = new \\PDO($/;"	v
pdoBeginTrans	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoBeginTrans()$/;"	f
pdoCommitTrans	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoCommitTrans()$/;"	f
pdoConnect	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoConnect($activeConfig)$/;"	f
pdoExecute	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    protected function pdoExecute($sql, $palceholderValues)$/;"	f
pdoInsertId	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoInsertId()$/;"	f
pdoQuery	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoQuery($sql = null, $palceholderValues = null, $fetchmode = \\PDO::FETCH_ASSOC)$/;"	f
pdoRollBackTrans	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function pdoRollBackTrans()$/;"	f
pdoStatement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $pdoStatement = $this->pdoExecute($sql, $palceholderValues);$/;"	v
percent	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $percent = round($differences \/ $this->lookups * 100);$/;"	v
persistConnect	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function persistConnect($username = "", $password = "")$/;"	f
persistent	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    protected $persistent;$/;"	v
persistent	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->persistent = (boolean) $persistent;$/;"	v
persistent	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $persistent = false;$/;"	v
pfsockopen	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function pfsockopen()$/;"	f
phpSerialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->phpSerialize   = $redisAsynPool->phpSerialize;$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $phpSerialize = false;$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $this->phpSerialize   = $redisAsynPool->phpSerialize;$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    protected function serializeHandler($data, $phpSerialize = false)$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public $phpSerialize = false;$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $this->phpSerialize = $config['phpSerialize'];$/;"	v
phpSerialize	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $phpSerialize = false;$/;"	v
pid	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^        $pid = substr($id, 16, 2) . substr($id, 14, 2);$/;"	v
pid	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^            $pid = '-';$/;"	v
pid	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $pid = getmypid();$/;"	v
pidFile	vendor/pinguo/php-msf/src/Server.php	/^    public static $pidFile = '';$/;"	v
pids	vendor/pinguo/php-msf/src/Server.php	/^            $pids = explode(',', file_get_contents(self::$pidFile));$/;"	v
pipeline	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $pipeline = [];$/;"	v
pipeline	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $pipeline = [$/;"	v
pipeline	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $this->pipeline = $pipeline;$/;"	v
pipeline	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private $pipeline;$/;"	v
pipeline	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $pipeline = [['$match' => ['_id' => ['$ne' => 2]]]];$/;"	v
pipes	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private $pipes = [];$/;"	v
placeholder	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                    $placeholder = 'a' . hash('crc32b', $name);$/;"	v
placeholder	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            foreach ($placeholders as $placeholder => $name) {$/;"	v
placeholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $placeholderValues = array_merge($placeholderValues, $criterion['value']);$/;"	v
placeholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $placeholderValues = array();$/;"	v
placeholders	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $placeholders = $rule[1][3];$/;"	v
placeholders	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $placeholders = [];$/;"	v
poll	vendor/pinguo/php-msf/src/Base/Core.php	/^                $poll = null;$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Core.php	/^            $pool = new MysqlAsynPool($this->getConfig(), $activePoolName);$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Core.php	/^            $pool = new RedisAsynPool($this->getConfig(), $activePoolName);$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Core.php	/^        $pool = getInstance()->getAsynPool($poolName);$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Pool.php	/^            $pool = $this->applyNewPool($class);$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Pool.php	/^            $pool = $this->applyNewPool($poolName);$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Pool.php	/^        $pool     = $this->map[$poolName] ?? null;$/;"	v
pool	vendor/pinguo/php-msf/src/Base/Pool.php	/^        $pool = $this->map[$class] ?? null;$/;"	v
pool	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->pool      = new \\SplQueue();$/;"	v
pool	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $pool;$/;"	v
pool	vendor/pinguo/php-msf/src/Process/Config.php	/^                foreach ($pools as $pool => $weight) {$/;"	v
pool	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $pool = getInstance()->getAsynPool($poolName);$/;"	v
pool	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                foreach ($this->goodPools as $pool => $weight) {$/;"	v
pool	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        foreach ($this->pools as $pool => $weight) {$/;"	v
poolDebug	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function poolDebug()$/;"	f
poolInstance	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                    $poolInstance = new RedisAsynPool(getInstance()->config, $pool);$/;"	v
poolInstance	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $poolInstance = getInstance()->getAsynPool($pool);$/;"	v
poolInstance	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                    $poolInstance = new RedisAsynPool(getInstance()->config, $pool);$/;"	v
poolInstance	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                $poolInstance = getInstance()->getAsynPool($pool);$/;"	v
poolName	vendor/pinguo/php-msf/src/Base/Core.php	/^        $poolName       = MysqlAsynPool::ASYN_NAME . $poolName;$/;"	v
poolName	vendor/pinguo/php-msf/src/Base/Core.php	/^        $poolName       = RedisAsynPool::ASYN_NAME . $poolName;$/;"	v
poolName	vendor/pinguo/php-msf/src/Base/Pool.php	/^        $poolName = trim($class, '\\\\');$/;"	v
poolName	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                    $poolName = $this->master;$/;"	v
poolName	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                    $poolName = $this->slaves[$rand];$/;"	v
poolName	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                $poolName = $this->master;$/;"	v
pools	vendor/pinguo/php-msf/src/Process/Config.php	/^                $pools     = $proxyConfig['pools'];$/;"	v
pools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $this->pools     = $config['pools'];$/;"	v
pools	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private $pools;$/;"	v
pools	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^        $this->pools = $config['pools'];$/;"	v
pools	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private $pools;$/;"	v
popHandler	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function popHandler(): HandlerInterface$/;"	f
popProcessor	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function popProcessor(): callable$/;"	f
popProcessor	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerInterface.php	/^    public function popProcessor(): callable;$/;"	f
popProcessor	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php	/^    public function popProcessor(): callable$/;"	f
popProcessor	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function popProcessor(): callable$/;"	f
port	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->port = $urlInfo['port'];$/;"	v
port	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $port;$/;"	v
port	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->port = $port;$/;"	v
port	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $port;$/;"	v
port	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function __construct($ip, $port = 514)$/;"	v
port	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function __construct($host, $port = 514, $facility = LOG_USER, $level = Logger::DEBUG, $bubble = true, $ident = 'php')$/;"	v
port	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                    $port = getInstance()->getAsynPool($pool)->getSync()->getPort();$/;"	v
pos	vendor/composer/ClassLoader.php	/^        if (false !== $pos = strrpos($class, '\\\\')) {$/;"	v
pos	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $pos = $match[0][1];$/;"	v
pos	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $pos = strpos($stream, ':\/\/');$/;"	v
position	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->position = 0;$/;"	v
position	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $position = 0;$/;"	v
position	vendor/flexihash/flexihash/src/Flexihash.php	/^            $position = $this->hasher->hash($target.$i);$/;"	v
positionToTarget	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $positionToTarget = [];$/;"	v
positionToTargetSorted	vendor/flexihash/flexihash/src/Flexihash.php	/^            $this->positionToTargetSorted = true;$/;"	v
positionToTargetSorted	vendor/flexihash/flexihash/src/Flexihash.php	/^        $this->positionToTargetSorted = false;$/;"	v
positionToTargetSorted	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $positionToTargetSorted = false;$/;"	v
post	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function post($index)$/;"	f
post	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function post($path, $data, $callback)$/;"	f
post	vendor/pinguo/php-msf/src/Console/Request.php	/^        $this->post                = $params;$/;"	v
post	vendor/pinguo/php-msf/src/Console/Request.php	/^    public $post;$/;"	v
postData	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $postData = [$/;"	v
postData	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $postData = $this->slackRecord->getSlackData($record);$/;"	v
postGet	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function postGet($index)$/;"	f
postString	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $postString = json_encode($postData);$/;"	v
postString	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $postString = json_encode($postData);$/;"	v
prefix	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $this->prefix = (string) $prefix;$/;"	v
prefix	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    private $prefix;$/;"	v
prefix	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function __construct(MongoDB $db, $prefix = "fs", $chunks = null)$/;"	v
prefix	vendor/composer/ClassLoader.php	/^            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {$/;"	v
prefixDirsPsr4	vendor/composer/ClassLoader.php	/^    private $prefixDirsPsr4 = array();$/;"	v
prefixDirsPsr4	vendor/composer/autoload_static.php	/^    public static $prefixDirsPsr4 = array ($/;"	v
prefixLengthsPsr4	vendor/composer/ClassLoader.php	/^    private $prefixLengthsPsr4 = array();$/;"	v
prefixLengthsPsr4	vendor/composer/autoload_static.php	/^    public static $prefixLengthsPsr4 = array ($/;"	v
prefixesPsr0	vendor/composer/ClassLoader.php	/^    private $prefixesPsr0 = array();$/;"	v
prefixesPsr0	vendor/composer/autoload_static.php	/^    public static $prefixesPsr0 = array ($/;"	v
prepare	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function prepare(string $confKey, string $db, string $collection)$/;"	f
prepareContentData	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function prepareContentData($record)$/;"	f
prepareData	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function prepareData()$/;"	f
prepareFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    protected function prepareFile($data = 'abcd', $extra = [])$/;"	f
prepareFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    protected function prepareFile($data = 'abcd', $extra = [])$/;"	f
prepareFindAndModifyArguments	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    private function prepareFindAndModifyArguments($arguments)$/;"	f
prepareOne	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function prepareOne();$/;"	f
prepareOne	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function prepareOne()$/;"	f
prepareOne	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function prepareOne()$/;"	f
preparing	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^     * Instance of the SlackRecord util class preparing data for Slack API.$/;"	c
preparing	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^     * Instance of the SlackRecord util class preparing data for Slack API.$/;"	c
prepend	vendor/composer/ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	v
prepend	vendor/composer/ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	v
prettyPrintFlag	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $prettyPrintFlag = defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 128;$/;"	v
prev	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $prev = set_error_handler([$this, 'handleError'], $errorTypes);$/;"	v
prev	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $prev = set_exception_handler([$this, 'handleException']);$/;"	v
prevError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function prevError()$/;"	f
prevError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function prevError()$/;"	f
previous	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    private function formatException($exception, $previous = null)$/;"	v
previous	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^        $previous = new \\LogicException('Wut?');$/;"	v
previousErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->previousErrorHandler = $prev ?: true;$/;"	v
previousErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $previousErrorHandler;$/;"	v
previousExceptionHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^            $this->previousExceptionHandler = $prev;$/;"	v
previousExceptionHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $previousExceptionHandler;$/;"	v
previousJoinIndex	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $previousJoinIndex = $joinIndex - 1;$/;"	v
previousTable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $previousTable = $this->getFrom();$/;"	v
previousTable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $previousTable = $this->getUpdate();$/;"	v
previousTable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $previousTable = $this->join[$previousJoinIndex]['table'];$/;"	v
previousTable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $previousTable = false;$/;"	v
previousText	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $previousText = '';$/;"	v
previousUserContext	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^                $previousUserContext = $this->ravenClient->context->user;$/;"	v
previousUserContext	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $previousUserContext = false;$/;"	v
priority	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $priority = $severity + $this->facility;$/;"	v
private	vendor/pinguo/php-aop/src/MI.php	/^            $private     = $reflection->getProperties(\\ReflectionProperty::IS_PRIVATE);$/;"	v
pro1	app/Models/Demo.php	/^        $this->pro1 = $pro1;$/;"	v
pro1	app/Models/Demo.php	/^    public $pro1;$/;"	v
pro2	app/Models/Demo.php	/^        $this->pro2 = $pro2;$/;"	v
pro2	app/Models/Demo.php	/^    public $pro2;$/;"	v
pro3	app/Models/Demo.php	/^        $this->pro3 = "protected";$/;"	v
pro3	app/Models/Demo.php	/^        $this->pro3 = null;$/;"	v
pro3	app/Models/Demo.php	/^    protected $pro3;$/;"	v
pro4	app/Models/Demo.php	/^        $this->pro4 = "private";$/;"	v
pro4	app/Models/Demo.php	/^        $this->pro4 = null;$/;"	v
pro4	app/Models/Demo.php	/^    private $pro4;$/;"	v
proc	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $proc = new PsrLogMessageProcessor($format);$/;"	v
proc	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^        $proc = new PsrLogMessageProcessor;$/;"	v
process	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^            $this->process = null;$/;"	v
process	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $this->process = proc_open($this->command, self::DESCRIPTOR_SPEC, $this->pipes, $this->cwd);$/;"	v
process	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private $process;$/;"	v
process	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $process = $property->getValue($handler);$/;"	v
process	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $this->process      = $process;$/;"	v
process	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    protected $process;$/;"	v
processName	vendor/pinguo/php-aop/src/Factory.php	/^                $processName = @cli_get_process_title();$/;"	v
processRecord	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php	/^    protected function processRecord(array $record)$/;"	f
processType	vendor/pinguo/php-msf/src/MSFServer.php	/^            $this->processType = Marco::PROCESS_TASKER;$/;"	v
processType	vendor/pinguo/php-msf/src/MSFServer.php	/^            $this->processType = Marco::PROCESS_WORKER;$/;"	v
processType	vendor/pinguo/php-msf/src/Server.php	/^    public $processType = Marco::PROCESS_USER;$/;"	v
processed	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^            $processed = [];$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor = $this->getMockBuilder('Monolog\\Processor\\WebProcessor')$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^        $processor = new GitProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $processor = new IntrospectionProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $processor = new IntrospectionProcessor(Logger::CRITICAL);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $processor = new MemoryPeakUsageProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $processor = new MemoryPeakUsageProcessor(true, false);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $processor = new MemoryUsageProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $processor = new MemoryUsageProcessor(true, false);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^        $processor = new MercurialProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^        $processor = new ProcessIdProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $processor = new TagProcessor($tags);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $processor = new UidProcessor();$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $processor = new UidProcessor(10);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server, ['url' => 'REMOTE_ADDR']);$/;"	v
processor	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $processor = new WebProcessor($server, ['url', 'http_method']);$/;"	v
processor1	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $processor1 = new WebProcessor;$/;"	v
processor1	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor1 = new WebProcessor;$/;"	v
processor2	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^        $processor2 = new WebProcessor;$/;"	v
processor2	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $processor2 = new WebProcessor;$/;"	v
processors	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php	/^    protected $processors = [];$/;"	v
processors	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->processors = $processors;$/;"	v
processors	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $processors;$/;"	v
processors	vendor/pinguo/php-log/src/PGLog.php	/^        $this->processors = [];$/;"	v
processors	vendor/pinguo/php-log/src/PGLog.php	/^        array $processors = [],$/;"	v
profile	vendor/pinguo/php-log/src/PGLog.php	/^        $profile = $this->getAllProfileInfo();$/;"	v
profile	vendor/pinguo/php-log/src/PGLog.php	/^    public function profile($name, $cost)$/;"	f
profileEnd	vendor/pinguo/php-log/src/PGLog.php	/^    public function profileEnd($name)$/;"	f
profileName	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $profileName         = $taskProxyData['message']['task_name'] . '::' . $taskProxyData['message']['task_fuc_name'];$/;"	v
profileName	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $profileName     = mt_rand(1, 9) . mt_rand(1, 9) . mt_rand(1, 9) . '#dns-' . $this->client->urlData['host'];$/;"	v
profileName	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $profileName      = mt_rand(1, 9) . mt_rand(1, 9) . mt_rand(1, 9) . '#api-http:\/\/' . $this->client->urlData['host'] . ':' . $this->client->urlData['port'] . $this->path;$/;"	v
profileName	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $profileName = $this->mysqlPool->getAsynName() . '(' . str_replace("\\n", " ", $sql) . ')';$/;"	v
profileName	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $this->profileName = 'mongo.' . $db . '.';$/;"	v
profileName	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    private $profileName = '';$/;"	v
profileStackLen	vendor/pinguo/php-log/src/PGLog.php	/^    public $profileStackLen = 20;$/;"	v
profileStart	vendor/pinguo/php-log/src/PGLog.php	/^    public function profileStart($name)$/;"	f
projection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^            $projection = TypeConverter::fromLegacy($fields);$/;"	v
projection	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^            $projection = array_fill_keys($/;"	v
projection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->projection = $f;$/;"	v
projection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->projection = $fields;$/;"	v
projection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $projection;$/;"	v
projection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $projection = ['_id' => false, 'foo' => true];$/;"	v
prop	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $prop = $ref->getProperty($property);$/;"	v
prop	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $prop = $this->getPrivatePropertyValue($errHandler, 'previousErrorHandler');$/;"	v
prop	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $prop = $this->getPrivatePropertyValue($errHandler, 'previousExceptionHandler');$/;"	v
prop	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $prop = $this->getPrivatePropertyValue($errHandler, 'uncaughtExceptionLevelMap');$/;"	v
prop	vendor/pinguo/php-aop/src/MI.php	/^            foreach (MI::$__reflections[static::class][Marco::DS_PRIVATE] as $prop => $val) {$/;"	v
prop	vendor/pinguo/php-aop/src/MI.php	/^            foreach (MI::$__reflections[static::class][Marco::DS_PROTECTED] as $prop => $val) {$/;"	v
prop	vendor/pinguo/php-aop/src/MI.php	/^            foreach (MI::$__reflections[static::class][Marco::DS_PUBLIC] as $prop => $val) {$/;"	v
prop	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^                        foreach (MI::$__reflections[$class][Marco::DS_PUBLIC] as $prop => $val) {$/;"	v
property	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^        $property = $class->getProperty('process');$/;"	v
protect	vendor/pinguo/php-aop/src/MI.php	/^            $protect     = $reflection->getProperties(\\ReflectionProperty::IS_PROTECTED);$/;"	v
protocol	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $this->protocol = $parts[0] ?: 'gridfs';$/;"	v
protocol	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private $protocol;$/;"	v
provideBatchRecords	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function provideBatchRecords()$/;"	f
provideConnectorMethodsOptionsSets	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public static function provideConnectorMethodsOptionsSets()$/;"	f
provideDocumentAndTypeMap	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function provideDocumentAndTypeMap()$/;"	f
provideDocumentWithExistingId	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function provideDocumentWithExistingId()$/;"	f
provideDumperOptionsValues	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public static function provideDumperOptionsValues()$/;"	f
provideExpectedNameAndKey	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function provideExpectedNameAndKey()$/;"	f
provideFileIdAndExpectedBytes	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function provideFileIdAndExpectedBytes()$/;"	f
provideIndexSpecificationDocumentsAndGeneratedNames	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function provideIndexSpecificationDocumentsAndGeneratedNames()$/;"	f
provideInputDataAndExpectedChunks	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function provideInputDataAndExpectedChunks()$/;"	f
provideInputDataAndExpectedMD5	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function provideInputDataAndExpectedMD5()$/;"	f
provideInvalidBooleanValues	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function provideInvalidBooleanValues()$/;"	f
provideInvalidConstructorCursorTypeOptions	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^    public function provideInvalidConstructorCursorTypeOptions()$/;"	f
provideInvalidConstructorDriverOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function provideInvalidConstructorDriverOptions()$/;"	f
provideInvalidConstructorFileDocuments	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function provideInvalidConstructorFileDocuments()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/CreateCollectionTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DatabaseCommandTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DistinctTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DropCollectionTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DropDatabaseTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/DropIndexesTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/FindAndModifyTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/FindOneAndDeleteTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/InsertOneTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/ListDatabasesTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/ListIndexesTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorOptions	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^    public function provideInvalidConstructorOptions()$/;"	f
provideInvalidConstructorReturnDocumentOptions	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function provideInvalidConstructorReturnDocumentOptions()$/;"	f
provideInvalidConstructorReturnDocumentOptions	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function provideInvalidConstructorReturnDocumentOptions()$/;"	f
provideInvalidDatabaseAndCollectionNames	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function provideInvalidDatabaseAndCollectionNames()$/;"	f
provideInvalidDatabaseNames	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function provideInvalidDatabaseNames()$/;"	f
provideInvalidDocumentValues	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function provideInvalidDocumentValues()$/;"	f
provideInvalidDocumentValues	vendor/mongodb/mongodb/tests/TestCase.php	/^    public function provideInvalidDocumentValues()$/;"	f
provideInvalidFieldOrderValues	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function provideInvalidFieldOrderValues()$/;"	f
provideInvalidGridFSStreamValues	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function provideInvalidGridFSStreamValues()$/;"	f
provideInvalidIndexSpecificationTypes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function provideInvalidIndexSpecificationTypes()$/;"	f
provideInvalidLimitValues	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^    public function provideInvalidLimitValues()$/;"	f
provideInvalidStreamValues	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function provideInvalidStreamValues()$/;"	f
provideIsFirstKeyOperatorDocuments	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function provideIsFirstKeyOperatorDocuments()$/;"	f
provideLevelColors	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function provideLevelColors()$/;"	f
provideLevelColors	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function provideLevelColors()$/;"	f
provideLevelsAndMessages	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function provideLevelsAndMessages()$/;"	f
provideNonexistentFilenameAndRevision	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function provideNonexistentFilenameAndRevision()$/;"	f
provideOpsWithMissingArguments	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function provideOpsWithMissingArguments()$/;"	f
provideProjectClassNames	vendor/mongodb/mongodb/tests/PedantryTest.php	/^    public function provideProjectClassNames()$/;"	f
provideReadConcernsAndDocuments	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function provideReadConcernsAndDocuments()$/;"	f
provideReplacementDocuments	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function provideReplacementDocuments()$/;"	f
provideReplacementDocuments	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function provideReplacementDocuments()$/;"	f
provideReplacementDocuments	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function provideReplacementDocuments()$/;"	f
provideSpecificationTests	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    public function provideSpecificationTests()$/;"	f
provideSpecificationTests	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    public function provideSpecificationTests()$/;"	f
provideTypeMapOptionsAndExpectedDocument	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    public function provideTypeMapOptionsAndExpectedDocument()$/;"	f
provideTypeMapOptionsAndExpectedDocument	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^    public function provideTypeMapOptionsAndExpectedDocument()$/;"	f
provideTypeMapOptionsAndExpectedDocument	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^    public function provideTypeMapOptionsAndExpectedDocument()$/;"	f
provideTypeMapOptionsAndExpectedDocuments	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^    public function provideTypeMapOptionsAndExpectedDocuments()$/;"	f
provideUpdateDocuments	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function provideUpdateDocuments()$/;"	f
provideUpdateDocuments	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function provideUpdateDocuments()$/;"	f
provideUpdateDocuments	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function provideUpdateDocuments()$/;"	f
provideWriteConcernsAndDocuments	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function provideWriteConcernsAndDocuments()$/;"	f
providerTestConnectionErrors	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function providerTestConnectionErrors()$/;"	f
provides	vendor/mongodb/mongodb/src/Collection.php	/^     * This class provides methods for collection-specific operations, such as$/;"	c
provides	vendor/mongodb/mongodb/src/Database.php	/^     * This class provides methods for database-specific operations and serves$/;"	c
providesDetectAndCleanUtf8	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function providesDetectAndCleanUtf8()$/;"	f
providesHandleJsonErrorFailure	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function providesHandleJsonErrorFailure()$/;"	f
providing	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^ * Base Handler class providing basic level\/bubble support$/;"	c
providing	vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^ * Base Handler class providing the Handler structure$/;"	c
providing	vendor/monolog/monolog/src/Monolog/Handler/Handler.php	/^ * Base Handler class providing basic close() support as well as handleBatch$/;"	c
proxy	vendor/pinguo/php-msf/src/Base/Core.php	/^                $proxy = null;$/;"	v
proxy	vendor/pinguo/php-msf/src/Base/Core.php	/^            $proxy = MysqlProxyFactory::makeProxy($proxyName, $config);$/;"	v
proxy	vendor/pinguo/php-msf/src/Base/Core.php	/^            $proxy = RedisProxyFactory::makeProxy($proxyName, $config);$/;"	v
proxy	vendor/pinguo/php-msf/src/Base/Core.php	/^        $proxy = getInstance()->getMysqlProxy($proxyName);$/;"	v
proxy	vendor/pinguo/php-msf/src/Base/Core.php	/^        $proxy = getInstance()->getRedisProxy($proxyName);$/;"	v
proxyName	vendor/pinguo/php-msf/src/Process/Config.php	/^        foreach ($redisProxyConfig as $proxyName => $proxyConfig) {$/;"	v
psrLogger	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^        $psrLogger = $this->createMock('Psr\\Log\\NullLogger');$/;"	v
public	vendor/pinguo/php-aop/src/MI.php	/^            $public      = $reflection->getProperties(\\ReflectionProperty::IS_PUBLIC);$/;"	v
publisher	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^        $this->publisher = $publisher;$/;"	v
publisher	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^        $this->publisher = null;$/;"	v
publisher	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected $publisher;$/;"	v
push	vendor/pinguo/php-msf/src/Base/Pool.php	/^    public function push($classInstance)$/;"	f
push	vendor/pinguo/plates/src/Template/Template.php	/^    public function push($name)$/;"	f
pushHandler	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function pushHandler(HandlerInterface $handler): self$/;"	f
pushLog	vendor/pinguo/php-log/src/PGLog.php	/^    public function pushLog($key, $val = '', $length = null)$/;"	f
pushLogId	vendor/pinguo/php-log/src/PGLog.php	/^    protected function pushLogId()$/;"	f
pushProcessor	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function pushProcessor(callable $callback): HandlerInterface$/;"	f
pushProcessor	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerInterface.php	/^    public function pushProcessor(callable $callback): HandlerInterface;$/;"	f
pushProcessor	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php	/^    public function pushProcessor(callable $callback): HandlerInterface$/;"	f
pushProcessor	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function pushProcessor(callable $callback): self$/;"	f
pushToPool	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function pushToPool($client)$/;"	f
pushToPool	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function pushToPool($client);$/;"	f
put	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function put($filename, array $extra = [], array $options = [])$/;"	f
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $query = TypeConverter::fromLegacy($query);$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function distinct($key, array $query = [])$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function find(array $query = [], array $fields = [])$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->query = $query;$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $query;$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function __construct(MongoClient $connection, $ns, array $query = array(), array $fields = array())$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^            $query = ['filename' => (string) $query];$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function find(array $query = [], array $fields = [])$/;"	v
query	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    public function __construct(MongoGridFS $gridfs, MongoClient $connection, $ns, array $query = array(), array $fields = array())$/;"	v
query	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $query = ['foo' => 'bar'];$/;"	v
query	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goGet($url = '', $query = null, $timeout = 30000, $headers = [])$/;"	v
query	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goSingleGet($url = '', $query = null, $timeout = 30000, $headers = [])$/;"	v
query	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function query($callback, $bindId = null, $sql = null, Context $context = null)$/;"	f
query	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $query = [],$/;"	v
query	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function query($/;"	f
queryOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $queryOptions = explode('&', parse_url($server, PHP_URL_QUERY));$/;"	v
queueUrl	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^        $this->queueUrl = $queueUrl;$/;"	v
queueUrl	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^    private $queueUrl;$/;"	v
quote	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    private static function quote($arg)$/;"	f
quote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $quote = null$/;"	v
quote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function quote($value)$/;"	f
rand	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                    $rand     = array_rand($this->slaves);$/;"	v
rand	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                $rand          = array_rand($this->slaves);$/;"	v
rand	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $rand          = array_rand($this->slaves);$/;"	v
random	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private function random(string $method, array $arguments)$/;"	f
ravenClient	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->ravenClient = $ravenClient;$/;"	v
ravenClient	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected $ravenClient;$/;"	v
ravenClient	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $ravenClient = $this->getRavenClient();$/;"	v
rawParams	vendor/pinguo/php-msf/src/Console/Request.php	/^        $rawParams = $this->getServer();$/;"	v
read	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^            $buffer .= $read = fread($stream, 4096);$/;"	v
read	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $read = $this->process->read();$/;"	v
readBytes	vendor/mongodb/mongodb/src/GridFS/ReadableStream.php	/^    public function readBytes($length)$/;"	f
readConcern	vendor/mongodb/mongodb/src/Collection.php	/^        $this->readConcern = isset($options['readConcern']) ? $options['readConcern'] : $this->manager->getReadConcern();$/;"	v
readConcern	vendor/mongodb/mongodb/src/Collection.php	/^    private $readConcern;$/;"	v
readConcern	vendor/mongodb/mongodb/src/Database.php	/^        $this->readConcern = isset($options['readConcern']) ? $options['readConcern'] : $this->manager->getReadConcern();$/;"	v
readConcern	vendor/mongodb/mongodb/src/Database.php	/^    private $readConcern;$/;"	v
readConcern	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->readConcern = isset($options['readConcern']) ? $options['readConcern'] : $this->manager->getReadConcern();$/;"	v
readConcern	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $readConcern;$/;"	v
readConcernNotSupported	vendor/mongodb/mongodb/src/Exception/UnsupportedException.php	/^    public static function readConcernNotSupported()$/;"	f
readOperation	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private static $readOperation = [$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^            $this->readPreference = new \\MongoDB\\Driver\\ReadPreference(\\MongoDB\\Driver\\ReadPreference::RP_PRIMARY);$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $readPreference = $readPreferenceArray['type'];$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $readPreference = ['type' => $type];$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $readPreference = new \\MongoDB\\Driver\\ReadPreference($/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $this->readPreference = $readPreference;$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $this->readPreference = new \\MongoDB\\Driver\\ReadPreference($mode, $tags);$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected $readPreference;$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $readPreference = isset($urlOptions['readPreference']) ? $urlOptions['readPreference'] : null;$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $readPreference = $collection->getCollection()->__debugInfo()['readPreference'];$/;"	v
readPreference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $readPreference = $database->getDb()->__debugInfo()['readPreference'];$/;"	v
readPreference	vendor/mongodb/mongodb/src/Collection.php	/^        $this->readPreference = isset($options['readPreference']) ? $options['readPreference'] : $this->manager->getReadPreference();$/;"	v
readPreference	vendor/mongodb/mongodb/src/Collection.php	/^    private $readPreference;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Database.php	/^        $this->readPreference = isset($options['readPreference']) ? $options['readPreference'] : $this->manager->getReadPreference();$/;"	v
readPreference	vendor/mongodb/mongodb/src/Database.php	/^    private $readPreference;$/;"	v
readPreference	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->readPreference = isset($options['readPreference']) ? $options['readPreference'] : $this->manager->getReadPreference();$/;"	v
readPreference	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $readPreference;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $readPreference = isset($this->options['readPreference']) ? $this->options['readPreference'] : null;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $readPreference = isset($this->options['readPreference']) ? $this->options['readPreference'] : null;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Operation/DatabaseCommand.php	/^        $readPreference = isset($this->options['readPreference']) ? $this->options['readPreference'] : null;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $readPreference = isset($this->options['readPreference']) ? $this->options['readPreference'] : null;$/;"	v
readPreference	vendor/mongodb/mongodb/src/Operation/Find.php	/^        $readPreference = isset($this->options['readPreference']) ? $this->options['readPreference'] : null;$/;"	v
readPreference	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    protected function getServerVersion(ReadPreference $readPreference = null)$/;"	v
readProcessErrors	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    protected function readProcessErrors()$/;"	f
read_concern_as_document	vendor/mongodb/mongodb/src/functions.php	/^function read_concern_as_document(ReadConcern $readConcern)$/;"	f
realUnserialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    private function realUnserialize($data)$/;"	f
realUnserialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    private function realUnserialize($data)$/;"	f
realUsage	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^        $this->realUsage = $realUsage;$/;"	v
realUsage	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected $realUsage;$/;"	v
realUsage	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    public function __construct(bool $realUsage = true, bool $useFormatting = true)$/;"	v
receivedMessage	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^                $receivedMessage = $value;$/;"	v
receivedMessage	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $receivedMessage = null;$/;"	v
reconnect	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function reconnect($client = null)$/;"	f
reconnect	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function reconnect($client = null)$/;"	f
record	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $record = $extra + [$/;"	v
record	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $record = $extra;$/;"	v
record	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $record = $newCollection->findOne();$/;"	v
record	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^        $record = $newCollection->findOne();$/;"	v
record	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $record = $newCollection->findOne();$/;"	v
record	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $record = parent::format($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $record = parent::format($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php	/^            $record = '[...]';$/;"	v
record	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^        $record = $this->normalize($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^            $record = [$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^            $record = end($this->buffer) ?: null;$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^            $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/ProcessableHandlerTrait.php	/^            $record = $processor($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $record = array_reduce($records, function ($highest, $record) {$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php	/^                $record = $this->processRecord($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $record = $this->excludeFields($record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^            $record = $record['message'];$/;"	v
record	vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Logger.php	/^            $record = call_user_func($processor, $record);$/;"	v
record	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $record = $this->getRecord(Logger::ERROR);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^        $record = $this->getRecord(Logger::WARNING);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^        $record = array($/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/LogmaticFormatterTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $record = ['context' => ['exception' => $e]];$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $record = new \\stdClass;$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', ['data' => new \\stdClass, 'foo' => 34]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', ['data' => new \\stdClass, 'foo' => 34]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record = $this->getRecord(Logger::CRITICAL);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', ['data' => new \\stdClass, 'foo' => 34]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^        $record = [$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG, "A test debug message");$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, "A test warning message");$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR, 'log message');$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^        $record = $this->getRecord(Logger::ERROR, 'log message', ['a' => 'b']);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^            $record = $this->getRecord(Logger::ERROR, $e->getMessage(), ['exception' => $e]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::DEBUG, 'A test debug message');$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test');$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', ['checksum' => $checksum, 'release' => $release, 'event_id' => $eventId]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', ['fingerprint' => $fingerprint]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', ['release' => $localRelease]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::INFO, 'test', ['tags' => $tags]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'A test warning message');$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $record = $this->getRecord(Logger::WARNING, 'test', ['data' => new \\stdClass, 'foo' => 34]);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = $this->getRecord($/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord($channel);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, $username);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, false);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, false, null, false, false, array(), $formatter);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, false, true);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, true);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $record = new SlackRecord(null, null, true, null, true, true);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $record = $this->getRecord($level, 'test'.$method);$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $record = $this->getRecord();$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $record = $processor($this->getRecord());$/;"	v
record	vendor/pinguo/php-log/src/PGLog.php	/^            $record = $processor($record);$/;"	v
record	vendor/pinguo/php-log/src/PGLog.php	/^        $record = [$/;"	v
record2	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record2 = $this->getRecord(Logger::CRITICAL);$/;"	v
record3	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $record3 = $this->getRecord(Logger::CRITICAL);$/;"	v
recordWithContext	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $recordWithContext = $this->getRecord(Logger::INFO, 'test', ['user' => $user]);$/;"	v
recordWithNoContext	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $recordWithNoContext = $this->getRecord(Logger::INFO, 'test with default user context');$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static $records = [];$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^            $records = $processed;$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $records = array_filter($records, function ($record) use ($level) {$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $records = array_filter($records, function ($record) use ($level) {$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        $this->records = [];$/;"	v
records	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected $records = [];$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $records = $expected = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^            $records = $test->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $records = $this->getMultipleRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^        $records = [$record];$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $records = $this->getMultipleRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $records = array($/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^        $records = [$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^        $records = $handler->getRecords();$/;"	v
records	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $records = $test->getRecords();$/;"	v
recordsByLevel	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^        $this->recordsByLevel = [];$/;"	v
recordsByLevel	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected $recordsByLevel = [];$/;"	v
redis	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^ *   $redis = new RedisHandler(new Predis\\Client("tcp:\/\/localhost:6379"), "logs", "prod");$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createMock('Predis\\Client');$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createMock('Redis');$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createPartialMock('Predis\\Client', ['rpush']);$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createPartialMock('Predis\\Client', ['transaction']);$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createPartialMock('Redis', ['multi', 'rpush', 'ltrim', 'exec']);$/;"	v
redis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redis = $this->createPartialMock('Redis', ['rpush']);$/;"	v
redis	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^        $redis = new Wrapper($redisProxy);$/;"	v
redis	vendor/pinguo/php-msf/src/Process/Config.php	/^                        $redis = new \\Redis();$/;"	v
redisAsynPool	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->redisAsynPool  = $redisAsynPool;$/;"	v
redisAsynPool	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $redisAsynPool;$/;"	v
redisAsynPool	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $this->redisAsynPool  = $redisAsynPool;$/;"	v
redisAsynPool	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    private $redisAsynPool;$/;"	v
redisClient	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->redisClient = $redis;$/;"	v
redisClient	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    private $redisClient;$/;"	v
redisClient	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^        $this->redisClient = new \\Redis();$/;"	v
redisClient	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $redisClient;$/;"	v
redisConfig	vendor/pinguo/php-msf/src/Process/Config.php	/^        $redisConfig      = $this->config->get('redis', null);$/;"	v
redisCoroutines	vendor/pinguo/php-msf/src/Proxy/RedisProxyFactory.php	/^    public static $redisCoroutines = [];$/;"	v
redisKey	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^            $redisKey = $this->redisKey;$/;"	v
redisKey	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^        $this->redisKey = $key;$/;"	v
redisKey	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    private $redisKey;$/;"	v
redisMaxCount	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    protected $redisMaxCount = 0;$/;"	v
redisPoolCoroutine	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $redisPoolCoroutine = RedisProxyFactory::$redisCoroutines[$redisPoolName];$/;"	v
redisPoolCoroutine	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $redisPoolCoroutine = RedisProxyFactory::$redisCoroutines[$redisPoolName];$/;"	v
redisPoolCoroutine	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^        $redisPoolCoroutine = RedisProxyFactory::$redisCoroutines[$redisPoolName];$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $redisPoolName = $this->lookup($key);$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $redisPoolName = $this->lookup($this->generateUniqueKey($k));$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            foreach ($opData as $redisPoolName => $op) {$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $redisPoolName = $this->lookup($this->generateUniqueKey($key));$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $redisPoolName = array_rand($this->goodPools);$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        foreach ($opArr as $redisPoolName => $op) {$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                $redisPoolName = $this->slaves[$rand];$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $redisPoolName = $this->master;$/;"	v
redisPoolName	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^            $redisPoolName = $this->slaves[$rand];$/;"	v
redisPools	vendor/pinguo/php-msf/src/Base/Core.php	/^        $this->redisPools = $redisPools;$/;"	v
redisPools	vendor/pinguo/php-msf/src/Base/Core.php	/^    protected $redisPools;$/;"	v
redisProxies	vendor/pinguo/php-msf/src/Base/Core.php	/^        $this->redisProxies = $redisProxies;$/;"	v
redisProxies	vendor/pinguo/php-msf/src/Base/Core.php	/^    protected $redisProxies;$/;"	v
redisProxyConfig	vendor/pinguo/php-msf/src/Process/Config.php	/^        $redisProxyConfig = $this->config->get('redis_proxy', null);$/;"	v
redisProxyManager	vendor/pinguo/php-msf/src/MSFServer.php	/^    protected $redisProxyManager = [];$/;"	v
redisRetryTimes	vendor/pinguo/php-msf/src/Process/Config.php	/^    protected $redisRetryTimes = [];$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->redisSerialize = $redisAsynPool->redisSerialize;$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public $redisSerialize = false;$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^        $this->redisSerialize = $redisAsynPool->redisSerialize;$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public $redisSerialize = false;$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $this->redisSerialize = $config['redisSerialize'];$/;"	v
redisSerialize	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public $redisSerialize = false;$/;"	v
redisTransaction	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^        $redisTransaction = $this->createPartialMock('Predis\\Client', ['rpush', 'ltrim']);$/;"	v
reduce	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $reduce = new MongoCode($reduce);$/;"	v
reduce	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $reduce = "function (obj, prev) { prev.count++; }";$/;"	v
reduce	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $reduce = 'function(key, values) {$/;"	v
ref	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^        $ref = [$/;"	v
ref	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $ref = $this->getDatabase()->createDBRef('test', $document_or_id);$/;"	v
ref	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $ref = [$/;"	v
ref	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $ref = \\MongoDBRef::create('foo', $id);$/;"	v
ref	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $ref = \\MongoDBRef::create('foo', $id, 'database');$/;"	v
ref	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $ref = new \\ReflectionClass(get_class($instance));$/;"	v
refKey	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDBRef.php	/^    protected static $refKey = '$ref';$/;"	v
reference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $reference = $collection->createDBRef(['_id' => 'foo']);$/;"	v
referencedDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $referencedDocument = $this->getClient()->selectDB('foo')->getDBRef($ref);$/;"	v
referencedId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $referencedId = new \\MongoId();$/;"	v
reflDepth	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $reflDepth = new\\ReflectionProperty($formatter, 'maxNestingLevel');$/;"	v
reflMethod	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $reflMethod = new \\ReflectionMethod($formatter, 'handleJsonError');$/;"	v
reflMethod	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $reflMethod = new \\ReflectionMethod($formatter, 'toJson');$/;"	v
reflMethod	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^        $reflMethod = new \\ReflectionMethod('Monolog\\Handler\\BrowserConsoleHandler', 'generateScript');$/;"	v
reflTrace	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $reflTrace = new \\ReflectionProperty($formatter, 'exceptionTraceAsString');$/;"	v
reflection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $reflection = new \\ReflectionClass('MongoClient');$/;"	v
reflection	vendor/pinguo/php-aop/src/MI.php	/^            $reflection  = new \\ReflectionClass($className);$/;"	v
reflectionObject	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $reflectionObject = new \\ReflectionObject($document);$/;"	v
reflectionProperty	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $reflectionProperty = new \\ReflectionProperty($cursor, 'collection');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflectionProperty	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $reflectionProperty = new \\ReflectionProperty('Monolog\\Handler\\SocketHandler', 'connectionString');$/;"	v
reflections	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    protected static $reflections = [];$/;"	v
reflections	vendor/pinguo/php-msf/src/Base/Child.php	/^    protected static $reflections = [];$/;"	v
reflector	vendor/pinguo/php-msf/src/Base/Pool.php	/^            $reflector         = new \\ReflectionClass($poolName);$/;"	v
regex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^            $this->regex = $regex->getPattern();$/;"	v
regex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^        $this->regex = $matches[1];$/;"	v
regex	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^    public $regex;$/;"	v
regex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^        $regex = new \\MongoRegex($bsonRegex);$/;"	v
regex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^        $regex = new \\MongoRegex('\/abc\/i');$/;"	v
register	vendor/composer/ClassLoader.php	/^    public function register($prepend = false)$/;"	f
register	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public static function register($protocol = 'gridfs')$/;"	f
register	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public static function register(LoggerInterface $logger, $errorLevelMap = [], $exceptionLevelMap = [], $fatalLevel = null): self$/;"	f
register	vendor/pinguo/plates/src/Extension/Asset.php	/^    public function register(Engine $engine)$/;"	f
register	vendor/pinguo/plates/src/Extension/ExtensionInterface.php	/^    public function register(Engine $engine);$/;"	f
register	vendor/pinguo/plates/src/Extension/URI.php	/^    public function register(Engine $engine)$/;"	f
registerAsyn	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function registerAsyn(IAsynPool $asyn)$/;"	f
registerDir	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    protected $registerDir = [];$/;"	v
registerErrorHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerErrorHandler(array $levelMap = [], $callPrevious = true, $errorTypes = -1, $handleOnlyReportedErrors = true): self$/;"	f
registerExceptionHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerExceptionHandler($levelMap = [], $callPrevious = true): self$/;"	f
registerFatalHandler	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerFatalHandler($level = null, $reservedMemorySize = 20): self$/;"	f
registerFunction	vendor/pinguo/plates/src/Engine.php	/^    public function registerFunction($name, $callback)$/;"	f
registerOnAfter	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function registerOnAfter(callable $callback)$/;"	f
registerOnBefore	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function registerOnBefore(callable $callback)$/;"	f
registerOnBoth	vendor/pinguo/php-aop/src/Wrapper.php	/^    public function registerOnBoth(callable $callback)$/;"	f
registerShutdownFunction	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function registerShutdownFunction()$/;"	f
registerStreamWrapper	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private function registerStreamWrapper()$/;"	f
registerTimer	vendor/pinguo/php-msf/src/Server.php	/^    public function registerTimer($ms, callable $callBack, $params = [])$/;"	f
release	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^        $this->release = $value;$/;"	v
release	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    private $release;$/;"	v
release	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $release = '05a671c66aefea124cc08b76ea6d30bb';$/;"	v
release	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $release = 'v42.42.42';$/;"	v
reloadProcess	vendor/pinguo/php-msf/src/MSFServer.php	/^                $reloadProcess = new \\swoole_process(function ($process) {$/;"	v
remoteHttpCall	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public function remoteHttpCall($method, array $args)$/;"	f
remove	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function remove(array $criteria = [], array $options = [])$/;"	f
remove	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function remove(array $criteria = [], array $options = [])$/;"	f
remove	vendor/pinguo/plates/src/Template/Folders.php	/^    public function remove($name)$/;"	f
remove	vendor/pinguo/plates/src/Template/Functions.php	/^    public function remove($name)$/;"	f
removeFolder	vendor/pinguo/plates/src/Engine.php	/^    public function removeFolder($name)$/;"	f
removeLogger	vendor/monolog/monolog/src/Monolog/Registry.php	/^    public static function removeLogger($logger)$/;"	f
removeTarget	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function removeTarget($target)$/;"	f
removedLoggerProvider	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function removedLoggerProvider()$/;"	f
rename	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function rename($id, $newFilename)$/;"	f
render	vendor/pinguo/plates/src/Engine.php	/^    public function render($name, array $data = array())$/;"	f
render	vendor/pinguo/plates/src/Template/Template.php	/^    public function render(array $data = array())$/;"	f
repair	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function repair($preserve_cloned_files = false, $backup_original_files = false)$/;"	f
replace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->replace = $table;$/;"	v
replace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->replace = array();$/;"	v
replace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $replace;$/;"	v
replace	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function replace($table)$/;"	f
replaceInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function replaceInto($table)$/;"	f
replaceNewlines	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    protected function replaceNewlines(string $str): string$/;"	f
replaceOne	vendor/mongodb/mongodb/src/Collection.php	/^    public function replaceOne($filter, $replacement, array $options = [])$/;"	f
replacements	vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php	/^        $replacements = [];$/;"	v
replicas	vendor/flexihash/flexihash/src/Flexihash.php	/^            $this->replicas = $replicas;$/;"	v
replicas	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $replicas = 64;$/;"	v
reportedExceptionArguments	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^                $this->reportedExceptionArguments = compact('exception', 'context', 'payload');$/;"	v
reportedExceptionArguments	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private $reportedExceptionArguments = null;$/;"	v
reqParams	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $reqParams = [$/;"	v
reqParams	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $reqParams = [$/;"	v
reqParams	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->reqParams = (array)$unPackArgs['args'];$/;"	v
reqParams	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $reqParams = null;$/;"	v
request	app/Controllers/CoroutineTest.php	/^            $request = [$/;"	v
request	vendor/pinguo/php-msf/src/Base/Input.php	/^        $this->request = $request;$/;"	v
request	vendor/pinguo/php-msf/src/Base/Input.php	/^        $this->request = $this->__serializeRequest;$/;"	v
request	vendor/pinguo/php-msf/src/Base/Input.php	/^    public $request;$/;"	v
request	vendor/pinguo/php-msf/src/Base/Output.php	/^        $this->request  = $request;$/;"	v
request	vendor/pinguo/php-msf/src/Base/Output.php	/^    public $request;$/;"	v
request	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $request;$/;"	v
request	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->request       = $this->mysqlAsynPool->getAsynName() . '(' . str_replace("\\n", " ", $_sql) . ')';$/;"	v
request	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->request        = mt_rand(1, 9) . mt_rand(1, 9) . mt_rand(1, 9) .  '#' . $this->redisAsynPool->getAsynName()  . '.' . $name;$/;"	v
request	vendor/pinguo/php-msf/src/MSFCli.php	/^        $request = new Request();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->requestId = null;$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $requestId = null;$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $this->requestId     = $this->getContext()->getLogId();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^        $this->requestId = $this->getContext()->getLogId();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^        $this->requestId  = $this->getContext()->getLogId();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->requestId     = $this->getContext()->getLogId();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^        $this->requestId      = $this->getContext()->getLogId();$/;"	v
requestId	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^        $this->requestId   = $this->getContext()->getLogId();$/;"	v
requestStartTime	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^        $this->requestStartTime = microtime(true);$/;"	v
requestStartTime	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public $requestStartTime = 0.0;$/;"	v
requestTime	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->requestTime = microtime(true);$/;"	v
requestTime	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $requestTime = 0.0;$/;"	v
requestType	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^        $this->requestType = $requestType;$/;"	v
requestType	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public $requestType;$/;"	v
requests	app/Controllers/Http.php	/^        $requests = [$/;"	v
requests	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $requests = [];$/;"	v
res	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $res = $this->getResource();$/;"	v
res	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $res = $errHandler->registerFatalHandler($level, $reservedMemorySize);$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $formatter->format(array($/;"	v
res	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, [$foo, $bar], true);$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, [$resource], true);$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $res = $reflMethod->invoke($formatter, ['message' => "\\xA4\\xA6\\xA8\\xB4\\xB8\\xBC\\xBD\\xBE"]);$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    private $res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $res = $this->res;$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^        $this->res = fopen('php:\/\/memory', 'a');$/;"	v
res	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private $res;$/;"	v
res	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $res     = $redisPoolCoroutine->evalMock($arguments[0], $arguments[1], array_merge($arrKeys, $evalMockArgs), count($arrKeys));$/;"	v
resHandler	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $resHandler = $errHandler->registerErrorHandler([E_USER_NOTICE => Logger::EMERGENCY], false);$/;"	v
resHandler	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^        $resHandler = $errHandler->registerExceptionHandler($map = ['Monolog\\CustomTestException' => LogLevel::DEBUG, 'TypeError' => LogLevel::NOTICE, 'Throwable' => LogLevel::WARNING], false);$/;"	v
reservedMemory	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->reservedMemory = '';$/;"	v
reservedMemory	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->reservedMemory = str_repeat(' ', 1024 * $reservedMemorySize);$/;"	v
reservedMemory	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $reservedMemory;$/;"	v
reservedMemorySize	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    public function registerFatalHandler($level = null, $reservedMemorySize = 20): self$/;"	v
reset	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function reset()$/;"	f
reset	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function reset()$/;"	f
reset	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public static function reset()$/;"	f
reset	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    public function reset()$/;"	f
reset	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public static function reset()$/;"	f
reset	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public static function reset()$/;"	f
reset	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function reset()$/;"	f
reset	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $reset        = getInstance()->taskAtomic->cmpset(65536, 1);$/;"	v
resetCallBack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function resetCallBack(callable $callBack = null)$/;"	f
resetError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function resetError()$/;"	f
resetError	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function resetError()$/;"	f
resetProperties	vendor/pinguo/php-aop/src/MI.php	/^    public function resetProperties()$/;"	f
resetRoutine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function resetRoutine(\\Generator $routine = null)$/;"	f
resolve	vendor/pinguo/php-msf/src/Console/Request.php	/^    public function resolve()$/;"	f
resource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $resource = $this->fsockopen();$/;"	v
resource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $resource = $this->pfsockopen();$/;"	v
resource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $this->resource = null;$/;"	v
resource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->resource = $resource;$/;"	v
resource	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $resource;$/;"	v
resource	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $resource = fopen('php:\/\/memory', 'rw+');$/;"	v
resource	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $resource = fopen(__FILE__, 'r');$/;"	v
resource	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $this->resource = $resource;$/;"	v
resource	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public $resource;$/;"	v
resourceOptions	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public $resourceOptions = ['GET', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'];$/;"	v
resourcePosition	vendor/flexihash/flexihash/src/Flexihash.php	/^        $resourcePosition = $this->hasher->hash($resource);$/;"	v
resp	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^        $resp = $client->request("\/{$index}\/{$type}\/{$documentId}", Request::GET);$/;"	v
response	app/Controllers/CoroutineTest.php	/^            $response   = $results[0]['body'] . $results[1]['body'];$/;"	v
response	app/Controllers/CoroutineTest.php	/^        $response = yield $this->getRedisPool('p1')->get('apiCacheForABCoroutine');$/;"	v
response	vendor/pinguo/php-msf/src/Base/Output.php	/^                $response = $template->render($data);$/;"	v
response	vendor/pinguo/php-msf/src/Base/Output.php	/^            $response = $template->render($data);$/;"	v
response	vendor/pinguo/php-msf/src/Base/Output.php	/^        $this->response = $response;$/;"	v
response	vendor/pinguo/php-msf/src/Base/Output.php	/^    public $response;$/;"	v
response	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $response = yield $client->goGet($urlPath, $sendData, $this->timeout);$/;"	v
response	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $response = yield $client->goPost($urlPath, $sendData, $this->timeout);$/;"	v
response	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $response     = yield $this->remoteHttpCall($method, $args);$/;"	v
response	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^        $response = yield $handlerInstance->{$this->method}(...$this->reqParams);$/;"	v
responseTime	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $responseTime = 0.0;$/;"	v
responseTime	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^            $this->responseTime = microtime(true);$/;"	v
responseTime	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^            $this->responseTime = microtime(true);$/;"	v
responses	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $responses = yield $context->getObject(Client::class)->goConcurrent($requests);$/;"	v
restRules	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public $restRules = [];$/;"	v
result	app/Controllers/CoroutineTest.php	/^        $result = [];$/;"	v
result	app/Controllers/Http.php	/^        $result  = yield $sendGet;$/;"	v
result	app/Controllers/Http.php	/^        $result = yield $client->goSingleGet('http:\/\/www.baidu.com\/');$/;"	v
result	app/Controllers/Http.php	/^        $result = yield $client->goSinglePost('http:\/\/www.baidu.com\/', ['a' => 'b']);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $result = $this->getSlaveOkayFromReadPreference();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^                $result = [];$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $result = $this->collection->$method($/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $result = $this->collection->insertMany($/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $result = $this->collection->insertOne($/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $result = $this->collection->replaceOne($/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $result = $this->setReadPreferenceFromParameters($readPreference, $tags);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $result = $this->setWriteConcernFromParameters($wstring, $wtimeout);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^        $result = [$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $result = $this->command(['profile' => $level]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $result = $this->command(['profile' => -1]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $result = $this->setReadPreferenceFromParameters($readPreference, $tags);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^        $result = $this->setWriteConcernFromParameters($wstring, $wtimeout);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^                $result = $this->update(['_id' => $file['_id']], ['$set' => $update]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $result = $this->chunks->insert($chunk);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $result = $this->insert($record, $options);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $result = '';$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^            $result = $collection->aggregate($/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $collection->aggregate($pipeline);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $collection->group($keys, $initial, $reduce, $condition);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $collection->validate();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getCollection()->remove(['foo' => 'bar']);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getCollection()->remove(['foo' => 'bar'], ['justOne' => true]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getCollection()->update(['change' => true], ['$set' => ['foo' => 'foo']], ['multiple' => true]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getCollection()->update(['foo' => 'bar'], ['$set' => ['foo' => 'foo']]);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getCollection()->update(['foo' => 'bar'], ['foo' => 'foo']);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $result = $this->getDatabase()->command($command);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $result = $database->command([$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $result = $this->getDatabase()->forceError();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $result = $file->getBytes();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^        $result = $file->getResource();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $result = $collection->findOne('test');$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $result = $collection->findOne();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $result = $collection->findOne([], ['date']);$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^        $result = $batch->execute();$/;"	v
result	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $result = $adminDb->command($doc);$/;"	v
result	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^        $result = current($cursor->toArray());$/;"	v
result	vendor/mongodb/mongodb/src/Operation/Count.php	/^        $result = current($cursor->toArray());$/;"	v
result	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^        $result = current($cursor->toArray());$/;"	v
result	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^        $result = current($cursor->toArray());$/;"	v
result	vendor/mongodb/mongodb/src/Operation/ListDatabases.php	/^        $result = current($cursor->toArray());$/;"	v
result	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $result = $this->executeOperation($test['operation']);$/;"	v
result	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^            $result = $e;$/;"	v
result	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^            $result = $this->executeAct($test['act']);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $result = $operation->execute($this->getPrimaryServer());$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $result = $operation->execute($this->getPrimaryServer());$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^        $result = $operation->execute($this->getPrimaryServer());$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^        $result = $operation->execute($this->getPrimaryServer());$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $result = $operation->execute($this->getPrimaryServer());$/;"	v
result	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $result = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
result	vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php	/^        $result = explode(' ', trim(`hg id -nb`));$/;"	v
result	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $result = $formatter->format($record);$/;"	v
result	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $result           = [];$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->result      = CNull::getInstance();$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $result;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^            $this->result = $data;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^            $this->result       = $client;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^            $this->result       = (array)$client;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^            $this->result = $result;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $result = parent::getResult();$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                        $result = $decodeVal;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $result = $this->unSerializeHandler($result);$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                    $result = $this->unSerializeHandler($result, $keys, $len);$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^            $this->result = $result;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^            $this->result = true;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                            $result = $this->routine->getReturn();$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                            $result = false;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                        $result = $this->routine->getReturn();$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                        $result = false;$/;"	v
result	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                    $result = $value->getResult();$/;"	v
result	vendor/pinguo/php-msf/src/MSFServer.php	/^                        $result = $task->$taskFucName(...$taskData);$/;"	v
result	vendor/pinguo/php-msf/src/MSFServer.php	/^        $result  = false;$/;"	v
result	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $result = yield $op;$/;"	v
result	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $result = $redisPoolCoroutine->$method(...$arguments);$/;"	v
result	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $result = $redisPoolCoroutine->__call($method, $arguments);$/;"	v
result	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $result = $this->mongoDb->command($command, ['socketTimeoutMS' => $timeout]);$/;"	v
result1	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^        $result1 = $hasher->hash('test');$/;"	v
result2	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^        $result2 = $hasher->hash('test');$/;"	v
result3	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^        $result3 = $hasher->hash('different');$/;"	v
resultArray	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $resultArray = [$/;"	v
resultDocument	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $resultDocument = ['writeErrors' => $this->convertWriteErrors($writeResult)];$/;"	v
resultDocument	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $resultDocument = [];$/;"	v
results	app/Controllers/CoroutineTest.php	/^            $results = yield $client->goConcurrent($request);$/;"	v
results	app/Controllers/Http.php	/^        $results = yield $client->goConcurrent($requests);$/;"	v
results	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $results = [];$/;"	v
results	vendor/flexihash/flexihash/src/Flexihash.php	/^        $results = [];$/;"	v
results	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $results = [];$/;"	v
results	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^        $results = iterator_to_array($operation->execute($this->getPrimaryServer()));$/;"	v
results	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $results  = [];$/;"	v
results1	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $results1 = [];$/;"	v
results1	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $results1 = [];$/;"	v
results2	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $results2 = [];$/;"	v
results2	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $results2 = [];$/;"	v
ret	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                $ret = [];$/;"	v
ret	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                $ret = [];$/;"	v
ret	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^        $ret = [];$/;"	v
ret	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $ret = $this->mongoCollection->batchInsert($docs, $options);$/;"	v
ret	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $ret = $this->mongoCollection->insert($doc, $options);$/;"	v
ret	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $ret = $this->mongoCollection->remove($criteria, $options);$/;"	v
ret	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $ret = $this->mongoCollection->update($criteria, $doc, $options);$/;"	v
ret	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $ret = $this->mongoCollection->update($criteria, ['$set' => $doc], $options);$/;"	v
retData	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                    $retData = array_merge($retData, array_combine($keys, $values));$/;"	v
retData	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^            $retData = [];$/;"	v
retriableErrorCodes	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    private static $retriableErrorCodes = [$/;"	v
retries	vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php	/^    public static function execute($ch, $retries = 5, $closeAfterDone = true)$/;"	v
retry	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->retry = $retry;$/;"	v
retry	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $retry;$/;"	v
returnOnTrue	vendor/pinguo/plates/src/Extension/URI.php	/^    protected function checkUriRegexMatch($regex, $returnOnTrue = null, $returnOnFalse = null)$/;"	v
returnOnTrue	vendor/pinguo/plates/src/Extension/URI.php	/^    protected function checkUriSegmentMatch($key, $string, $returnOnTrue = null, $returnOnFalse = null)$/;"	v
returns	vendor/hassankhan/config/src/AbstractConfig.php	/^     *     array after the move, the function returns false. If the data array$/;"	f
returns	vendor/hassankhan/config/src/AbstractConfig.php	/^     *     cursor, the function returns null$/;"	f
returns	vendor/hassankhan/config/src/AbstractConfig.php	/^     *     function returns false. If the array is undefined, the function$/;"	f
returns	vendor/hassankhan/config/src/AbstractConfig.php	/^     *     is undefined, the function returns null$/;"	f
returns	vendor/hassankhan/config/src/AbstractConfig.php	/^     *     returns false. If the data array is undefined, the function returns$/;"	f
revision	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^        $revision = (integer) $revision;$/;"	v
rewind	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function rewind()$/;"	f
rewind	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function rewind()$/;"	f
rewind	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function rewind()$/;"	f
rightJoin	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function rightJoin($table, $criteria = null, $alias = null)$/;"	f
rollback	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^    public function rollback(Context $context = null)$/;"	f
rollbarNotifier	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^        $this->rollbarNotifier = $rollbarNotifier;$/;"	v
rollbarNotifier	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected $rollbarNotifier;$/;"	v
rollbarNotifier	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^        $this->rollbarNotifier = $this->getMockBuilder('RollbarNotifier')$/;"	v
rollbarNotifier	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private $rollbarNotifier;$/;"	v
room	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $room = rawurlencode($this->room);$/;"	v
room	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->room = $room;$/;"	v
room	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $room;$/;"	v
room	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    private function createHandler($token = 'myToken', $room = 'room1', $name = 'Monolog', $notify = false, $host = 'api.hipchat.com', $version = 'v1')$/;"	v
root	vendor/hassankhan/config/src/AbstractConfig.php	/^                $root = $root[$segment];$/;"	v
root	vendor/hassankhan/config/src/AbstractConfig.php	/^            $root = &$root[$part];$/;"	v
root	vendor/hassankhan/config/src/AbstractConfig.php	/^        $root = $this->data;$/;"	v
root	vendor/hassankhan/config/src/AbstractConfig.php	/^        $root = &$this->data;$/;"	v
root	vendor/hassankhan/config/src/AbstractConfig.php	/^        $this->cache[$key] = $root = $value;$/;"	v
root	vendor/pinguo/php-msf/src/HttpServer.php	/^        $root = $this->config['http']['domain'][$this->route->getHost()]['root'] ?? null;$/;"	v
root	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                $root = getInstance()->config['http']['domain'][$this->getHost()]['root'] ?? ROOT_PATH . '\/www\/';$/;"	v
rotate	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function rotate()$/;"	f
rotationTests	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function rotationTests()$/;"	f
route	vendor/pinguo/php-msf/src/Console/Request.php	/^            $route = $rawParams[0];$/;"	v
route	vendor/pinguo/php-msf/src/Console/Request.php	/^            $route = '';$/;"	v
route	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $route = array_map(function ($name) {$/;"	v
route	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^            $route = explode('\/', ltrim($path, '\/'));$/;"	v
route	vendor/pinguo/php-msf/src/Server.php	/^        $this->route  = new $routeClassName;$/;"	v
route	vendor/pinguo/php-msf/src/Server.php	/^    protected $route;$/;"	v
routeCache	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public $routeCache;$/;"	v
routeClassName	vendor/pinguo/php-msf/src/Server.php	/^                $routeClassName = "\\\\PG\\\\MSF\\\\Route\\\\" . $routeTool;$/;"	v
routeClassName	vendor/pinguo/php-msf/src/Server.php	/^            $routeClassName = "\\\\App\\\\Route\\\\" . $routeTool;$/;"	v
routeClassName	vendor/pinguo/php-msf/src/Server.php	/^            $routeClassName = $routeTool;$/;"	v
routeParams	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^        $this->routeParams = new \\stdClass();$/;"	v
routeParams	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    protected $routeParams;$/;"	v
routeTool	vendor/pinguo/php-msf/src/Server.php	/^        $routeTool = $this->config->get('server.route_tool', 'NormalRoute');$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                        $this->routine = $this->stack->pop();$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                        $this->routine = null;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                $this->routine = $value;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->routine = $this->stack->pop();$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->routine    = $routine;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->routine = $routine;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->routine = null;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $routine;$/;"	v
routine	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function resetRoutine(\\Generator $routine = null)$/;"	v
routineList	vendor/pinguo/php-msf/src/MSFServer.php	/^        $routineList = $this->scheduler->taskMap;$/;"	v
routingKey	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $routingKey = $this->getRoutingKey($record);$/;"	v
routingKey	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^        $routingKey = sprintf('%s.%s', $record['level_name'], $record['channel']);$/;"	v
row	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^            $row = $cursor->getNext();$/;"	v
rpcTime	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->rpcTime   = $unPackArgs['time'];$/;"	v
rpcTime	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $rpcTime = null;$/;"	v
rules	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        $rules = getInstance()->config->get('rest.route.rules', []);$/;"	v
run	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function run()$/;"	f
run	vendor/pinguo/php-msf/src/Server.php	/^    public static function run()$/;"	f
runMethod	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    protected function runMethod()$/;"	f
runTaskException	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $runTaskException = $this->handleTaskException($e, $value);$/;"	v
runUri	vendor/pinguo/plates/src/Extension/URI.php	/^    public function runUri($var1 = null, $var2 = null, $var3 = null, $var4 = null)$/;"	f
save	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function save(&$a, array $options = [])$/;"	f
saveDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $saveDocument = ['_id' => new \\MongoId($id), 'foo' => 'foo'];$/;"	v
saveDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $saveDocument = ['_id' => new \\MongoId($id)];$/;"	v
schedule	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public function schedule(Task $task, callable $callback = null)$/;"	f
scheduler	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->scheduler = new Scheduler();$/;"	v
scheduler	vendor/pinguo/php-msf/src/Server.php	/^            $this->scheduler = new Scheduler();$/;"	v
scheduler	vendor/pinguo/php-msf/src/Server.php	/^    public $scheduler;$/;"	v
scheme	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->scheme = $urlInfo['scheme'];$/;"	v
scheme	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $scheme;$/;"	v
scheme	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $scheme = substr($this->host, 0, strpos($this->host, ':'));$/;"	v
scheme	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $scheme = 'http';$/;"	v
scope	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^            $scope = TypeConverter::toLegacy($javascript->getScope());$/;"	v
scope	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^        $this->scope = $scope;$/;"	v
scope	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    private $scope;$/;"	v
scope	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    public function __construct($code, array $scope = [])$/;"	v
script	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $script = array_merge($script,$/;"	v
script	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^        $script = [];$/;"	v
search	vendor/composer/ClassLoader.php	/^                $search = $subPath.'\\\\';$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $sec = floor($time);$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $sec = substr($msecString, 0, -3);$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^        $this->sec = (int) $sec;$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public $sec;$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^            $sec = time();$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^            $this->sec = (int) $parts[1];$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^        $this->sec = (int) $sec;$/;"	v
sec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public $sec;$/;"	v
second	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $second = $first->withName('second');$/;"	v
secondChunck	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $secondChunck = $chunks[1];$/;"	v
seconds	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $seconds = floor($this->timeout);$/;"	v
secretKey	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^        $this->secretKey = $secretKey;$/;"	v
secretKey	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    private $secretKey;$/;"	v
section	vendor/pinguo/plates/src/Template/Template.php	/^    public function section($name, $default = null)$/;"	f
sectionName	vendor/pinguo/plates/src/Template/Template.php	/^        $this->sectionName = $name;$/;"	v
sectionName	vendor/pinguo/plates/src/Template/Template.php	/^        $this->sectionName = null;$/;"	v
sectionName	vendor/pinguo/plates/src/Template/Template.php	/^    protected $sectionName;$/;"	v
sections	vendor/pinguo/plates/src/Template/Template.php	/^    protected $sections = array();$/;"	v
secure	vendor/pinguo/php-msf/src/Base/Output.php	/^        $secure = false,$/;"	v
segments	vendor/hassankhan/config/src/AbstractConfig.php	/^        $segments = explode('.', $key);$/;"	v
segs	vendor/hassankhan/config/src/AbstractConfig.php	/^        $segs = explode('.', $key);$/;"	v
select	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->select = array();$/;"	v
select	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $select;$/;"	v
select	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function select($column, $alias = null)$/;"	f
selectCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function selectCollection($db, $collection)$/;"	f
selectCollection	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function selectCollection($name)$/;"	f
selectCollection	vendor/mongodb/mongodb/src/Client.php	/^    public function selectCollection($databaseName, $collectionName, array $options = [])$/;"	f
selectCollection	vendor/mongodb/mongodb/src/Database.php	/^    public function selectCollection($collectionName, array $options = [])$/;"	f
selectDB	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function selectDB($name)$/;"	f
selectDatabase	vendor/mongodb/mongodb/src/Client.php	/^    public function selectDatabase($databaseName, array $options = [])$/;"	f
selectErrorStream	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    protected function selectErrorStream()$/;"	f
selectGridFSBucket	vendor/mongodb/mongodb/src/Database.php	/^    public function selectGridFSBucket(array $options = [])$/;"	f
selected	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^        $selected = $this->selectErrorStream();$/;"	v
send	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    public static function send()$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function send()$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function send($data, $endpoint)$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    abstract protected function send(string $content, array $records);$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php	/^    protected function send(string $content, array $records)$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected function send(string $content, array $records)$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected function send(string $content, array $records)$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^    protected function send(string $content, array $records)$/;"	f
send	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected function send($chunk)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    abstract public function send($callback);$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^    public function send($callback)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/Dns.php	/^    public function send($callback)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/Http.php	/^    public function send($callback)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/IBase.php	/^    function send($callback);$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public function send($callback)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    public function send($callback)$/;"	f
send	vendor/pinguo/php-msf/src/Coroutine/Sleep.php	/^    public function send($callback)$/;"	f
sendData	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $sendData = [$/;"	v
sendData	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $sendData = [$/;"	v
sendFile	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function sendFile($path, $request, $response)$/;"	f
sendGet	app/Controllers/Http.php	/^        $sendGet = $client->goGet('\/');$/;"	v
sendGetReq	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $sendGetReq  = $this->getObject(Http::class, [$this, 'GET', $this->urlData['path'], $query, $timeout]);$/;"	v
sendHeader	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeader	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    protected function sendHeader($header, $content)$/;"	f
sendHeaders	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected static $sendHeaders = true;$/;"	v
sendHeaders	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected static $sendHeaders = true;$/;"	v
sendHttpRequests	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $sendHttpRequests = [];$/;"	v
sendMessageToWorker	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function sendMessageToWorker(IAsynPool $asyn, $data)$/;"	f
sendPostReq	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^        $sendPostReq  = $this->getObject(Http::class, [$this, 'POST', $this->urlData['path'], $data, $timeout]);$/;"	v
sent	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $sent = 0;$/;"	v
serialize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function serialize()$/;"	f
serializeHandler	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    protected function serializeHandler($data, $phpSerialize = false)$/;"	f
serialized	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $serialized = serialize($id);$/;"	v
serialized	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $serialized = serialize($handler);$/;"	v
server	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $server = 'mongodb:\/\/' . self::DEFAULT_HOST . ':' . self::DEFAULT_PORT;$/;"	v
server	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $this->server = 'mongodb:\/\/'.$this->server;$/;"	v
server	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $this->server = $server;$/;"	v
server	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    protected $server;$/;"	v
server	vendor/mongodb/mongodb/src/Client.php	/^        $server = $this->manager->selectServer(new ReadPreference(ReadPreference::RP_PRIMARY));$/;"	v
server	vendor/mongodb/mongodb/src/Collection.php	/^        $server = $this->manager->selectServer($options['readPreference']);$/;"	v
server	vendor/mongodb/mongodb/src/Collection.php	/^        $server = $this->manager->selectServer(new ReadPreference(ReadPreference::RP_PRIMARY));$/;"	v
server	vendor/mongodb/mongodb/src/Database.php	/^        $server = $this->manager->selectServer($options['readPreference']);$/;"	v
server	vendor/mongodb/mongodb/src/Database.php	/^        $server = $this->manager->selectServer(new ReadPreference(ReadPreference::RP_PRIMARY));$/;"	v
server	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $server = $this->getPrimaryServer();$/;"	v
server	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $server = $this->getPrimaryServer();$/;"	v
server	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $server = $this->getPrimaryServer();$/;"	v
server	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^        $server = [$/;"	v
server	vendor/pinguo/php-msf/src/Console/Request.php	/^                $this->server = $_SERVER['argv'];$/;"	v
server	vendor/pinguo/php-msf/src/Console/Request.php	/^                $this->server = [];$/;"	v
server	vendor/pinguo/php-msf/src/Console/Request.php	/^        $this->server = $params;$/;"	v
server	vendor/pinguo/php-msf/src/Console/Request.php	/^    public $server;$/;"	v
server	vendor/pinguo/php-msf/src/HttpServer.php	/^            $this->server = new \\swoole_http_server($this->httpSocketName, $this->httpPort);$/;"	v
server	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->server       = $swooleServer->server;$/;"	v
server	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $server;$/;"	v
server	vendor/pinguo/php-msf/src/Server.php	/^    public $server;$/;"	v
serverData	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^            $this->serverData = $serverData;$/;"	v
serverData	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^            $this->serverData = &$_SERVER;$/;"	v
serverData	vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php	/^    protected $serverData;$/;"	v
serverInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^        $serverInfo = $this->getDatabase()->command(['buildinfo' => true]);$/;"	v
serverInit	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function serverInit($swooleServer, $asynManager)$/;"	f
serverInit	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function serverInit($swooleServer, $asynManager);$/;"	f
serverInit	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^    public function serverInit($swooleServer, $asynManager)$/;"	f
serverVersion	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $serverVersion = $this->getServerVersion();$/;"	v
server_supports_feature	vendor/mongodb/mongodb/src/functions.php	/^function server_supports_feature(Server $server, $feature)$/;"	f
servers	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $servers = $this->manager->getServers();$/;"	v
service	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $this->service = $service;$/;"	v
service	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $service = '';$/;"	v
services	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    protected static $services;$/;"	v
set	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function setFlag($flag, $set = true)$/;"	v
set	vendor/composer/ClassLoader.php	/^    public function set($prefix, $paths)$/;"	f
set	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function set($key, $value)$/;"	f
set	vendor/hassankhan/config/src/ConfigInterface.php	/^    public function set($key, $value);$/;"	f
set	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function set($request)$/;"	f
set	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function set(&$request, &$response = null)$/;"	f
set	vendor/pinguo/php-msf/src/HttpServer.php	/^            $set = $this->setServerSet();$/;"	v
set	vendor/pinguo/php-msf/src/MSFServer.php	/^        $set = $this->config->get('server.set', []);$/;"	v
set	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->set = array();$/;"	v
set	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $set;$/;"	v
set	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function set($column, $value = null, $quote = null)$/;"	f
set	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $set = $this->config['mysql'][$this->active];$/;"	v
set	vendor/pinguo/plates/src/Template/Directory.php	/^    public function set($path)$/;"	f
set	vendor/pinguo/plates/src/Template/FileExtension.php	/^    public function set($fileExtension)$/;"	f
setAcceptedLevels	vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php	/^    public function setAcceptedLevels($minLevelOrList = Logger::DEBUG, $maxLevel = Logger::EMERGENCY)$/;"	f
setActionName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setActionName($actionName)$/;"	f
setAllGet	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function setAllGet(array $get)$/;"	f
setAllPost	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function setAllPost(array $post)$/;"	f
setApcuPrefix	vendor/composer/ClassLoader.php	/^    public function setApcuPrefix($apcuPrefix)$/;"	f
setAppname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^    public function setAppname(string $appname)$/;"	f
setAutoQuote	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function setAutoQuote($autoQuote)$/;"	f
setBatchFormatter	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function setBatchFormatter(FormatterInterface $formatter)$/;"	f
setBubble	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function setBubble(bool $bubble): self$/;"	f
setCallback	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function setCallback(callable $log_function)$/;"	f
setCallback	vendor/pinguo/plates/src/Template/Func.php	/^    public function setCallback($callback)$/;"	f
setClassMapAuthoritative	vendor/composer/ClassLoader.php	/^    public function setClassMapAuthoritative($classMapAuthoritative)$/;"	f
setConfig	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function setConfig()$/;"	f
setConfig	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function setConfig()$/;"	f
setConfig	vendor/pinguo/php-msf/src/Server.php	/^        $setConfig = self::$_worker->setServerSet();$/;"	v
setConfig	vendor/pinguo/php-msf/src/Server.php	/^    public function setConfig()$/;"	f
setConnectionTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setConnectionTimeout($seconds)$/;"	f
setContentType	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function setContentType($contentType)$/;"	f
setContentType	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function setContentType($mime_type)$/;"	f
setContext	vendor/pinguo/php-msf/src/Base/Child.php	/^    public function setContext($context)$/;"	f
setControllerName	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setControllerName($controllerName)$/;"	f
setControllerName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function setControllerName($name);$/;"	f
setControllerName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function setControllerName($name)$/;"	f
setCookie	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function setCookie($/;"	f
setCookies	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function setCookies($cookies)$/;"	f
setDbCollection	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function setDbCollection(string $dbName, string $collectionName): \\MongoCollection$/;"	f
setDirectory	vendor/pinguo/plates/src/Engine.php	/^    public function setDirectory($directory)$/;"	f
setDnsCache	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public static function setDnsCache($host, $ip)$/;"	f
setEmergencyLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function setEmergencyLevel($value)$/;"	f
setEncoding	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    public function setEncoding($encoding)$/;"	f
setEngine	vendor/pinguo/plates/src/Template/Name.php	/^    public function setEngine(Engine $engine)$/;"	f
setException	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    public function setException(\\Throwable $exception)$/;"	f
setFallback	vendor/pinguo/plates/src/Template/Folder.php	/^    public function setFallback($fallback)$/;"	f
setFile	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function setFile($file)$/;"	f
setFile	vendor/pinguo/plates/src/Template/Name.php	/^    public function setFile($file)$/;"	f
setFileExtension	vendor/pinguo/plates/src/Engine.php	/^    public function setFileExtension($fileExtension)$/;"	f
setFilenameFormat	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    public function setFilenameFormat($filenameFormat, $dateFormat)$/;"	f
setFlag	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function setFlag($flag, $set = true)$/;"	f
setFolder	vendor/pinguo/plates/src/Template/Name.php	/^    public function setFolder($folder)$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerInterface.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface;$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/FormattableHandlerTrait.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setFormatter	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    public function setFormatter(FormatterInterface $formatter): HandlerInterface$/;"	f
setGet	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function setGet($key, $value)$/;"	f
setHandlers	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function setHandlers(array $handlers): self$/;"	f
setHashValue	vendor/flexihash/flexihash/tests/Hasher/MockHasher.php	/^    public function setHashValue($hash)$/;"	f
setHeader	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function setHeader($key, $value)$/;"	f
setHeaders	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function setHeaders($headers)$/;"	f
setHighPriorityLevel	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function setHighPriorityLevel($value)$/;"	f
setHostname	vendor/monolog/monolog/src/Monolog/Formatter/LogmaticFormatter.php	/^    public function setHostname(string $hostname)$/;"	f
setInput	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setInput($input)$/;"	f
setLevel	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function setLevel($level)$/;"	f
setLevel	vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php	/^    public function setLevel($level): self$/;"	f
setLog	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function setLog($log)$/;"	f
setLogId	vendor/pinguo/php-context/src/AbstractContext.php	/^    public function setLogId($logId)$/;"	f
setLogger	vendor/psr/log/Psr/Log/LoggerAwareInterface.php	/^    public function setLogger(LoggerInterface $logger);$/;"	f
setLogger	vendor/psr/log/Psr/Log/LoggerAwareTrait.php	/^    public function setLogger(LoggerInterface $logger)$/;"	f
setMethodName	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function setMethodName($name);$/;"	f
setMethodName	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function setMethodName($name)$/;"	f
setMockHandler	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function setMockHandler(array $methods = [])$/;"	f
setModule	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^    public static function setModule($module)$/;"	f
setMysqlProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function setMysqlProxy($name, $proxy)$/;"	f
setName	vendor/pinguo/plates/src/Template/Folder.php	/^    public function setName($name)$/;"	f
setName	vendor/pinguo/plates/src/Template/Func.php	/^    public function setName($name)$/;"	f
setName	vendor/pinguo/plates/src/Template/Name.php	/^    public function setName($name)$/;"	f
setNewRelicAppName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicAppName($appName)$/;"	f
setNewRelicParameter	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicParameter($key, $value)$/;"	f
setNewRelicTransactionName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function setNewRelicTransactionName($transactionName)$/;"	f
setObjectPool	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function setObjectPool($objectPool)$/;"	f
setObjectPool	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setObjectPool($objectPool)$/;"	f
setOutput	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setOutput($output)$/;"	f
setParams	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function setParams($params);$/;"	f
setParams	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function setParams($params)$/;"	f
setPath	vendor/pinguo/plates/src/Template/Folder.php	/^    public function setPath($path)$/;"	f
setPdoConnection	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function setPdoConnection(\\PDO $PdoConnection = null)$/;"	f
setPersistent	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setPersistent($persistent)$/;"	f
setPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->setPlaceholderValues = array();$/;"	v
setPlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $setPlaceholderValues;$/;"	v
setPoolSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function setPoolSize($size)$/;"	f
setPost	vendor/pinguo/php-msf/src/Base/Input.php	/^    public function setPost($key, $value)$/;"	f
setProcessTitle	vendor/pinguo/php-msf/src/Server.php	/^    public static function setProcessTitle($title)$/;"	f
setProfilingLevel	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function setProfilingLevel($level)$/;"	f
setPsr4	vendor/composer/ClassLoader.php	/^    public function setPsr4($prefix, $paths)$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    abstract public function setReadPreference($readPreference, $tags = null);$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function setReadPreference($read_preference, $tags = null);$/;"	f
setReadPreference	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	f
setReadPreferenceFromArray	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected function setReadPreferenceFromArray($readPreferenceArray)$/;"	f
setReadPreferenceFromParameters	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected function setReadPreferenceFromParameters($readPreference, $tags = null)$/;"	f
setReadPreferenceFromSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected function setReadPreferenceFromSlaveOkay($ok = true)$/;"	f
setReadPreferenceFromSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/SlaveOkay.php	/^    abstract protected function setReadPreferenceFromSlaveOkay($ok = true);$/;"	f
setRedisPools	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function setRedisPools($redisPools)$/;"	f
setRedisProxies	vendor/pinguo/php-msf/src/Base/Core.php	/^    public function setRedisProxies($redisProxies)$/;"	f
setRedisProxy	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function setRedisProxy($name, $proxy)$/;"	f
setRelease	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    public function setRelease($value)$/;"	f
setRequestType	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function setRequestType($requestType)$/;"	f
setRouteCache	vendor/pinguo/php-msf/src/Route/IRoute.php	/^    function setRouteCache($path, $callable);$/;"	f
setRouteCache	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^    public function setRouteCache($path, $callable)$/;"	f
setServer	vendor/pinguo/php-msf/src/Console/Request.php	/^    public function setServer($params)$/;"	f
setServerSet	vendor/pinguo/php-msf/src/MSFCli.php	/^    public function setServerSet()$/;"	f
setServerSet	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function setServerSet()$/;"	f
setServerSet	vendor/pinguo/php-msf/src/Server.php	/^    abstract public function setServerSet();$/;"	f
setSize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoPool.php	/^    public static function setSize($size)$/;"	f
setSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/SlaveOkay.php	/^    public function setSlaveOkay($ok = true)$/;"	f
setSlaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function setSlaveOkay($ok)$/;"	f
setSocket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    public function setSocket(UdpSocket $socket)$/;"	f
setSocketTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function setSocketTimeout()$/;"	f
setStatusHeader	vendor/pinguo/php-msf/src/Base/Output.php	/^    private function setStatusHeader($code = 200)$/;"	f
setTag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    public function setTag($tag)$/;"	f
setTags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function setTags(array $tags = [])$/;"	f
setTemplateEngine	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function setTemplateEngine()$/;"	f
setTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setTimeout($seconds)$/;"	f
setTimeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function setTimeout($timeout)$/;"	f
setTimeout	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function setTimeout($timeout)$/;"	f
setTimezone	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function setTimezone(DateTimeZone $tz): self$/;"	f
setTimezoneProvider	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function setTimezoneProvider()$/;"	f
setUp	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Database/FunctionalTestCase.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Operation/FunctionalTestCase.php	/^    public function setUp()$/;"	f
setUp	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    protected function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function setUp()$/;"	f
setUp	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    protected function setUp()$/;"	f
setUseIncludePath	vendor/composer/ClassLoader.php	/^    public function setUseIncludePath($useIncludePath)$/;"	f
setUserDefined	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    public function setUserDefined($key, $val)$/;"	f
setWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    abstract public function setWriteConcern($wstring, $wtimeout = 0);$/;"	f
setWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	f
setWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	f
setWriteConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	f
setWriteConcernFromArray	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    protected function setWriteConcernFromArray($writeConcernArray)$/;"	f
setWriteConcernFromParameters	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    protected function setWriteConcernFromParameters($wstring, $wtimeout = 0)$/;"	f
setWritingTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    public function setWritingTimeout($seconds)$/;"	f
settings	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^            $settings = ['timeout' => 1.5];$/;"	v
setup	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^    protected function setup()$/;"	f
setupRollbarNotifierMock	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    private function setupRollbarNotifierMock()$/;"	f
severity	vendor/hassankhan/config/src/Exception/ParseException.php	/^        $severity  = isset($error['type']) ? $error['type'] : 1;$/;"	v
shareWithAll	vendor/pinguo/plates/src/Template/Data.php	/^    public function shareWithAll($data)$/;"	f
shareWithSome	vendor/pinguo/plates/src/Template/Data.php	/^    public function shareWithSome($data, array $templates)$/;"	f
sharedVariables	vendor/pinguo/plates/src/Template/Data.php	/^        $this->sharedVariables = array_merge($this->sharedVariables, $data);$/;"	v
sharedVariables	vendor/pinguo/plates/src/Template/Data.php	/^    protected $sharedVariables = array();$/;"	v
should	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * The function should have the following prototype$/;"	f
show_current_info	build.sh	/^show_current_info () {$/;"	f
shutdownCheckHandler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $this->shutdownCheckHandler = $test;$/;"	v
shutdownCheckHandler	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    private $shutdownCheckHandler;$/;"	v
simpleArray	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^        $simpleArray = ['foo' => 'bar'];$/;"	v
simpleArrayEncoded	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^        $simpleArrayEncoded = "EgAAAAJmb28ABAAAAGJhcgAA";$/;"	v
single	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private function single(string $method, string $key, array $arguments)$/;"	f
singleDimension	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $singleDimension = array(1, 'Hello', 'Jordi');$/;"	v
size	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $size = filesize($filename);$/;"	v
size	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^        $size = filesize(__FILE__);$/;"	v
skip	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->skip = $num;$/;"	v
skip	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $skip;$/;"	v
skip	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function skip($num)$/;"	f
skip	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^            $skip = $revision;$/;"	v
skip	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^            $skip = abs($revision) - 1;$/;"	v
skip	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $skip = null,$/;"	v
skipClassesPartials	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->skipClassesPartials = array_merge(['Monolog\\\\'], $skipClassesPartials);$/;"	v
skipClassesPartials	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipClassesPartials;$/;"	v
skipClassesPartials	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    public function __construct($level = Logger::DEBUG, array $skipClassesPartials = [], int $skipStackFramesCount = 0)$/;"	v
skipFunctions	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipFunctions = [$/;"	v
skipStackFramesCount	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $this->skipStackFramesCount = $skipStackFramesCount;$/;"	v
skipStackFramesCount	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^    private $skipStackFramesCount;$/;"	v
skipTestIf	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function skipTestIf($condition)$/;"	f
skipTestUnless	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function skipTestUnless($condition)$/;"	f
slackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $this->slackRecord = new SlackRecord($/;"	v
slackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private $slackRecord;$/;"	v
slackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $this->slackRecord = new SlackRecord($/;"	v
slackRecord	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    private $slackRecord;$/;"	v
slackRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord($/;"	v
slackRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord();$/;"	v
slackRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord(null, null, false, 'ghost');$/;"	v
slackRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord = new SlackRecord(null, null, true, null, false, true, array('context.info.library', 'extra.tags.1'));$/;"	v
slackRecord	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^        $slackRecord = $handler->getSlackRecord();$/;"	v
slackRecord2	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $slackRecord2 = new SlackRecord(null, null, false, 'http:\/\/github.com\/Seldaek\/monolog');$/;"	v
slackTeam	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->slackTeam = $slackTeam;$/;"	v
slackTeam	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $slackTeam;$/;"	v
slackbotUrl	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $slackbotUrl = sprintf($/;"	v
slaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function slaveOkay($okay = true)$/;"	f
slaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public static $slaveOkay = false;$/;"	v
slaveOkay	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSCursor.php	/^    public static $slaveOkay;$/;"	v
slavePool	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                $slavePool = new MysqlAsynPool(getInstance()->config, $slavePoolName);$/;"	v
slavePool	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $slavePool = getInstance()->getAsynPool($slavePoolName);$/;"	v
slaves	vendor/pinguo/php-msf/src/Process/Config.php	/^                $slaves    = [];$/;"	v
slaves	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $this->slaves = $config['pools']['slaves'];$/;"	v
slaves	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    private $slaves;$/;"	v
slaves	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^                $this->slaves = $newSlaves;$/;"	v
slaves	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    private $slaves;$/;"	v
sleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $sleepProperties = array_keys($dumpValues);$/;"	v
sleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $sleepProperties = $var->__sleep();$/;"	v
sleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $sleepProperties = array_keys($dumpValues);$/;"	v
sleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^            $sleepProperties = array_diff($sleepProperties, $unsleepProperties);$/;"	v
slices	vendor/pinguo/php-msf/src/Route/NormalRoute.php	/^                    $slices = array_map('ucfirst', explode('-', $name));$/;"	v
snapshot	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->snapshot = true;$/;"	v
snapshot	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $snapshot;$/;"	v
snapshot	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function snapshot()$/;"	f
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^            $this->socket = null;$/;"	v
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^        $this->socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);$/;"	v
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    protected $socket;$/;"	v
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->socket = $socket;$/;"	v
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^        $this->socket = new UdpSocket($host, $port ?: 514);$/;"	v
socket	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected $socket;$/;"	v
socket	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $socket = $this->getMockBuilder('Monolog\\Handler\\SyslogUdp\\UdpSocket')$/;"	v
socket	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $socket = $this->getMockBuilder('Monolog\\Handler\\SyslogUdp\\UdpSocket')$/;"	v
socket	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $socket = new UdpSocket('127.0.0.1', 514);$/;"	v
socketInfo	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^            $socketInfo = $this->streamGetMetadata();$/;"	v
someObject	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^        $someObject = new \\stdClass();$/;"	v
sort	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->sort = $fields;$/;"	v
sort	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $sort;$/;"	v
sort	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function sort(array $fields)$/;"	f
sort	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $sort = null,$/;"	v
sortOrder	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^            $sortOrder = -1;$/;"	v
sortOrder	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^            $sortOrder = 1;$/;"	v
sortPositionTargets	vendor/flexihash/flexihash/src/Flexihash.php	/^    private function sortPositionTargets()$/;"	f
sortedMethods	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $sortedMethods = $methods;$/;"	v
sortedMethods	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $sortedMethods = array_map(function(ReflectionMethod $method) { return $method->getName(); }, $sortedMethods);$/;"	v
sounds	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $sounds = [$/;"	v
source	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $this->source = $source;$/;"	v
source	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    private $source;$/;"	v
sourceEmail	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $this->sourceEmail = $sourceEmail;$/;"	v
sourceEmail	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^    private $sourceEmail;$/;"	v
spaces	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $spaces = '';$/;"	v
spaces	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                    $spaces = str_repeat(' ', $level * 4);$/;"	v
spaces	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $spaces = str_repeat(' ', $level * 4);$/;"	v
specification	vendor/psr/log/Psr/Log/LoggerInterface.php	/^ * for the full interface specification.$/;"	i
splitMessageIntoLines	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    private function splitMessageIntoLines($message): array$/;"	f
sql	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^        $this->sql           = $_sql;$/;"	v
sql	vendor/pinguo/php-msf/src/Coroutine/MySql.php	/^    public $sql;$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $sql = $this->getStatement(false);$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function go($bindId = null, $sql = null)$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^                if ($sql == 'commit' || $sql == 'rollback') {\/\/结束事务$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            $sql = $this->dbQueryBuilder->getStatement(false);$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^            $sql = strtolower($data['sql']);$/;"	v
sql	vendor/pinguo/php-msf/src/Pools/MysqlAsynPool.php	/^        $sql = $data['sql'];$/;"	v
sql	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                    $sql = $this->getDBQueryBuilder($context)->getStatement(false);$/;"	v
sql	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^                    $sql = trim($arguments[1]);$/;"	v
sql	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^            $sql = '';$/;"	v
srcDir	vendor/mongodb/mongodb/tests/PedantryTest.php	/^        $srcDir = realpath(__DIR__ . '\/..\/src\/');$/;"	v
stack	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient-gte-0-16-0.php	/^    public function capture($data, $stack = null, $vars = null)$/;"	v
stack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $this->stack      = null;$/;"	v
stack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^        $this->stack      = new \\SplStack();$/;"	v
stack	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^    protected $stack;$/;"	v
start	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $start = microtime(true);$/;"	v
start	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public function start(\\Generator $routine, Controller $controller, callable $callBack = null)$/;"	f
start	vendor/pinguo/php-msf/src/HttpServer.php	/^    public function start()$/;"	f
start	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function start()$/;"	f
start	vendor/pinguo/plates/src/Template/Template.php	/^    public function start($name)$/;"	f
startCheck	vendor/pinguo/php-msf/src/Proxy/IProxy.php	/^    public function startCheck();$/;"	f
startCheck	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^    public function startCheck()$/;"	f
startCheck	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    public function startCheck()$/;"	f
startCheck	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^    public function startCheck()$/;"	f
startFile	vendor/pinguo/php-msf/src/Server.php	/^        $startFile = $argv[0];$/;"	v
startProcess	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    private function startProcess()$/;"	f
startSwooles	vendor/pinguo/php-msf/src/Server.php	/^    protected static function startSwooles()$/;"	f
startTask	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public function startTask($callback = null)$/;"	f
startTime	vendor/pinguo/php-msf/src/Server.php	/^                $startTime = time();$/;"	v
startedIterating	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->startedIterating = true;$/;"	v
startedIterating	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->startedIterating = false;$/;"	v
startedIterating	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->startedIterating = true;$/;"	v
startedIterating	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected $startedIterating = false;$/;"	v
startedIterating	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^            $this->startedIterating = true;$/;"	v
stat	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $stat = $this->getStatTemplate();$/;"	v
stat	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^        $stat = fstat($stream);$/;"	v
state	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^                    $state = 0;$/;"	v
state	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^                    $state = 1;$/;"	v
state	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^                    $state = 2;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "DELETE " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "FROM " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "GROUP BY " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "HAVING " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "INSERT " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "LIMIT " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "ORDER BY " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "REPLACE " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "SELECT " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "SET " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "UPDATE " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = "WHERE " . $statement;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $sql;$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getDeleteStatement($usePlaceholders);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getInsertStatement($usePlaceholders);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getReplaceStatement($usePlaceholders);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getSelectStatement($usePlaceholders);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getStatement();$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = $this->getUpdateStatement($usePlaceholders);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $statement = trim($statement);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = "";$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = $this->getCriteriaString($this->having, $usePlaceholders, $this->havingPlaceholderValues);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = $this->getCriteriaString($this->where, $usePlaceholders, $this->wherePlaceholderValues);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = '(';$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = rtrim($statement);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = substr($statement, 0, -2);$/;"	v
statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $statement = trim($statement);$/;"	v
static	vendor/pinguo/php-aop/src/MI.php	/^            $static      = $reflection->getProperties(\\ReflectionProperty::IS_STATIC);$/;"	v
statistics	vendor/pinguo/php-msf/src/MSFServer.php	/^    public function statistics()$/;"	f
stats	vendor/pinguo/php-msf/src/Process/Config.php	/^    public function stats()$/;"	f
status	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public $status;$/;"	v
status	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $status = mkdir($dir, 0777, true);$/;"	v
status	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function output($data = null, $status = 200)$/;"	v
status	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function outputJson($data = null, $status = 200)$/;"	v
status	vendor/pinguo/php-msf/src/MSFServer.php	/^                        $status = 500;$/;"	v
status	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $status = 500;$/;"	v
status	vendor/pinguo/php-msf/src/MSFServer.php	/^        $status  = 200;$/;"	v
status	vendor/pinguo/php-msf/src/Rest/Controller.php	/^            $status = 405;$/;"	v
status	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        $status = 200;$/;"	v
stdClass	vendor/pinguo/php-msf/src/Base/Core.php	/^    public static $stdClass = null;$/;"	v
stdClass	vendor/pinguo/php-msf/src/Server.php	/^    protected static $stdClass = null;$/;"	v
stop	vendor/pinguo/plates/src/Template/Template.php	/^    public function stop()$/;"	f
stopBuffering	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^        $this->stopBuffering = $stopBuffering;$/;"	v
stopBuffering	vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php	/^    protected $stopBuffering;$/;"	v
store	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $store = file($this->deduplicationStore, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);$/;"	v
storeBytes	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeBytes($bytes, array $extra = [], array $options = [])$/;"	f
storeFile	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeFile($filename, array $extra = [], array $options = [])$/;"	f
storeIteratorState	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function storeIteratorState()$/;"	f
storeUpload	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^    public function storeUpload($name, array $metadata = [])$/;"	f
str	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $str = '[object] ('.get_class($e).'(code: '.$e->getCode().'): '.$e->getMessage().' at '.$e->getFile().':'.$e->getLine().$previousText.')';$/;"	v
str	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $str = strtolower(substr(trim($sql), 0, 6));$/;"	v
stream	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $this->stream = new ReadableStream($/;"	v
stream	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^        $this->stream = new WritableStream($/;"	v
stream	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    private $stream;$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $stream = $this->bucket->openDownloadStream($id);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename');$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename', ['_id' => 1, 'metadata' => $metadata]);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename', ['_id' => 1]);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename', ['_id' => ['x' => 1]]);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/FunctionalTestCase.php	/^        $stream = fopen('php:\/\/temp', 'w+b');$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^        $stream = new ReadableStream($this->collectionWrapper, $fileDocument);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^        $stream = $this->bucket->openDownloadStream('length-10');$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename');$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^        $stream = $this->bucket->openUploadStream('filename', ['chunkSizeBytes' => 1024]);$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^        $stream = new WritableStream($this->collectionWrapper, 'filename');$/;"	v
stream	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^        $stream = new WritableStream($this->collectionWrapper, 'filename', ['chunkSizeBytes' => 1024]);$/;"	v
stream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^                $this->stream = null;$/;"	v
stream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->stream = $stream;$/;"	v
stream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->stream = fopen($this->url, 'a');$/;"	v
stream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->stream = null;$/;"	v
stream	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $stream;$/;"	v
stream	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $stream = $handler->getStream();$/;"	v
stream	vendor/pinguo/php-log/src/PGLog.php	/^                $stream = new BufferHandler($stream, $handler['buffer'], Logger::DEBUG, true, true);$/;"	v
stream	vendor/pinguo/php-log/src/PGLog.php	/^            $stream = new FilterHandler($stream, $handler['levelList']);$/;"	v
stream	vendor/pinguo/php-log/src/PGLog.php	/^            $stream = new PGStreamHandler($handler['stream']);$/;"	v
streamGetMetadata	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function streamGetMetadata()$/;"	f
streamSetTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function streamSetTimeout()$/;"	f
streamWrapperProtocol	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private static $streamWrapperProtocol = 'gridfs';$/;"	v
streamWrite	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected function streamWrite($stream, array $record)$/;"	f
stream_close	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_close()$/;"	f
stream_eof	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_eof()$/;"	f
stream_open	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_open($path, $mode, $options, &$openedPath)$/;"	f
stream_read	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_read($length)$/;"	f
stream_stat	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_stat()$/;"	f
stream_write	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^    public function stream_write($data)$/;"	f
string	vendor/pinguo/plates/src/Template/Template.php	/^            $string = $this->batch($string, $functions);$/;"	v
stringId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $stringId = (string) $id;$/;"	v
stringify	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^    public function stringify($value): string$/;"	f
stringify	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function stringify($fields)$/;"	f
stringify	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function stringify($fields)$/;"	f
subPath	vendor/composer/ClassLoader.php	/^                $subPath = substr($subPath, 0, $lastPos);$/;"	v
subPath	vendor/composer/ClassLoader.php	/^            $subPath = $class;$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $subject = sprintf($/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^            $subject = $subjectFormatter->format($this->getHighestRecord($records));$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $subject = $this->subject;$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->subject = $subject;$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $subject;$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $this->subject = $subject;$/;"	v
subject	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected $subject;$/;"	v
subject	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $subject = 'dear victim';$/;"	v
subject	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^            $subject = count($records) > 0 ? 'Emergency' : 'Normal';$/;"	v
subjectFormatter	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^            $subjectFormatter = new LineFormatter($this->subject);$/;"	v
subjectFormatter	vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php	/^            $subjectFormatter = new LineFormatter($message->getSubject());$/;"	v
substrLog	vendor/pinguo/php-log/src/PGLog.php	/^    protected function substrLog($val, $length)$/;"	f
sum	app/Controllers/RpcTest.php	/^        $sum    = yield $client->handler('sum')->multi(1, 2, 3, 4, 5);$/;"	v
sum	app/Controllers/RpcTest.php	/^        $sum = yield RpcClient::goConcurrent($rpc);$/;"	v
supportedFileParsers	vendor/hassankhan/config/src/Config.php	/^    private $supportedFileParsers = array($/;"	v
switchSlave	vendor/alcaeus/mongo-php-adapter/lib/Mongo/Mongo.php	/^    public function switchSlave()$/;"	f
swooleServer	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->swooleServer = $swooleServer;$/;"	v
swooleServer	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $swooleServer;$/;"	v
swooleServer	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^        $this->swooleServer = $swooleServer;$/;"	v
swooleServer	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    protected $swooleServer;$/;"	v
syncCheck	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^    private function syncCheck()$/;"	f
syncMySQLPool	app/Tasks/Demo.php	/^    public function syncMySQLPool()$/;"	f
syncMySQLPoolTransaction	app/Tasks/Demo.php	/^    public function syncMySQLPoolTransaction()$/;"	f
syncMySQLProxy	app/Tasks/Demo.php	/^    public function syncMySQLProxy()$/;"	f
syncMySQLProxyTransaction	app/Tasks/Demo.php	/^    public function syncMySQLProxyTransaction()$/;"	f
sysCache	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->sysCache  = new \\Yac('sys_cache_');$/;"	v
sysCache	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->sysCache  = new \\Yac('sys_cache_');$/;"	v
sysCache	vendor/pinguo/php-msf/src/Server.php	/^    public $sysCache;$/;"	v
sysTimers	vendor/pinguo/php-msf/src/Server.php	/^    public $sysTimers;$/;"	v
syslog	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^ *   $syslog = new SyslogHandler('myfacility', 'local6');$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^        $this->systemName = $systemName ?: gethostname();$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    protected $systemName;$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^    public function __construct(string $systemName = null, string $extraPrefix = null, string $contextPrefix = 'ctxt_', int $maxLength = null)$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^        $this->systemName = $systemName ?: gethostname();$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    protected $systemName;$/;"	v
systemName	vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php	/^    public function __construct(string $applicationName, string $systemName = null, string $extraPrefix = null, string $contextPrefix = 'ctxt_')$/;"	v
table	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^        $this->table = $table;$/;"	v
table	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $table;$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php	/^        $tag = $record['channel'];$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^            $tag = is_array($tag) ? $tag : [$tag];$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^            $this->tag = array_unique(array_merge($this->tag, $tag));$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $tag = !empty($tag) ? $tag : [];$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $this->tag = is_array($tag) ? $tag : [$tag];$/;"	v
tag	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected $tag = [];$/;"	v
tag	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^        $tag = 'tag';$/;"	v
tagSets	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $tagSets = [];$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^        $tags = isset($readPreferenceArray['tagsets']) ? $readPreferenceArray['tagsets'] : [];$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    abstract public function setReadPreference($readPreference, $tags = null);$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^    protected function setReadPreferenceFromParameters($readPreference, $tags = null)$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $tags = explode(':', $tagSet);$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $tags = isset($urlOptions['readPreferenceTags']) ? $urlOptions['readPreferenceTags'] : null;$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function setReadPreference($read_preference, $tags = null);$/;"	v
tags	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function setReadPreference($readPreference, $tags = null)$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php	/^        $tags = [$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^                    $tags = $context[$key];$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $tags = $this->getRecordTags($record);$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $tags = null;$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^        $this->tags = $tags;$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^        $this->tags = array_merge($this->tags, $tags);$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    private $tags;$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function __construct(array $tags = [])$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function addTags(array $tags = [])$/;"	v
tags	vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php	/^    public function setTags(array $tags = [])$/;"	v
tags	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $tags = [1, 2, 'foo'];$/;"	v
tags	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^        $tags = [1, 2, 3];$/;"	v
tagsContextKeys	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^            $tagsContextKeys = $this->getHandlerDefaultOption('debugTagsKeysInContext');$/;"	v
tailable	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^        $this->tailable = $tail;$/;"	v
tailable	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected $tailable;$/;"	v
tailable	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public function tailable($tail = true)$/;"	f
targetCount	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $targetCount = 0;$/;"	v
targetToPositions	vendor/flexihash/flexihash/src/Flexihash.php	/^    private $targetToPositions = [];$/;"	v
targets	vendor/flexihash/flexihash/src/Flexihash.php	/^        $targets = $this->lookupList($resource, 1);$/;"	v
targets	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    private $targets = 10;$/;"	v
targets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $targets = $hashSpace->lookupList('resource', 2);$/;"	v
targets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $targets = $hashSpace->lookupList('resource', 4);$/;"	v
targets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $targets = ['t-a', 't-b', 't-c'];$/;"	v
targets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^        $targets = [];$/;"	v
task	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^        $task  = $controller->getObject(Task::class, [$routine, $controller, $callBack]);$/;"	v
task	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $task          = $objectPool->get($taskName, [$taskConstruct]);$/;"	v
taskAtomic	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->taskAtomic = new \\swoole_atomic(0);$/;"	v
taskAtomic	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->taskAtomic = new \\swoole_atomic(0);$/;"	v
taskAtomic	vendor/pinguo/php-msf/src/MSFServer.php	/^    public $taskAtomic;$/;"	v
taskClasses	vendor/pinguo/php-msf/src/Base/AOPFactory.php	/^    protected static $taskClasses = [];$/;"	v
taskConstruct	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskConstruct = $message['task_construct'];$/;"	v
taskConstruct	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->taskConstruct = $args;$/;"	v
taskConstruct	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public $taskConstruct;$/;"	v
taskContext	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskContext   = $message['task_context'];$/;"	v
taskData	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskData      = $message['task_fuc_data'];$/;"	v
taskFucName	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskFucName   = $message['task_fuc_name'];$/;"	v
taskId	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskId        = $message['task_id'];$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/Task.php	/^        $this->taskId = $taskId;$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/Task.php	/^        $this->taskId = 0;$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^            $this->taskId = 1;$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->taskId        = null;$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->taskId = getInstance()->taskAtomic->add();$/;"	v
taskId	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    protected $taskId;$/;"	v
taskMap	vendor/pinguo/php-msf/src/Coroutine/Scheduler.php	/^    public $taskMap = [];$/;"	v
taskName	vendor/pinguo/php-msf/src/MSFServer.php	/^                    $taskName      = $message['task_name'];$/;"	v
taskName	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    public $taskName;$/;"	v
taskNum	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->taskNum = $set['task_worker_num'];$/;"	v
taskNum	vendor/pinguo/php-msf/src/Server.php	/^    public $taskNum = 0;$/;"	v
taskProxyData	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^        $this->taskProxyData = $taskProxyData;$/;"	v
taskProxyData	vendor/pinguo/php-msf/src/Coroutine/CTask.php	/^    public $taskProxyData;$/;"	v
taskProxyData	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->taskProxyData = [$/;"	v
taskProxyData	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->taskProxyData = null;$/;"	v
taskProxyData	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    private $taskProxyData;$/;"	v
tasks	vendor/pinguo/php-msf/src/MSFServer.php	/^        $tasks = [];$/;"	v
td	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^            $td = '<pre>'.htmlspecialchars($td, ENT_NOQUOTES, 'UTF-8').'<\/pre>';$/;"	v
td	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^    protected function addRow(string $th, string $td = ' ', bool $escapeTd = true): string$/;"	v
tearDown	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function tearDown()$/;"	f
tearDown	vendor/mongodb/mongodb/tests/Collection/FunctionalTestCase.php	/^    public function tearDown()$/;"	f
tearDown	vendor/mongodb/mongodb/tests/Operation/FunctionalTestCase.php	/^    public function tearDown()$/;"	f
tearDown	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function tearDown()$/;"	f
tearDown	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function tearDown()$/;"	f
tearDown	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function tearDown()$/;"	f
tearDown	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function tearDown()$/;"	f
tearDownAfterClass	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public static function tearDownAfterClass()$/;"	f
temp	vendor/hassankhan/config/src/FileParser/Php.php	/^            $temp = call_user_func($temp);$/;"	v
temp	vendor/hassankhan/config/src/FileParser/Php.php	/^            $temp = require $path;$/;"	v
temp	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^        $temp = sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'monolog_locked_log';$/;"	v
tempFiles	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $tempFiles    = [];$/;"	v
tempFiles	vendor/pinguo/php-msf/src/Process/Inotify.php	/^        $tempFiles = NULL;$/;"	v
tempParser	vendor/hassankhan/config/src/Config.php	/^            $tempParser = new $fileParser;$/;"	v
template	vendor/pinguo/php-msf/src/Base/Output.php	/^                $template = getInstance()->templateEngine->make($viewFile);$/;"	v
template	vendor/pinguo/php-msf/src/Base/Output.php	/^            $template = getInstance()->templateEngine->make($viewFile);$/;"	v
template	vendor/pinguo/php-msf/src/Base/Output.php	/^            $template = null;$/;"	v
template	vendor/pinguo/php-msf/src/Base/Output.php	/^        $template = null;$/;"	v
template	vendor/pinguo/plates/src/Extension/Asset.php	/^    public $template;$/;"	v
template	vendor/pinguo/plates/src/Extension/URI.php	/^    public $template;$/;"	v
template	vendor/pinguo/plates/src/Template/Func.php	/^    public function call(Template $template = null, $arguments = array())$/;"	v
templateEngine	vendor/pinguo/php-msf/src/HttpServer.php	/^        $this->templateEngine = new Engine();$/;"	v
templateEngine	vendor/pinguo/php-msf/src/HttpServer.php	/^    public $templateEngine;$/;"	v
templateVariables	vendor/pinguo/plates/src/Template/Data.php	/^    protected $templateVariables = array();$/;"	v
templates	vendor/pinguo/plates/example/example.php	/^$templates = new League\\Plates\\Engine('templates');$/;"	v
templates	vendor/pinguo/plates/src/Engine.php	/^    public function addData(array $data, $templates = null)$/;"	v
templates	vendor/pinguo/plates/src/Template/Data.php	/^    public function add(array $data, $templates = null)$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $test    = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $test = new TestHandler();$/;"	v
test	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function test($handler, $record)$/;"	f
testAcceptedLevelApi	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testAcceptedLevelApi()$/;"	f
testAcknowledgedWriteConcernWithBool	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAcknowledgedWriteConcernWithBool()$/;"	f
testAddTargetAndGetAllTargets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testAddTargetAndGetAllTargets()$/;"	f
testAddTargetThrowsExceptionOnDuplicateTarget	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testAddTargetThrowsExceptionOnDuplicateTarget()$/;"	f
testAddTargetWithNonConsistentHash	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testAddTargetWithNonConsistentHash()$/;"	f
testAddTargetsAndGetAllTargets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testAddTargetsAndGetAllTargets()$/;"	f
testAddsChannel	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsChannel()$/;"	f
testAddsCustomUsername	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsCustomUsername()$/;"	f
testAddsFallbackAndTextToAttachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsFallbackAndTextToAttachment()$/;"	f
testAddsIcon	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsIcon()$/;"	f
testAddsLongAttachmentWithContextAndExtra	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsLongAttachmentWithContextAndExtra()$/;"	f
testAddsLongAttachmentWithoutContextAndExtra	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsLongAttachmentWithoutContextAndExtra()$/;"	f
testAddsOneAttachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsOneAttachment()$/;"	f
testAddsShortAttachmentWithContextAndExtra	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsShortAttachmentWithContextAndExtra()$/;"	f
testAddsShortAttachmentWithoutContextAndExtra	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsShortAttachmentWithoutContextAndExtra()$/;"	f
testAddsTimestampToAttachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAddsTimestampToAttachment()$/;"	f
testAggregate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAggregate()$/;"	f
testAggregateCursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAggregateCursor()$/;"	f
testAggregateInvalidPipeline	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAggregateInvalidPipeline()$/;"	f
testAggregateTimeoutException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAggregateTimeoutException()$/;"	f
testAggregateWithMultiplePilelineOperatorsAsArguments	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testAggregateWithMultiplePilelineOperatorsAsArguments()$/;"	f
testAllowOnlyFixedDefinedDateFormats	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testAllowOnlyFixedDefinedDateFormats($dateFormat, $valid)$/;"	f
testApplyTypeMapToDocument	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testApplyTypeMapToDocument($document, array $typeMap, $expectedDocument)$/;"	f
testArgs	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^        $testArgs = [];$/;"	v
testArgs	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        $testArgs = [];$/;"	v
testAttachmentsNotPresentIfNoAttachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testAttachmentsNotPresentIfNoAttachment()$/;"	f
testAutolabel	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testAutolabel()$/;"	f
testAvoidInfiniteLoopWhenNoDataIsWrittenForAWritingTimeoutSeconds	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testAvoidInfiniteLoopWhenNoDataIsWrittenForAWritingTimeoutSeconds()$/;"	f
testBadConnectionTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testBadConnectionTimeout()$/;"	f
testBadTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testBadTimeout()$/;"	f
testBasicIndex	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testBasicIndex()$/;"	f
testBatchFormat	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testBatchFormat()$/;"	f
testBatchFormat	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testBatchFormat()$/;"	f
testBatchFormatThrowException	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testBatchFormatThrowException()$/;"	f
testBatchFormatThrowException	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testBatchFormatThrowException()$/;"	f
testBatchInsertContinuesOnError	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertContinuesOnError()$/;"	f
testBatchInsertEmptyBatchException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertEmptyBatchException()$/;"	f
testBatchInsertException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertException()$/;"	f
testBatchInsertObjectWithPrivateProperties	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertObjectWithPrivateProperties()$/;"	f
testBatchInsertWithEmptyKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertWithEmptyKey()$/;"	f
testBatchInsertWithInvalidKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertWithInvalidKey()$/;"	f
testBatchInsertWithNumericKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testBatchInsertWithNumericKey()$/;"	f
testBsonSerialization	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testBsonSerialization()$/;"	f
testBsonSerializeCastsToObject	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^    public function testBsonSerializeCastsToObject()$/;"	f
testBsonSerializeReindexesKeys	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^    public function testBsonSerializeReindexesKeys()$/;"	f
testBubblingWhenTheHandlerReturnsFalse	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testBubblingWhenTheHandlerReturnsFalse()$/;"	f
testCanNormalizeReferences	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testCanNormalizeReferences()$/;"	f
testCappedCollectionMethods	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^    public function testCappedCollectionMethods()$/;"	f
testChannel	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testChannel()$/;"	f
testChannelLevelActivationStrategy	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testChannelLevelActivationStrategy()$/;"	f
testChannelLevelActivationStrategyWithPsrLevels	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testChannelLevelActivationStrategyWithPsrLevels()$/;"	f
testChunkProperty	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testChunkProperty()$/;"	f
testClearClears	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testClearClears()$/;"	f
testClose	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testClose()$/;"	f
testClose	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testClose()$/;"	f
testCloseClosesProcess	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testCloseClosesProcess()$/;"	f
testCloseDoesNotClosePersistentSocket	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testCloseDoesNotClosePersistentSocket()$/;"	f
testCloseKeepsExternalHandlersOpen	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testCloseKeepsExternalHandlersOpen()$/;"	f
testCodeToString	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testCodeToString()$/;"	f
testCommand	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCommand()$/;"	f
testCommand	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testCommand()$/;"	f
testCommandAppliesTypeMapToCursor	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testCommandAppliesTypeMapToCursor()$/;"	f
testCommandCommandArgumentTypeCheck	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testCommandCommandArgumentTypeCheck($command)$/;"	f
testCommandCursorTimeout	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCommandCursorTimeout()$/;"	f
testCommandError	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCommandError()$/;"	f
testConcurrentHandlers	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConcurrentHandlers	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConcurrentHandlers	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function testConcurrentHandlers()$/;"	f
testConnectWithUsernameAndPassword	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testConnectWithUsernameAndPassword()$/;"	f
testConnectWithUsernameAndPasswordInConnectionUrl	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testConnectWithUsernameAndPasswordInConnectionUrl()$/;"	f
testConnectionErrors	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testConnectionErrors($ignore, $expectedError)$/;"	f
testConnectionStringisConstructedCorrectly	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testConnectionStringisConstructedCorrectly()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testConstruct($traceDepth, $traceAsString, $expectedTraceDepth, $expectedTraceAsString)$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstruct	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^    public function testConstruct()$/;"	f
testConstructAndGetSet	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testConstructAndGetSet()$/;"	f
testConstructAndGetSet	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testConstructAndGetSet()$/;"	f
testConstructInvalidFacility	vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php	/^    public function testConstructInvalidFacility()$/;"	f
testConstructWithInvalidCommandThrowsInvalidArgumentException	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testConstructWithInvalidCommandThrowsInvalidArgumentException($invalidCommand, $expectedExcep)$/;"	f
testConstructWithInvalidCwdThrowsInvalidArgumentException	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testConstructWithInvalidCwdThrowsInvalidArgumentException($invalidCwd, $expectedExcep)$/;"	f
testConstructWithValidCwdWorks	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testConstructWithValidCwdWorks()$/;"	f
testConstructorBatchSizeOptionRequiresUseCursor	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function testConstructorBatchSizeOptionRequiresUseCursor()$/;"	f
testConstructorCollectionNameArgument	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testConstructorCollectionNameArgument($collectionName)$/;"	f
testConstructorCommandArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/DatabaseCommandTest.php	/^    public function testConstructorCommandArgumentTypeCheck($command)$/;"	f
testConstructorCursorTypeOption	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^    public function testConstructorCursorTypeOption($cursorType)$/;"	f
testConstructorDatabaseNameArgument	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testConstructorDatabaseNameArgument($databaseName)$/;"	f
testConstructorDatabaseNameArgument	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testConstructorDatabaseNameArgument($databaseName)$/;"	f
testConstructorDefaultUri	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testConstructorDefaultUri()$/;"	f
testConstructorDefaultsToPropertyAccess	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^    public function testConstructorDefaultsToPropertyAccess()$/;"	f
testConstructorDocumentArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/InsertOneTest.php	/^    public function testConstructorDocumentArgumentTypeCheck($document)$/;"	f
testConstructorDocumentsArgumentElementTypeChecks	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^    public function testConstructorDocumentsArgumentElementTypeChecks($document)$/;"	f
testConstructorDocumentsMustBeAList	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^    public function testConstructorDocumentsMustBeAList()$/;"	f
testConstructorDocumentsMustNotBeEmpty	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^    public function testConstructorDocumentsMustNotBeEmpty()$/;"	f
testConstructorDriverOptionTypeChecks	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testConstructorDriverOptionTypeChecks(array $driverOptions)$/;"	f
testConstructorFileDocumentChecks	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testConstructorFileDocumentChecks($file)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/DistinctTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindOneAndDeleteTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^    public function testConstructorFilterArgumentTypeCheck($filter)$/;"	f
testConstructorFull	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testConstructorFull()$/;"	f
testConstructorFull	vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^    public function testConstructorFull()$/;"	f
testConstructorHeaderInjection	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testConstructorHeaderInjection()$/;"	f
testConstructorIndexesArgumentMustBeAList	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function testConstructorIndexesArgumentMustBeAList()$/;"	f
testConstructorLimitArgumentMustBeOneOrZero	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^    public function testConstructorLimitArgumentMustBeOneOrZero($limit)$/;"	f
testConstructorMinimal	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testConstructorMinimal()$/;"	f
testConstructorMinimal	vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php	/^    public function testConstructorMinimal()$/;"	f
testConstructorOnlyTakesHandler	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testConstructorOnlyTakesHandler()$/;"	f
testConstructorOnlyTakesHandler	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testConstructorOnlyTakesHandler()$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/CountTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/CreateCollectionTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DatabaseCommandTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DeleteTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DistinctTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DropCollectionTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DropDatabaseTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/DropIndexesTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/FindAndModifyTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/FindOneAndDeleteTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/FindTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/InsertManyTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/InsertOneTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/ListDatabasesTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/ListIndexesTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorOptionTypeChecks	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^    public function testConstructorOptionTypeChecks(array $options)$/;"	f
testConstructorPipelineArgumentMustBeAList	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function testConstructorPipelineArgumentMustBeAList()$/;"	f
testConstructorPipelineArgumentMustNotBeEmpty	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function testConstructorPipelineArgumentMustNotBeEmpty()$/;"	f
testConstructorReplacementArgument	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function testConstructorReplacementArgument($replacement)$/;"	f
testConstructorReplacementArgumentRequiresNoOperators	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function testConstructorReplacementArgumentRequiresNoOperators()$/;"	f
testConstructorReplacementArgumentRequiresNoOperators	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function testConstructorReplacementArgumentRequiresNoOperators($replacement)$/;"	f
testConstructorReplacementArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function testConstructorReplacementArgumentTypeCheck($replacement)$/;"	f
testConstructorReplacementArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/ReplaceOneTest.php	/^    public function testConstructorReplacementArgumentTypeCheck($replacement)$/;"	f
testConstructorRequiresAtLeastOneIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function testConstructorRequiresAtLeastOneIndex()$/;"	f
testConstructorRequiresIndexSpecificationsToBeAnArray	vendor/mongodb/mongodb/tests/Operation/CreateIndexesTest.php	/^    public function testConstructorRequiresIndexSpecificationsToBeAnArray($index)$/;"	f
testConstructorReturnDocumentOption	vendor/mongodb/mongodb/tests/Operation/FindOneAndReplaceTest.php	/^    public function testConstructorReturnDocumentOption($returnDocument)$/;"	f
testConstructorReturnDocumentOption	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function testConstructorReturnDocumentOption($returnDocument)$/;"	f
testConstructorSetsExpectedDefaults	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testConstructorSetsExpectedDefaults()$/;"	f
testConstructorShouldRequireChunkSizeBytesOptionToBePositive	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testConstructorShouldRequireChunkSizeBytesOptionToBePositive()$/;"	f
testConstructorShouldRequireChunkSizeBytesOptionToBePositive	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function testConstructorShouldRequireChunkSizeBytesOptionToBePositive()$/;"	f
testConstructorShouldRequireKey	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireKey()$/;"	f
testConstructorShouldRequireKeyFieldOrderToBeNumericOrString	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireKeyFieldOrderToBeNumericOrString($order)$/;"	f
testConstructorShouldRequireKeyToBeArrayOrObject	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireKeyToBeArrayOrObject()$/;"	f
testConstructorShouldRequireNameToBeString	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireNameToBeString()$/;"	f
testConstructorShouldRequireNamespace	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireNamespace()$/;"	f
testConstructorShouldRequireNamespaceToBeString	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testConstructorShouldRequireNamespaceToBeString()$/;"	f
testConstructorShouldThrowExceptionForInvalidMongo	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    public function testConstructorShouldThrowExceptionForInvalidMongo()$/;"	f
testConstructorShouldThrowExceptionForInvalidRedis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldThrowExceptionForInvalidRedis()$/;"	f
testConstructorShouldWorkWithPredis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldWorkWithPredis()$/;"	f
testConstructorShouldWorkWithRedis	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testConstructorShouldWorkWithRedis()$/;"	f
testConstructorTypeMapOptionRequiresUseCursor	vendor/mongodb/mongodb/tests/Operation/AggregateTest.php	/^    public function testConstructorTypeMapOptionRequiresUseCursor()$/;"	f
testConstructorUpdateAndRemoveOptionsAreMutuallyExclusive	vendor/mongodb/mongodb/tests/Operation/FindAndModifyTest.php	/^    public function testConstructorUpdateAndRemoveOptionsAreMutuallyExclusive()$/;"	f
testConstructorUpdateArgument	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function testConstructorUpdateArgument($update)$/;"	f
testConstructorUpdateArgument	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function testConstructorUpdateArgument($update)$/;"	f
testConstructorUpdateArgumentRequiresOperators	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function testConstructorUpdateArgumentRequiresOperators()$/;"	f
testConstructorUpdateArgumentRequiresOperators	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function testConstructorUpdateArgumentRequiresOperators($replacement)$/;"	f
testConstructorUpdateArgumentRequiresOperators	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function testConstructorUpdateArgumentRequiresOperators($replacement)$/;"	f
testConstructorUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/FindOneAndUpdateTest.php	/^    public function testConstructorUpdateArgumentTypeCheck($update)$/;"	f
testConstructorUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateManyTest.php	/^    public function testConstructorUpdateArgumentTypeCheck($update)$/;"	f
testConstructorUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateOneTest.php	/^    public function testConstructorUpdateArgumentTypeCheck($update)$/;"	f
testConstructorUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/UpdateTest.php	/^    public function testConstructorUpdateArgumentTypeCheck($update)$/;"	f
testContext	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testContext()$/;"	f
testContextAndExtraOptionallyNotShownIfEmpty	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testContextAndExtraOptionallyNotShownIfEmpty()$/;"	f
testContextAndExtraReplacement	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testContextAndExtraReplacement()$/;"	f
testContextCanContainAnything	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextCanContainAnything()$/;"	f
testContextExceptionKeyCanBeExceptionOrOtherValues	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextExceptionKeyCanBeExceptionOrOtherValues()$/;"	f
testContextReplacement	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testContextReplacement()$/;"	f
testContructorArgumentOrderDiffers	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^    public function testContructorArgumentOrderDiffers()$/;"	f
testConvert	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMaxKeyTest.php	/^    public function testConvert()$/;"	f
testConvert	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoMinKeyTest.php	/^    public function testConvert()$/;"	f
testConvertException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/ExceptionConverterTest.php	/^    public function testConvertException($e, $expectedClass)$/;"	f
testConvertPSR3ToMonologLevel	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testConvertPSR3ToMonologLevel()$/;"	f
testConvertToBson	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^    public function testConvertToBson(\\MongoBinData $bin)$/;"	f
testConvertToBson	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^    public function testConvertToBson(\\MongoCode $code)$/;"	f
testConvertToBson	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testConvertToBson(\\MongoDate $date)$/;"	f
testConvertToBson	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^    public function testConvertToBson(\\MongoRegex $regex)$/;"	f
testConvertToBson	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^    public function testConvertToBson(\\MongoTimestamp $timestamp)$/;"	f
testConvertsInvalidEncodingAsLatin9	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testConvertsInvalidEncodingAsLatin9()$/;"	f
testCount	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCount()$/;"	f
testCount	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCount()$/;"	f
testCountAfterIteration	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCountAfterIteration()$/;"	f
testCountCannotConnect	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCountCannotConnect()$/;"	f
testCountTimeout	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountTimeout()$/;"	f
testCountWithLimit	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithLimit()$/;"	f
testCountWithLimitAndSkip	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithLimitAndSkip()$/;"	f
testCountWithLimitAndSkipLegacy	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithLimitAndSkipLegacy()$/;"	f
testCountWithLimitLegacy	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithLimitLegacy()$/;"	f
testCountWithSkip	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithSkip()$/;"	f
testCountWithSkipLegacy	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCountWithSkipLegacy()$/;"	f
testCrc32Hash	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^    public function testCrc32Hash()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^    public function testCreate()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^    public function testCreate()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testCreate()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testCreate()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^    public function testCreate()$/;"	f
testCreate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^    public function testCreate()$/;"	f
testCreateCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCreateCollection()$/;"	f
testCreateCollection	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    public function testCreateCollection()$/;"	f
testCreateCollectionInvalidParameters	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCreateCollectionInvalidParameters()$/;"	f
testCreateCollectionWithoutOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testCreateCollectionWithoutOptions()$/;"	f
testCreateCompoundIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateCompoundIndex()$/;"	f
testCreateConflictingIndexesWithCommand	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateConflictingIndexesWithCommand()$/;"	f
testCreateConflictingIndexesWithLegacyInsert	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateConflictingIndexesWithLegacyInsert()$/;"	f
testCreateDBRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateDBRef()$/;"	f
testCreateGeospatialIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateGeospatialIndex()$/;"	f
testCreateIndex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndex()$/;"	f
testCreateIndexInvalid	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexInvalid()$/;"	f
testCreateIndexTwice	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexTwice()$/;"	f
testCreateIndexTwiceWithDifferentName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexTwiceWithDifferentName()$/;"	f
testCreateIndexTwiceWithDifferentOrder	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexTwiceWithDifferentOrder()$/;"	f
testCreateIndexTwiceWithSameName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexTwiceWithSameName()$/;"	f
testCreateIndexWithDeprecatedOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexWithDeprecatedOptions()$/;"	f
testCreateIndexWithSameNameAndDifferentOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexWithSameNameAndDifferentOptions()$/;"	f
testCreateIndexes	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateIndexes()$/;"	f
testCreateIndexesWithDifferentOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexesWithDifferentOptions()$/;"	f
testCreateIndexesWithIgnoredOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateIndexesWithIgnoredOptions($option)$/;"	f
testCreateRecord	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testCreateRecord()$/;"	f
testCreateSparseUniqueIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateSparseUniqueIndex()$/;"	f
testCreateTTLIndex	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    public function testCreateTTLIndex()$/;"	f
testCreateThroughMongoDB	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testCreateThroughMongoDB($expected, $document_or_id)$/;"	f
testCreateWithBsonBinary	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoBinDataTest.php	/^    public function testCreateWithBsonBinary()$/;"	f
testCreateWithBsonDate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testCreateWithBsonDate()$/;"	f
testCreateWithBsonObject	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCodeTest.php	/^    public function testCreateWithBsonObject()$/;"	f
testCreateWithBsonTimestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^    public function testCreateWithBsonTimestamp()$/;"	f
testCreateWithBsonType	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoRegexTest.php	/^    public function testCreateWithBsonType()$/;"	f
testCreateWithDatabase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testCreateWithDatabase()$/;"	f
testCreateWithGlobalInc	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^    public function testCreateWithGlobalInc()$/;"	f
testCreateWithInvalidStringThrowsMongoException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public function testCreateWithInvalidStringThrowsMongoException()$/;"	f
testCreateWithObjectId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public function testCreateWithObjectId()$/;"	f
testCreateWithString	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testCreateWithString()$/;"	f
testCreateWithString	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public function testCreateWithString()$/;"	f
testCreateWithTooLongNameV2	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testCreateWithTooLongNameV2()$/;"	f
testCreateWithoutParameter	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public function testCreateWithoutParameter()$/;"	f
testCursorAppliesOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCursorAppliesOptions($checkOptionCallback, \\Closure $applyOptionCallback = null)$/;"	f
testCursorConvertsTypes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCursorConvertsTypes()$/;"	f
testCursorInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCursorInfo()$/;"	f
testCursorInfoWithBatchSize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testCursorInfoWithBatchSize()$/;"	f
testCursorItems	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^    public function testCursorItems()$/;"	f
testCustomCollectionName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testCustomCollectionName()$/;"	f
testCustomDateFormat	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^    public function testCustomDateFormat()$/;"	f
testDebug	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testDebug()$/;"	f
testDebug	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebug()$/;"	f
testDebug	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testDebug()$/;"	f
testDebugContextInMessage	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebugContextInMessage()$/;"	f
testDebugInfo	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^    public function testDebugInfo()$/;"	f
testDebugInfo	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^    public function testDebugInfo()$/;"	f
testDebugInfo	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testDebugInfo()$/;"	f
testDebugTags	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDebugTags($tagsContextKeys = null)$/;"	f
testDecode	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^    public function testDecode($encoded, $decoded)$/;"	f
testDefFormatExtras	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatExtras()$/;"	f
testDefFormatWithArrayContext	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithArrayContext()$/;"	f
testDefFormatWithException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithException()$/;"	f
testDefFormatWithException	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithException()$/;"	f
testDefFormatWithExceptionAndStacktrace	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithExceptionAndStacktrace()$/;"	f
testDefFormatWithObject	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithObject()$/;"	f
testDefFormatWithPreviousException	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithPreviousException()$/;"	f
testDefFormatWithPreviousException	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithPreviousException()$/;"	f
testDefFormatWithString	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testDefFormatWithString()$/;"	f
testDefFormatWithThrowable	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testDefFormatWithThrowable()$/;"	f
testDefaultFormat	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testDefaultFormat()$/;"	f
testDefaultFormat	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testDefaultFormat()$/;"	f
testDefaultFormatter	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testDefaultFormatter()$/;"	f
testDefaultFormatterV1	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testDefaultFormatterV1()$/;"	f
testDelete	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testDelete()$/;"	f
testDelete	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDelete($input, $expectedChunks)$/;"	f
testDeleteIndexUsingField	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDeleteIndexUsingField()$/;"	f
testDeleteIndexUsingIndexName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDeleteIndexUsingIndexName()$/;"	f
testDeleteIndexUsingKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDeleteIndexUsingKeys()$/;"	f
testDeleteIndexes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDeleteIndexes()$/;"	f
testDeleteIndexesForNonExistingCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDeleteIndexesForNonExistingCollection()$/;"	f
testDeleteMany	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^    public function testDeleteMany()$/;"	f
testDeleteMany	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^    public function testDeleteMany()$/;"	f
testDeleteManyCollationOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteManyCollationOptionTypeCheck($collation)$/;"	f
testDeleteManyFilterArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteManyFilterArgumentMissing()$/;"	f
testDeleteManyFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteManyFilterArgumentTypeCheck($document)$/;"	f
testDeleteOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^    public function testDeleteOne()$/;"	f
testDeleteOne	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^    public function testDeleteOne()$/;"	f
testDeleteOneCollationOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteOneCollationOptionTypeCheck($collation)$/;"	f
testDeleteOneFilterArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteOneFilterArgumentMissing()$/;"	f
testDeleteOneFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testDeleteOneFilterArgumentTypeCheck($document)$/;"	f
testDeleteShouldRequireFileToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDeleteShouldRequireFileToExist()$/;"	f
testDeleteStillRemovesChunksIfFileDoesNotExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDeleteStillRemovesChunksIfFileDoesNotExist($input, $expectedChunks)$/;"	f
testDeletes	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testDeletes()$/;"	f
testDetectAndCleanUtf8	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testDetectAndCleanUtf8($in, $expect)$/;"	f
testDisallowFilenameFormatsWithoutDate	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testDisallowFilenameFormatsWithoutDate($filenameFormat, $valid)$/;"	f
testDistinct	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDistinct()$/;"	f
testDistinctWithIdQuery	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDistinctWithIdQuery()$/;"	f
testDistinctWithQuery	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDistinctWithQuery()$/;"	f
testDoubleCloseDoesNotError	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testDoubleCloseDoesNotError()$/;"	f
testDownloadToStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStream($input)$/;"	f
testDownloadToStreamByName	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStreamByName()$/;"	f
testDownloadToStreamByNameShouldRequireDestinationStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStreamByNameShouldRequireDestinationStream($destination)$/;"	f
testDownloadToStreamByNameShouldRequireFilenameAndRevisionToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStreamByNameShouldRequireFilenameAndRevisionToExist($filename, $revision)$/;"	f
testDownloadToStreamShouldRequireDestinationStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStreamShouldRequireDestinationStream($destination)$/;"	f
testDownloadToStreamShouldRequireFileToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadToStreamShouldRequireFileToExist()$/;"	f
testDownloadingFileWithMissingChunk	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadingFileWithMissingChunk()$/;"	f
testDownloadingFileWithUnexpectedChunkIndex	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadingFileWithUnexpectedChunkIndex()$/;"	f
testDownloadingFileWithUnexpectedChunkSize	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDownloadingFileWithUnexpectedChunkSize()$/;"	f
testDrop	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testDrop()$/;"	f
testDrop	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testDrop()$/;"	f
testDrop	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testDrop()$/;"	f
testDrop	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testDrop()$/;"	f
testDrop	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testDrop()$/;"	f
testDrop	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testDrop()$/;"	f
testDropAllIndexesByWildcard	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^    public function testDropAllIndexesByWildcard()$/;"	f
testDropCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testDropCollection()$/;"	f
testDropCollection	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    public function testDropCollection()$/;"	f
testDropDatabase	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    public function testDropDatabase()$/;"	f
testDropExistingCollection	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^    public function testDropExistingCollection()$/;"	f
testDropExistingDatabase	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^    public function testDropExistingDatabase()$/;"	f
testDropIndexShouldNotAllowEmptyIndexName	vendor/mongodb/mongodb/tests/Operation/DropIndexesTest.php	/^    public function testDropIndexShouldNotAllowEmptyIndexName()$/;"	f
testDropIndexShouldNotAllowWildcardCharacter	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testDropIndexShouldNotAllowWildcardCharacter()$/;"	f
testDropNonexistentCollection	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^    public function testDropNonexistentCollection()$/;"	f
testDropNonexistentDatabase	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^    public function testDropNonexistentDatabase()$/;"	f
testDropOneIndexByName	vendor/mongodb/mongodb/tests/Operation/DropIndexesFunctionalTest.php	/^    public function testDropOneIndexByName()$/;"	f
testDumperOptions	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testDumperOptions($option, $dumperProperty, $value)$/;"	f
testEmptyCollectionName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testEmptyCollectionName()$/;"	f
testEmptyDatabaseName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testEmptyDatabaseName()$/;"	f
testEncode	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/FunctionsTest.php	/^    public function testEncode($encoded, $decoded)$/;"	f
testEnsureIndex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testEnsureIndex()$/;"	f
testEnsureIndexAlreadyExists	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testEnsureIndexAlreadyExists()$/;"	f
testEnsureIndexAlreadyExistsWithDifferentOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testEnsureIndexAlreadyExistsWithDifferentOptions()$/;"	f
testError	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testError($classesPartialsTraceIgnore = null)$/;"	f
testErrorLevelActivationStrategy	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testErrorLevelActivationStrategy()$/;"	f
testErrorLevelActivationStrategyWithPsrLevel	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testErrorLevelActivationStrategyWithPsrLevel()$/;"	f
testEscaping	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testEscaping()$/;"	f
testException	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testException()$/;"	f
testException	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testException()$/;"	f
testExceptionIsThrownIfCannotSetTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownIfCannotSetTimeout()$/;"	f
testExceptionIsThrownOnFsockopenError	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownOnFsockopenError()$/;"	f
testExceptionIsThrownOnPfsockopenError	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testExceptionIsThrownOnPfsockopenError()$/;"	f
testExceptionLogLevel	vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php	/^    public function testExceptionLogLevel()$/;"	f
testExceptionTraceWithArgs	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testExceptionTraceWithArgs()$/;"	f
testExcludeExtraAndContextFields	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testExcludeExtraAndContextFields()$/;"	f
testExecute	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testExecute()$/;"	f
testExplain	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testExplain()$/;"	f
testExtraParameters	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testExtraParameters()$/;"	f
testFailsOnNonExistantLogger	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testFailsOnNonExistantLogger()$/;"	f
testFailsOnUnspecifiedReplacement	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testFailsOnUnspecifiedReplacement()$/;"	f
testFallbackPrecedenceWhenServerRemoved	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testFallbackPrecedenceWhenServerRemoved()$/;"	f
testFatalHandler	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testFatalHandler($/;"	f
testFileProperty	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testFileProperty()$/;"	f
testFind	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testFind()$/;"	f
testFindAndModifyExceptionTimeout	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyExceptionTimeout()$/;"	f
testFindAndModifyRemove	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyRemove()$/;"	f
testFindAndModifyResultException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyResultException()$/;"	f
testFindAndModifyUpdate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyUpdate()$/;"	f
testFindAndModifyUpdateReplace	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyUpdateReplace()$/;"	f
testFindAndModifyUpdateReturnNew	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyUpdateReturnNew()$/;"	f
testFindAndModifyUpdateWithUpdateOptions	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyUpdateWithUpdateOptions()$/;"	f
testFindAndModifyWithFields	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyWithFields()$/;"	f
testFindAndModifyWithUpdateParamAndOption	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindAndModifyWithUpdateParamAndOption()$/;"	f
testFindOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindOne()$/;"	f
testFindOne	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testFindOne()$/;"	f
testFindOne	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testFindOne()$/;"	f
testFindOneConnectionIssue	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindOneConnectionIssue()$/;"	f
testFindOneNotFound	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindOneNotFound()$/;"	f
testFindOneNotFoundReturnsNull	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testFindOneNotFoundReturnsNull()$/;"	f
testFindOneReturnsFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testFindOneReturnsFile()$/;"	f
testFindOneWithFilenameReturnsFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testFindOneWithFilenameReturnsFile()$/;"	f
testFindOneWithLegacyProjection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindOneWithLegacyProjection()$/;"	f
testFindOneWithLegacyProjectionReturnsFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testFindOneWithLegacyProjectionReturnsFile()$/;"	f
testFindOneWithProjection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindOneWithProjection()$/;"	f
testFindReturnsCursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindReturnsCursor()$/;"	f
testFindReturnsGridFSCursor	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testFindReturnsGridFSCursor()$/;"	f
testFindUsesTypeMap	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testFindUsesTypeMap()$/;"	f
testFindWithProjection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindWithProjection($projection)$/;"	f
testFindWithProjectionAndNumericKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindWithProjectionAndNumericKeys($data, $projection, $expected)$/;"	f
testFindWithProjectionAndSequentialNumericKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindWithProjectionAndSequentialNumericKeys()$/;"	f
testFindWithProjectionExcludeId	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindWithProjectionExcludeId($projection)$/;"	f
testFindWithRegex	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testFindWithRegex($regex)$/;"	f
testFingerprint	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testFingerprint()$/;"	f
testFlush	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testFlush()$/;"	f
testFlushPassthruIfAllRecordsUnderTrigger	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfAllRecordsUnderTrigger()$/;"	f
testFlushPassthruIfEmptyLog	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfEmptyLog()$/;"	f
testFlushPassthruIfLogTooOld	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushPassthruIfLogTooOld()$/;"	f
testFlushSkipsIfLogExists	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testFlushSkipsIfLogExists()$/;"	f
testForceError	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testForceError()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/LogmaticFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormat()$/;"	f
testFormat	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormat()$/;"	f
testFormatBatch	vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php	/^    public function testFormatBatch()$/;"	f
testFormatBatch	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormatBatch()$/;"	f
testFormatBatchNewlines	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^    public function testFormatBatchNewlines()$/;"	f
testFormatDepthArray	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthArray()$/;"	f
testFormatDepthArrayInfiniteNesting	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthArrayInfiniteNesting()$/;"	f
testFormatDepthException	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthException()$/;"	f
testFormatDepthObjects	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testFormatDepthObjects()$/;"	f
testFormatExceptions	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatExceptions()$/;"	f
testFormatExtras	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatExtras()$/;"	f
testFormatInvalidFails	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatInvalidFails()$/;"	f
testFormatShouldNotStripInlineLineBreaksWhenFlagIsSet	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatShouldNotStripInlineLineBreaksWhenFlagIsSet()$/;"	f
testFormatShouldStripInlineLineBreaks	vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php	/^    public function testFormatShouldStripInlineLineBreaks()$/;"	f
testFormatSoapFaultException	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatSoapFaultException()$/;"	f
testFormatToStringExceptionHandle	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testFormatToStringExceptionHandle()$/;"	f
testFormatWithApplicationNameV1	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithApplicationNameV1()$/;"	f
testFormatWithContext	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithContext()$/;"	f
testFormatWithContextContainingException	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithContextContainingException()$/;"	f
testFormatWithContextV1	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithContextV1()$/;"	f
testFormatWithErrorContext	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormatWithErrorContext()$/;"	f
testFormatWithExceptionContext	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^    public function testFormatWithExceptionContext()$/;"	f
testFormatWithExtra	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithExtra()$/;"	f
testFormatWithExtraV1	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithExtraV1()$/;"	f
testFormatWithFileAndLine	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLine	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLine	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testFormatWithFileAndLine()$/;"	f
testFormatWithFileAndLineV1	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithFileAndLineV1()$/;"	f
testFormatWithLargeData	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithLargeData()$/;"	f
testFormatWithLatin9Data	vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php	/^    public function testFormatWithLatin9Data()$/;"	f
testFormatWithTag	vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php	/^    public function testFormatWithTag()$/;"	f
testFormatWithUnlimitedLength	vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php	/^    public function testFormatWithUnlimitedLength()$/;"	f
testFormatWithoutContext	vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php	/^    public function testFormatWithoutContext()$/;"	f
testFormatWithoutContext	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testFormatWithoutContext()$/;"	f
testFromLegacy	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^    public function testFromLegacy($legacyValue, $modernValue)$/;"	f
testGcOldLogs	vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php	/^    public function testGcOldLogs()$/;"	f
testGenerateIndexName	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testGenerateIndexName($document, $expectedName)$/;"	f
testGenerateIndexNameArgumentTypeCheck	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testGenerateIndexNameArgumentTypeCheck($document)$/;"	f
testGet	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testGet()$/;"	f
testGetAllTargetsEmpty	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetAllTargetsEmpty()$/;"	f
testGetAttachmentColor	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testGetAttachmentColor($logLevel, $expectedColour)$/;"	f
testGetBucketNameWithCustomValue	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetBucketNameWithCustomValue()$/;"	f
testGetBucketNameWithDefaultValue	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetBucketNameWithDefaultValue()$/;"	f
testGetBytes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testGetBytes()$/;"	f
testGetCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testGetCollection()$/;"	f
testGetCollection	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollection()$/;"	f
testGetCollectionInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionInfo()$/;"	f
testGetCollectionInfoExecutionTimeoutException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionInfoExecutionTimeoutException()$/;"	f
testGetCollectionNames	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionNames()$/;"	f
testGetCollectionNamesDoesNotListSystemCollections	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionNamesDoesNotListSystemCollections()$/;"	f
testGetCollectionNamesExecutionTimeoutException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionNamesExecutionTimeoutException()$/;"	f
testGetCollectionNamesWithSystemCollections	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionNamesWithSystemCollections()$/;"	f
testGetCollectionProperty	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testGetCollectionProperty()$/;"	f
testGetDBRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testGetDBRef()$/;"	f
testGetDatabaseName	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetDatabaseName()$/;"	f
testGetDb	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testGetDb()$/;"	f
testGetDbProperty	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testGetDbProperty()$/;"	f
testGetDefaultFormatterReturnsNormalizerFormatter	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function testGetDefaultFormatterReturnsNormalizerFormatter()$/;"	f
testGetFileDocumentForStreamShouldRequireGridFSStreamResource	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileDocumentForStreamShouldRequireGridFSStreamResource($stream)$/;"	f
testGetFileDocumentForStreamUsesTypeMap	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileDocumentForStreamUsesTypeMap()$/;"	f
testGetFileDocumentForStreamWithReadableStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileDocumentForStreamWithReadableStream()$/;"	f
testGetFileDocumentForStreamWithWritableStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileDocumentForStreamWithWritableStream()$/;"	f
testGetFileIdForStreamShouldRequireGridFSStreamResource	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileIdForStreamShouldRequireGridFSStreamResource($stream)$/;"	f
testGetFileIdForStreamUsesTypeMap	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileIdForStreamUsesTypeMap()$/;"	f
testGetFileIdForStreamWithReadableStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileIdForStreamWithReadableStream()$/;"	f
testGetFileIdForStreamWithWritableStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testGetFileIdForStreamWithWritableStream()$/;"	f
testGetFilename	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testGetFilename()$/;"	f
testGetFormatter	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testGetFormatter()$/;"	f
testGetFormatter	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testGetFormatter()$/;"	f
testGetFormatterInitializesDefault	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testGetFormatterInitializesDefault()$/;"	f
testGetHosts	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testGetHosts()$/;"	f
testGetIndexInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testGetIndexInfo($expectedIndex, $fields, $options)$/;"	f
testGetLevelName	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetLevelName()$/;"	f
testGetLevelNameThrows	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetLevelNameThrows()$/;"	f
testGetManager	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    public function testGetManager()$/;"	f
testGetManager	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testGetManager()$/;"	f
testGetManager	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testGetManager()$/;"	f
testGetMoreTargetsThanExist	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMoreTargetsThanExist()$/;"	f
testGetMultipleTargets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMultipleTargets()$/;"	f
testGetMultipleTargetsNeedingToLoopToStart	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMultipleTargetsNeedingToLoopToStart()$/;"	f
testGetMultipleTargetsWithOnlyOneTarget	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMultipleTargetsWithOnlyOneTarget()$/;"	f
testGetMultipleTargetsWithoutGettingAnyBeforeLoopToStart	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMultipleTargetsWithoutGettingAnyBeforeLoopToStart()$/;"	f
testGetMultipleTargetsWithoutNeedingToLoopToStart	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testGetMultipleTargetsWithoutNeedingToLoopToStart()$/;"	f
testGetName	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^    public function testGetName()$/;"	f
testGetName	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^    public function testGetName()$/;"	f
testGetName	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testGetName()$/;"	f
testGetNamespace	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testGetNamespace()$/;"	f
testGetNestedCollections	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testGetNestedCollections()$/;"	f
testGetOptions	vendor/mongodb/mongodb/tests/Model/CollectionInfoTest.php	/^    public function testGetOptions()$/;"	f
testGetResource	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testGetResource()$/;"	f
testGetSelectsCollectionAndInheritsOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testGetSelectsCollectionAndInheritsOptions()$/;"	f
testGetSelectsDatabaseAndInheritsOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testGetSelectsDatabaseAndInheritsOptions()$/;"	f
testGetSetBatchFormatter	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testGetSetBatchFormatter()$/;"	f
testGetSize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testGetSize()$/;"	f
testGetSizeOnDisk	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^    public function testGetSizeOnDisk()$/;"	f
testGetThroughMongoDB	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testGetThroughMongoDB()$/;"	f
testGetUid	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^    public function testGetUid()$/;"	f
testGetWithDifferentDatabase	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testGetWithDifferentDatabase()$/;"	f
testGetWithInvalidRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testGetWithInvalidRef()$/;"	f
testGetWithNonExistingDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testGetWithNonExistingDocument()$/;"	f
testGetsSameLogger	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testGetsSameLogger()$/;"	f
testGetters	vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php	/^    public function testGetters()$/;"	f
testGroup	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testGroup()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testHandle($result)$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/NoopHandlerTest.php	/^    public function testHandle($level)$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^    public function testHandle()$/;"	f
testHandle	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandle()$/;"	f
testHandleAmqpExt	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^    public function testHandleAmqpExt()$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testHandleBatch($result)$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testHandleBatch($records, $expectedColor)$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatch	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleBatch()$/;"	f
testHandleBatchDoNothingIfRecordsAreBelowLevel	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatchDoNothingIfRecordsAreBelowLevel()$/;"	f
testHandleBatchNotSendsMailIfMessagesAreBelowLevel	vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php	/^    public function testHandleBatchNotSendsMailIfMessagesAreBelowLevel()$/;"	f
testHandleBatchPicksProperMessage	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testHandleBatchPicksProperMessage()$/;"	f
testHandleBatchUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleBatchUsesProcessors()$/;"	f
testHandleBubbling	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleBubbling()$/;"	f
testHandleBufferLimit	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBufferLimit()$/;"	f
testHandleBufferLimit	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleBufferLimit()$/;"	f
testHandleBufferLimitWithFlushOnOverflow	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBufferLimitWithFlushOnOverflow()$/;"	f
testHandleBuffers	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleBuffers()$/;"	f
testHandleBuffers	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleBuffers()$/;"	f
testHandleError	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testHandleError()$/;"	f
testHandleException	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testHandleException()$/;"	f
testHandleException	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleException()$/;"	f
testHandleIntegration	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testHandleIntegration()$/;"	f
testHandleIsFalseWhenNotHandled	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleIsFalseWhenNotHandled()$/;"	f
testHandleJsonErrorFailure	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testHandleJsonErrorFailure($code, $msg)$/;"	f
testHandleLevel	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleLevel()$/;"	f
testHandleLowerLevelMessage	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleLowerLevelMessage()$/;"	f
testHandleLowerLevelRecord	vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php	/^    public function testHandleLowerLevelRecord()$/;"	f
testHandleNotBubbling	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testHandleNotBubbling()$/;"	f
testHandlePhpAmqpLib	vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php	/^    public function testHandlePhpAmqpLib()$/;"	f
testHandleProcessOnlyNeededLevels	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleProcessOnlyNeededLevels()$/;"	f
testHandleRespectsBubble	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleRespectsBubble()$/;"	f
testHandleRestartBufferingAfterBeingTriggeredWhenStopBufferingIsDisabled	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleRestartBufferingAfterBeingTriggeredWhenStopBufferingIsDisabled()$/;"	f
testHandleRestartBufferingAfterReset	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleRestartBufferingAfterReset()$/;"	f
testHandleStopsBufferingAfterTrigger	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleStopsBufferingAfterTrigger()$/;"	f
testHandleUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleUsesProcessors	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testHandleUsesProcessors()$/;"	f
testHandleWithBadCallbackThrowsException	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleWithBadCallbackThrowsException()$/;"	f
testHandleWithBadCallbackThrowsException	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleWithBadCallbackThrowsException()$/;"	f
testHandleWithCallback	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testHandleWithCallback()$/;"	f
testHandleWithCallback	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testHandleWithCallback()$/;"	f
testHandleWithDriverManager	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    public function testHandleWithDriverManager()$/;"	f
testHandleWithLibraryClient	vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php	/^    public function testHandleWithLibraryClient()$/;"	f
testHandler	vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php	/^        $testHandler = new TestHandler();$/;"	v
testHandler	vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php	/^    public function testHandler($method, $level)$/;"	f
testHandlerUsesLineFormatterWhichIgnoresEmptyArrays	vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php	/^    public function testHandlerUsesLineFormatterWhichIgnoresEmptyArrays()$/;"	f
testHandlers	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $testHandlers = [new TestHandler(), new TestHandler()];$/;"	v
testHandlers	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^        $testHandlers = [new TestHandler(Logger::ERROR), new TestHandler(Logger::WARNING)];$/;"	v
testHandlers	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $testHandlers = [new TestHandler(), new TestHandler()];$/;"	v
testHandlers	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^        $testHandlers = [new TestHandler(Logger::ERROR), new TestHandler(Logger::WARNING)];$/;"	v
testHandlersInCtor	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersInCtor()$/;"	f
testHandlersNotCalledBeforeFirstHandling	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersNotCalledBeforeFirstHandling()$/;"	f
testHandlersNotCalledBeforeFirstHandlingWithAssocArray	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testHandlersNotCalledBeforeFirstHandlingWithAssocArray()$/;"	f
testHandlesAllLevels	vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php	/^    public function testHandlesAllLevels($levelName, $level)$/;"	f
testHandlesPsrStyleLevels	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testHandlesPsrStyleLevels()$/;"	f
testHasLogger	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testHasLogger(array $loggersToAdd, array $loggersToCheck, array $expectedResult)$/;"	f
testHasNextLoop	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testHasNextLoop()$/;"	f
testHashDistributionWithCrc32Hasher	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testHashDistributionWithCrc32Hasher()$/;"	f
testHashSpaceConsistentLookupsAfterAddingAndRemoving	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceConsistentLookupsAfterAddingAndRemoving()$/;"	f
testHashSpaceConsistentLookupsWithNewInstance	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceConsistentLookupsWithNewInstance()$/;"	f
testHashSpaceLookupListEmpty	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceLookupListEmpty()$/;"	f
testHashSpaceLookupListNo	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceLookupListNo()$/;"	f
testHashSpaceLookupListNoTargets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceLookupListNoTargets()$/;"	f
testHashSpaceLookupsAreValidTargets	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceLookupsAreValidTargets()$/;"	f
testHashSpaceRepeatableLookups	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceRepeatableLookups()$/;"	f
testHashSpaceToString	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testHashSpaceToString()$/;"	f
testHasherSpeed	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testHasherSpeed()$/;"	f
testHeaders	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testHeaders($agent)$/;"	f
testHeaders	vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php	/^    public function testHeaders()$/;"	f
testHeadersOverflow	vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php	/^    public function testHeadersOverflow()$/;"	f
testHopeAddingTargetDoesNotChangeMuchWithCrc32Hasher	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testHopeAddingTargetDoesNotChangeMuchWithCrc32Hasher()$/;"	f
testHopeRemovingTargetDoesNotChangeMuchWithCrc32Hasher	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testHopeRemovingTargetDoesNotChangeMuchWithCrc32Hasher()$/;"	f
testIgnoresInvalidTypes	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testIgnoresInvalidTypes()$/;"	f
testIgnoresRecursiveObjectReferences	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testIgnoresRecursiveObjectReferences()$/;"	f
testImplements	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testImplements()$/;"	f
testImplementsArrayAccess	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testImplementsArrayAccess()$/;"	f
testIndexesCreation	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testIndexesCreation()$/;"	f
testInfo	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^    public function testInfo()$/;"	f
testInitWithCustomConnector	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testInitWithCustomConnector()$/;"	f
testInitWithDefaultConnector	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testInitWithDefaultConnector()$/;"	f
testInjectedGelfMessageFormatter	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testInjectedGelfMessageFormatter()$/;"	f
testInsertArrayWithNumericKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertArrayWithNumericKeys()$/;"	f
testInsertBatch	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^    public function testInsertBatch()$/;"	f
testInsertBatchError	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^    public function testInsertBatchError()$/;"	f
testInsertDuplicate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertDuplicate()$/;"	f
testInsertEmptyArray	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertEmptyArray()$/;"	f
testInsertEmptyObject	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertEmptyObject()$/;"	f
testInsertInvalidData	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertInvalidData()$/;"	f
testInsertMany	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertMany()$/;"	f
testInsertMany	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^    public function testInsertMany()$/;"	f
testInsertManyWithNonNumericKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertManyWithNonNumericKeys()$/;"	f
testInsertObjectWithPrivateProperties	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertObjectWithPrivateProperties()$/;"	f
testInsertOneDocumentArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testInsertOneDocumentArgumentMissing()$/;"	f
testInsertOneDocumentArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testInsertOneDocumentArgumentTypeCheck($document)$/;"	f
testInsertOneWithExistingId	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function testInsertOneWithExistingId($document)$/;"	f
testInsertOneWithGeneratedId	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function testInsertOneWithGeneratedId()$/;"	f
testInsertWithEmptyKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertWithEmptyKey()$/;"	f
testInsertWithInvalidKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertWithInvalidKey()$/;"	f
testInsertWithNumericKey	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertWithNumericKey()$/;"	f
testInsertWriteConcernException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testInsertWriteConcernException()$/;"	f
testInserts	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testInserts()$/;"	f
testInterface	vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php	/^    public function testInterface()$/;"	f
testInvalidData	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testInvalidData()$/;"	f
testInvalidDatabaseName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testInvalidDatabaseName()$/;"	f
testInvalidHostname	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testInvalidHostname()$/;"	f
testIsEmpty	vendor/mongodb/mongodb/tests/Model/DatabaseInfoTest.php	/^    public function testIsEmpty()$/;"	f
testIsFirstKeyOperator	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testIsFirstKeyOperator($document, $isFirstKeyOperator)$/;"	f
testIsFirstKeyOperatorArgumentTypeCheck	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testIsFirstKeyOperatorArgumentTypeCheck($document)$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function testIsHandling($result)$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/NoopHandlerTest.php	/^    public function testIsHandling($level)$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandling	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testIsHandling()$/;"	f
testIsHandlingAlways	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testIsHandlingAlways()$/;"	f
testIsNumericArray	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TypeConverterTest.php	/^    public function testIsNumericArray($expected, $array)$/;"	f
testIsRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^    public function testIsRef($expected, $ref)$/;"	f
testIsValid	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^    public function testIsValid($expected, $value)$/;"	f
testIteratorInterface	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testIteratorInterface()$/;"	f
testJsonSerialize	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^    public function testJsonSerialize()$/;"	f
testJsonSerialize	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^    public function testJsonSerialize()$/;"	f
testJsonSerializeCastsToObject	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^    public function testJsonSerializeCastsToObject()$/;"	f
testJsonSerializeReindexesKeys	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^    public function testJsonSerializeReindexesKeys()$/;"	f
testLevel	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoLogTest.php	/^    public function testLevel()$/;"	f
testLevelEqual	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelEqual()$/;"	f
testLevelHigher	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelHigher()$/;"	f
testLevelTooLow	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testLevelTooLow()$/;"	f
testListCollections	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testListCollections()$/;"	f
testListCollections	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    public function testListCollections()$/;"	f
testListCollectionsExecutionTimeoutException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testListCollectionsExecutionTimeoutException()$/;"	f
testListCollectionsForNewlyCreatedDatabase	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^    public function testListCollectionsForNewlyCreatedDatabase()$/;"	f
testListCollectionsForNonexistentDatabase	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^    public function testListCollectionsForNonexistentDatabase()$/;"	f
testListCollectionsWithFilter	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^    public function testListCollectionsWithFilter()$/;"	f
testListDBs	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testListDBs()$/;"	f
testListDatabases	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^    public function testListDatabases()$/;"	f
testListIndexesForNewlyCreatedCollection	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^    public function testListIndexesForNewlyCreatedCollection()$/;"	f
testListIndexesForNonexistentCollection	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^    public function testListIndexesForNonexistentCollection()$/;"	f
testLog	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLog()$/;"	f
testLogMethods	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLogMethods($method, $expectedLevel)$/;"	f
testLogNotHandled	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testLogNotHandled()$/;"	f
testLogger	vendor/monolog/monolog/src/Monolog/Registry.php	/^ * function testLogger()$/;"	f
testLogsAtAllLevels	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testLogsAtAllLevels($level, $message)$/;"	f
testLongMessagesAreTruncated	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testLongMessagesAreTruncated()$/;"	f
testMapReduce	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testMapReduce()$/;"	f
testMapsLevelToColorAttachmentColor	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testMapsLevelToColorAttachmentColor()$/;"	f
testMd5Hash	vendor/flexihash/flexihash/tests/Hasher/HasherTest.php	/^    public function testMd5Hash()$/;"	f
testMessageCanBeCustomizedGivenLoggedData	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageCanBeCustomizedGivenLoggedData()$/;"	f
testMessageCreationIsLazyWhenUsingCallback	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageCreationIsLazyWhenUsingCallback()$/;"	f
testMessageHaveUniqueId	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageHaveUniqueId()$/;"	f
testMessageSubjectFormatting	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testMessageSubjectFormatting()$/;"	f
testMessageSubjectFormatting	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^    public function testMessageSubjectFormatting()$/;"	f
testMethodsAreOrderedAlphabeticallyByVisibility	vendor/mongodb/mongodb/tests/PedantryTest.php	/^    public function testMethodsAreOrderedAlphabeticallyByVisibility($className)$/;"	f
testMissingArguments	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testMissingArguments(array $ops)$/;"	f
testMixedOrderedOperations	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testMixedOrderedOperations()$/;"	f
testModule	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoLogTest.php	/^    public function testModule()$/;"	f
testMultipleOperationsInOneElement	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testMultipleOperationsInOneElement()$/;"	f
testNameGeneration	vendor/mongodb/mongodb/tests/Model/IndexInputTest.php	/^    public function testNameGeneration($expectedName, array $key)$/;"	f
testNextStartsWithFirstItem	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testNextStartsWithFirstItem()$/;"	f
testNoIcon	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testNoIcon()$/;"	f
testNoPrefixUri	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testNoPrefixUri()$/;"	f
testNoUsernameByDefault	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testNoUsernameByDefault()$/;"	f
testNormalizeHandleLargeArrays	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testNormalizeHandleLargeArrays()$/;"	f
testNotBubblingWhenTheHandlerReturnsTrue	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testNotBubblingWhenTheHandlerReturnsTrue()$/;"	f
testObjectCastToString	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testObjectCastToString()$/;"	f
testOffsetSetCannotBeCalled	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testOffsetSetCannotBeCalled()$/;"	f
testOffsetUnsetCannotBeCalled	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testOffsetUnsetCannotBeCalled()$/;"	f
testOpenDownloadStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStream($input)$/;"	f
testOpenDownloadStreamAndMultipleReadOperations	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStreamAndMultipleReadOperations($input)$/;"	f
testOpenDownloadStreamByName	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStreamByName()$/;"	f
testOpenDownloadStreamByNameShouldRequireFilenameAndRevisionToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStreamByNameShouldRequireFilenameAndRevisionToExist($filename, $revision)$/;"	f
testOpenDownloadStreamByNameShouldRequireFilenameToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStreamByNameShouldRequireFilenameToExist()$/;"	f
testOpenDownloadStreamShouldRequireFileToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenDownloadStreamShouldRequireFileToExist()$/;"	f
testOpenUploadStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenUploadStream()$/;"	f
testOpenUploadStreamAndMultipleWriteOperations	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testOpenUploadStreamAndMultipleWriteOperations($input)$/;"	f
testOperationsMustBeAList	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testOperationsMustBeAList()$/;"	f
testOperationsMustNotBeEmpty	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testOperationsMustNotBeEmpty()$/;"	f
testOptionCallsConnectorMethod	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionCallsConnectorMethod($option, $method, $value, $isArgument = true)$/;"	f
testOptionClassesPartialsTraceIgnore	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionClassesPartialsTraceIgnore()$/;"	f
testOptionDebugTagsKeysInContext	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionDebugTagsKeysInContext()$/;"	f
testOptionDetectDumpTraceAndSource	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionDetectDumpTraceAndSource()$/;"	f
testOptionEnabled	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionEnabled()$/;"	f
testOptionUseOwnErrorsAndExceptionsHandler	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testOptionUseOwnErrorsAndExceptionsHandler()$/;"	f
testOptions	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testOptions()$/;"	f
testOverrideActivationStrategy	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testOverrideActivationStrategy()$/;"	f
testPassthruOnClose	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testPassthruOnClose()$/;"	f
testPredisHandle	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testPredisHandle()$/;"	f
testPredisHandleCapped	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testPredisHandleCapped()$/;"	f
testProcessRecord	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testProcessRecord()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessor	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessor()$/;"	f
testProcessorAddsOnlyRequestedExtraFields	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorAddsOnlyRequestedExtraFields()$/;"	f
testProcessorConfiguringOfExtraFields	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorConfiguringOfExtraFields()$/;"	f
testProcessorDoNothingIfNoRequestUri	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorDoNothingIfNoRequestUri()$/;"	f
testProcessorDoesNotAddUniqueIdIfNotPresent	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorDoesNotAddUniqueIdIfNotPresent()$/;"	f
testProcessorFromClass	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testProcessorFromClass()$/;"	f
testProcessorFromFunc	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^    public function testProcessorFromFunc()$/;"	f
testProcessorReturnNullIfNoHttpReferer	vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php	/^    public function testProcessorReturnNullIfNoHttpReferer()$/;"	f
testProcessorTagModification	vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php	/^    public function testProcessorTagModification()$/;"	f
testProcessorWithoutFormatting	vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php	/^    public function testProcessorWithoutFormatting()$/;"	f
testProcessorWithoutFormatting	vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php	/^    public function testProcessorWithoutFormatting()$/;"	f
testProcessorsAreCalledOnlyOnce	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsAreCalledOnlyOnce()$/;"	f
testProcessorsAreExecuted	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsAreExecuted()$/;"	f
testProcessorsInCtor	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsInCtor()$/;"	f
testProcessorsNotCalledWhenNotHandled	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testProcessorsNotCalledWhenNotHandled()$/;"	f
testProfilingLevel	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testProfilingLevel()$/;"	f
testProjectionWithBSONTypes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testProjectionWithBSONTypes()$/;"	f
testPropagatesRecordsAtEndOfRequest	vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php	/^    public function testPropagatesRecordsAtEndOfRequest()$/;"	f
testPsrLevelPassthruOnClose	vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php	/^    public function testPsrLevelPassthruOnClose()$/;"	f
testPushPopHandler	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testPushPopHandler()$/;"	f
testPushPopProcessor	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testPushPopProcessor()$/;"	f
testPushPopProcessor	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testPushPopProcessor()$/;"	f
testPushProcessorWithNonCallable	vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php	/^    public function testPushProcessorWithNonCallable()$/;"	f
testPut	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testPut()$/;"	f
testReadBytes	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytes($fileId, $length, $expectedBytes)$/;"	f
testReadBytesCalledMultipleTimes	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytesCalledMultipleTimes($fileId, $length, $expectedBytes)$/;"	f
testReadBytesWithMissingChunk	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytesWithMissingChunk()$/;"	f
testReadBytesWithNegativeLength	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytesWithNegativeLength()$/;"	f
testReadBytesWithUnexpectedChunkIndex	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytesWithUnexpectedChunkIndex()$/;"	f
testReadBytesWithUnexpectedChunkSize	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testReadBytesWithUnexpectedChunkSize()$/;"	f
testReadConcernAsDocument	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testReadConcernAsDocument(ReadConcern $readConcern, $expectedDocument)$/;"	f
testReadPreference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testReadPreference()$/;"	f
testReadPreference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testReadPreference()$/;"	f
testReadPreference	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testReadPreference()$/;"	f
testReadPreferenceIsInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testReadPreferenceIsInherited()$/;"	f
testReadPreferenceIsInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testReadPreferenceIsInherited()$/;"	f
testReadPreferenceIsInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testReadPreferenceIsInherited()$/;"	f
testReadPreferenceIsSetInDriver	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testReadPreferenceIsSetInDriver()$/;"	f
testReadPreferenceIsSetInDriver	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testReadPreferenceIsSetInDriver()$/;"	f
testReadPreferenceOptionsAreInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testReadPreferenceOptionsAreInherited($options, $uri, $expectedTagsets)$/;"	f
testReadableStreamClose	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testReadableStreamClose()$/;"	f
testReadableStreamEof	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testReadableStreamEof()$/;"	f
testReadableStreamRead	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testReadableStreamRead()$/;"	f
testReadableStreamStat	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testReadableStreamStat()$/;"	f
testReadableStreamWrite	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testReadableStreamWrite()$/;"	f
testRecursiveFormat	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testRecursiveFormat()$/;"	f
testRedisHandle	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testRedisHandle()$/;"	f
testRedisHandleCapped	vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php	/^    public function testRedisHandleCapped()$/;"	f
testRegister	vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php	/^    public function testRegister()$/;"	f
testRelease	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testRelease()$/;"	f
testRemove	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testRemove()$/;"	f
testRemoveMultiple	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testRemoveMultiple()$/;"	f
testRemoveOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testRemoveOne()$/;"	f
testRemoveSingle	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testRemoveSingle()$/;"	f
testRemoveTarget	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testRemoveTarget()$/;"	f
testRemoveTargetFailsOnMissingTarget	vendor/flexihash/flexihash/tests/FlexihashTest.php	/^    public function testRemoveTargetFailsOnMissingTarget()$/;"	f
testRemoveTargetWithNonConsistentHash	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^    public function testRemoveTargetWithNonConsistentHash()$/;"	f
testRemoveUnacknowledged	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testRemoveUnacknowledged()$/;"	f
testRemovesLogger	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testRemovesLogger($loggerToAdd, $remove)$/;"	f
testRename	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testRename()$/;"	f
testRenameShouldNotRequireFileToBeModified	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testRenameShouldNotRequireFileToBeModified()$/;"	f
testRenameShouldRequireFileToExist	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testRenameShouldRequireFileToExist()$/;"	f
testRepair	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testRepair()$/;"	f
testReplaceOneCollationOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneCollationOptionTypeCheck($collation)$/;"	f
testReplaceOneFilterArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneFilterArgumentMissing()$/;"	f
testReplaceOneFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneFilterArgumentTypeCheck($filter)$/;"	f
testReplaceOneReplacementArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneReplacementArgumentMissing()$/;"	f
testReplaceOneReplacementArgumentRequiresNoOperators	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneReplacementArgumentRequiresNoOperators()$/;"	f
testReplaceOneReplacementArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneReplacementArgumentTypeCheck($replacement)$/;"	f
testReplaceOneRequiresReplacementDocument	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testReplaceOneRequiresReplacementDocument()$/;"	f
testReplaceOneUpsertOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testReplaceOneUpsertOptionTypeCheck($upsert)$/;"	f
testReplacement	vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php	/^    public function testReplacement($val, $expected)$/;"	f
testReplacesLogger	vendor/monolog/monolog/tests/Monolog/RegistryTest.php	/^    public function testReplacesLogger()$/;"	f
testReuseCurrentFile	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testReuseCurrentFile()$/;"	f
testRoomSpaces	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testRoomSpaces()$/;"	f
testRotation	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testRotation($createFile, $dateFormat, $timeCallback)$/;"	f
testRotationCreatesNewFile	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^    public function testRotationCreatesNewFile()$/;"	f
testSaveDuplicate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSaveDuplicate()$/;"	f
testSaveEmptyKeys	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSaveEmptyKeys()$/;"	f
testSaveEmptyObject	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSaveEmptyObject()$/;"	f
testSaveInsert	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSaveInsert()$/;"	f
testSaveUpdate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSaveUpdate()$/;"	f
testSavingShouldReplaceTheWholeDocument	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSavingShouldReplaceTheWholeDocument() {$/;"	f
testSelectCollectionEmptyName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testSelectCollectionEmptyName()$/;"	f
testSelectCollectionInheritsOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testSelectCollectionInheritsOptions()$/;"	f
testSelectCollectionInheritsOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testSelectCollectionInheritsOptions()$/;"	f
testSelectCollectionPassesOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testSelectCollectionPassesOptions()$/;"	f
testSelectCollectionPassesOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testSelectCollectionPassesOptions()$/;"	f
testSelectCollectionWithDatabaseObject	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSelectCollectionWithDatabaseObject()$/;"	f
testSelectCollectionWithNullBytes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSelectCollectionWithNullBytes()$/;"	f
testSelectCollectionWithNullBytes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testSelectCollectionWithNullBytes()$/;"	f
testSelectDBWithEmptyName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testSelectDBWithEmptyName()$/;"	f
testSelectDBWithInvalidName	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testSelectDBWithInvalidName()$/;"	f
testSelectDatabaseInheritsOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testSelectDatabaseInheritsOptions()$/;"	f
testSelectDatabasePassesOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testSelectDatabasePassesOptions()$/;"	f
testSelectGridFSBucketInheritsOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testSelectGridFSBucketInheritsOptions()$/;"	f
testSelectGridFSBucketPassesOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testSelectGridFSBucketPassesOptions()$/;"	f
testSend	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSend()$/;"	f
testSerialization	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testSerialization()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCommandCursorTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSCursorTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoInsertBatchTest.php	/^    public function testSerialize()$/;"	f
testSerialize	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testSerialize()$/;"	f
testSetCallback	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoLogTest.php	/^    public function testSetCallback()$/;"	f
testSetConnectionString	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetConnectionString()$/;"	f
testSetConnectionTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetConnectionTimeout()$/;"	f
testSetFormatter	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testSetFormatter()$/;"	f
testSetFormatter	vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php	/^    public function testSetFormatter()$/;"	f
testSetFormatterInvalid	vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php	/^    public function testSetFormatterInvalid()$/;"	f
testSetHandlers	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testSetHandlers()$/;"	f
testSetState	vendor/mongodb/mongodb/tests/Model/BSONArrayTest.php	/^    public function testSetState()$/;"	f
testSetState	vendor/mongodb/mongodb/tests/Model/BSONDocumentTest.php	/^    public function testSetState()$/;"	f
testSetTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetTimeout()$/;"	f
testSetTimezone	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testSetTimezone($tz)$/;"	f
testSetWritingTimeout	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testSetWritingTimeout()$/;"	f
testSetterArrayHeaderInjection	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterArrayHeaderInjection()$/;"	f
testSetterContentTypeInjection	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterContentTypeInjection()$/;"	f
testSetterEncodingInjection	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterEncodingInjection()$/;"	f
testSetterHeaderInjection	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^    public function testSetterHeaderInjection()$/;"	f
testShouldLogMessagesUsingErrorLogFuncion	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    public function testShouldLogMessagesUsingErrorLogFuncion()$/;"	f
testShouldNotAcceptAnInvalidTypeOnContructor	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^    public function testShouldNotAcceptAnInvalidTypeOnContructor()$/;"	f
testSimpleFormat	vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php	/^    public function testSimpleFormat()$/;"	f
testSparseIndex	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testSparseIndex()$/;"	f
testSpecification	vendor/mongodb/mongodb/tests/Collection/CrudSpecFunctionalTest.php	/^    public function testSpecification(array $initialData, array $test, $minServerVersion, $maxServerVersion)$/;"	f
testSpecification	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^    public function testSpecification(array $initialData, array $test)$/;"	f
testSplitWorksOnEmptyMsg	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testSplitWorksOnEmptyMsg()$/;"	f
testStartupWithErrorsThrowsUnexpectedValueException	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testStartupWithErrorsThrowsUnexpectedValueException()$/;"	f
testStartupWithFailingToSelectErrorStreamThrowsUnexpectedValueException	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testStartupWithFailingToSelectErrorStreamThrowsUnexpectedValueException()$/;"	f
testStoreByteExceptionWhileInsertingChunks	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreByteExceptionWhileInsertingChunks()$/;"	f
testStoreByteExceptionWhileInsertingRecord	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreByteExceptionWhileInsertingRecord()$/;"	f
testStoreFile	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreFile()$/;"	f
testStoreFileExceptionWhileInsertingChunks	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreFileExceptionWhileInsertingChunks()$/;"	f
testStoreFileExceptionWhileInsertingRecord	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreFileExceptionWhileInsertingRecord()$/;"	f
testStoreFileExceptionWhileUpdatingFileRecord	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreFileExceptionWhileUpdatingFileRecord()$/;"	f
testStoreFileResource	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreFileResource()$/;"	f
testStoreUpload	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoreUpload()$/;"	f
testStoringData	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSTest.php	/^    public function testStoringData()$/;"	f
testStringify	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testStringify($fields, $expectedResult)$/;"	f
testStyling	vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php	/^    public function testStyling()$/;"	f
testSubCollectionWithNullBytes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testSubCollectionWithNullBytes()$/;"	f
testSupportMillisecondsWithLeadingZeroes	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testSupportMillisecondsWithLeadingZeroes()$/;"	f
testTableFormat	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^    public function testTableFormat()$/;"	f
testTag	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testTag()$/;"	f
testTextEqualsFormatterOutput	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testTextEqualsFormatterOutput()$/;"	f
testTextEqualsMessageIfNoAttachment	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^    public function testTextEqualsMessageIfNoAttachment()$/;"	f
testTheAppNameCanBeInjectedFromtheConstructor	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameCanBeInjectedFromtheConstructor()$/;"	f
testTheAppNameCanBeOverriddenFromEachLog	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameCanBeOverriddenFromEachLog()$/;"	f
testTheAppNameIsNullByDefault	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheAppNameIsNullByDefault()$/;"	f
testTheTransactionNameCanBeInjectedFromTheConstructor	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameCanBeInjectedFromTheConstructor()$/;"	f
testTheTransactionNameCanBeOverriddenFromEachLog	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameCanBeOverriddenFromEachLog()$/;"	f
testTheTransactionNameIsNullByDefault	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testTheTransactionNameIsNullByDefault()$/;"	f
testThehandlerCanAddContextParamsToTheNewRelicTrace	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddContextParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExplodedContextParamsToTheNewRelicTrace	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExplodedContextParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExplodedExtraParamsToTheNewRelicTrace	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExplodedExtraParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExtraContextAndParamsToTheNewRelicTrace	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExtraContextAndParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanAddExtraParamsToTheNewRelicTrace	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanAddExtraParamsToTheNewRelicTrace()$/;"	f
testThehandlerCanHandleTheRecord	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanHandleTheRecord()$/;"	f
testThehandlerCanHandleTheRecordsFormattedUsingTheLineFormatter	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerCanHandleTheRecordsFormattedUsingTheLineFormatter()$/;"	f
testThehandlerThrowsAnExceptionIfTheNRExtensionIsNotLoaded	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public function testThehandlerThrowsAnExceptionIfTheNRExtensionIsNotLoaded()$/;"	f
testThrowsOnInvalidEncoding	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^    public function testThrowsOnInvalidEncoding()$/;"	f
testThrowsOnInvalidLevel	vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php	/^    public function testThrowsOnInvalidLevel()$/;"	f
testTimeZoneDoesNotAlterReturnedDateTime	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^    public function testTimeZoneDoesNotAlterReturnedDateTime()$/;"	f
testTimezoneIsRespectedInOtherTimezone	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testTimezoneIsRespectedInOtherTimezone()$/;"	f
testTimezoneIsRespectedInUTC	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testTimezoneIsRespectedInUTC()$/;"	f
testToString	vendor/mongodb/mongodb/tests/ClientTest.php	/^    public function testToString()$/;"	f
testToString	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testToString()$/;"	f
testToString	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testToString()$/;"	f
testTtlIndex	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testTtlIndex()$/;"	f
testTypeMapOption	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap = null, array $expectedDocuments)$/;"	f
testTypeMapOption	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap = null, $expectedDocument)$/;"	f
testTypeMapOption	vendor/mongodb/mongodb/tests/Operation/FindFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap, array $expectedDocuments)$/;"	f
testTypeMapOption	vendor/mongodb/mongodb/tests/Operation/FindOneFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap, $expectedDocument)$/;"	f
testUnacknowledgedUpdate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUnacknowledgedUpdate()$/;"	f
testUnacknowledgedWrite	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUnacknowledgedWrite()$/;"	f
testUnacknowledgedWriteConcern	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcern()$/;"	f
testUnacknowledgedWriteConcern	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcern()$/;"	f
testUnacknowledgedWriteConcern	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^    public function testUnacknowledgedWriteConcern()$/;"	f
testUnacknowledgedWriteConcern	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function testUnacknowledgedWriteConcern()$/;"	f
testUnacknowledgedWriteConcern	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUnacknowledgedWriteConcern()$/;"	f
testUnacknowledgedWriteConcernAccessesDeletedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesDeletedCount(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesDeletedCount	vendor/mongodb/mongodb/tests/Operation/DeleteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesDeletedCount(DeleteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesInsertCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesInsertCount(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesInsertedCount	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesInsertedCount(InsertManyResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesInsertedCount	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesInsertedCount(InsertOneResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesInsertedId	vendor/mongodb/mongodb/tests/Operation/InsertManyFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesInsertedId(InsertManyResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesInsertedId	vendor/mongodb/mongodb/tests/Operation/InsertOneFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesInsertedId(InsertOneResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesMatchedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesMatchedCount(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesMatchedCount	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesMatchedCount(UpdateResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesModifiedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesModifiedCount(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesModifiedCount	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesModifiedCount(UpdateResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesUpsertedCount	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesUpsertedCount(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesUpsertedCount	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesUpsertedCount(UpdateResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesUpsertedId	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesUpsertedId(UpdateResult $result)$/;"	f
testUnacknowledgedWriteConcernAccessesUpsertedIds	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnacknowledgedWriteConcernAccessesUpsertedIds(BulkWriteResult $result)$/;"	f
testUnacknowledgedWriteWithBooleanValue	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUnacknowledgedWriteWithBooleanValue()$/;"	f
testUniqueIndex	vendor/mongodb/mongodb/tests/Model/IndexInfoTest.php	/^    public function testUniqueIndex()$/;"	f
testUnknownOperation	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUnknownOperation()$/;"	f
testUnknownOperation	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUnknownOperation()$/;"	f
testUnrecognizedPipelineState	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    public function testUnrecognizedPipelineState()$/;"	f
testUpdateDuplicate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateDuplicate()$/;"	f
testUpdateMany	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateMany()$/;"	f
testUpdateMany	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testUpdateMany()$/;"	f
testUpdateMany	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUpdateMany()$/;"	f
testUpdateManyCollationOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyCollationOptionTypeCheck($collation)$/;"	f
testUpdateManyException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testUpdateManyException()$/;"	f
testUpdateManyFilterArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyFilterArgumentMissing()$/;"	f
testUpdateManyFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyFilterArgumentTypeCheck($filter)$/;"	f
testUpdateManyRequiresUpdateOperators	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUpdateManyRequiresUpdateOperators()$/;"	f
testUpdateManyUpdateArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyUpdateArgumentMissing()$/;"	f
testUpdateManyUpdateArgumentRequiresOperators	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyUpdateArgumentRequiresOperators()$/;"	f
testUpdateManyUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyUpdateArgumentTypeCheck($update)$/;"	f
testUpdateManyUpsertOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateManyUpsertOptionTypeCheck($upsert)$/;"	f
testUpdateManyWithExistingId	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUpdateManyWithExistingId()$/;"	f
testUpdateManyWithGeneratedId	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUpdateManyWithGeneratedId()$/;"	f
testUpdateOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateOne()$/;"	f
testUpdateOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testUpdateOne()$/;"	f
testUpdateOne	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^    public function testUpdateOne()$/;"	f
testUpdateOneCollationOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneCollationOptionTypeCheck($collation)$/;"	f
testUpdateOneException	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testUpdateOneException()$/;"	f
testUpdateOneFilterArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneFilterArgumentMissing()$/;"	f
testUpdateOneFilterArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneFilterArgumentTypeCheck($filter)$/;"	f
testUpdateOneRequiresUpdateOperators	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUpdateOneRequiresUpdateOperators()$/;"	f
testUpdateOneUpdateArgumentMissing	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneUpdateArgumentMissing()$/;"	f
testUpdateOneUpdateArgumentRequiresOperators	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneUpdateArgumentRequiresOperators()$/;"	f
testUpdateOneUpdateArgumentTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneUpdateArgumentTypeCheck($update)$/;"	f
testUpdateOneUpsertOptionTypeCheck	vendor/mongodb/mongodb/tests/Operation/BulkWriteTest.php	/^    public function testUpdateOneUpsertOptionTypeCheck($upsert)$/;"	f
testUpdateReplaceMultiple	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateReplaceMultiple()$/;"	f
testUpdateReplaceOne	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateReplaceOne()$/;"	f
testUpdateWriteConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testUpdateWriteConcern()$/;"	f
testUpdates	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^    public function testUpdates()$/;"	f
testUploadFromStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testUploadFromStream()$/;"	f
testUploadFromStreamShouldRequireSourceStream	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testUploadFromStreamShouldRequireSourceStream($source)$/;"	f
testUploadingAnEmptyFile	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testUploadingAnEmptyFile()$/;"	f
testUploadingFirstFileCreatesIndexes	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testUploadingFirstFileCreatesIndexes()$/;"	f
testUpsert	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testUpsert()$/;"	f
testUseMicrosecondTimestamps	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testUseMicrosecondTimestamps($micro, $assert, $assertFormat)$/;"	f
testUserContext	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testUserContext()$/;"	f
testValidConstructorFileDocument	vendor/mongodb/mongodb/tests/GridFS/ReadableStreamFunctionalTest.php	/^    public function testValidConstructorFileDocument()$/;"	f
testValidConstructorOptions	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^    public function testValidConstructorOptions()$/;"	f
testValidConstructorOptions	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function testValidConstructorOptions()$/;"	f
testValidate	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testValidate()$/;"	f
testValidateItem	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDeleteBatchTest.php	/^    public function testValidateItem()$/;"	f
testValidateItem	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoUpdateBatchTest.php	/^    public function testValidateItem()$/;"	f
testWarning	vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php	/^    public function testWarning()$/;"	f
testWarning	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^    public function testWarning()$/;"	f
testWeDoNotTruncateShortMessages	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testWeDoNotTruncateShortMessages()$/;"	f
testWeSplitIntoLines	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testWeSplitIntoLines()$/;"	f
testWeValidateFacilities	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^    public function testWeValidateFacilities()$/;"	f
testWithName	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function testWithName()$/;"	f
testWithOptionsInheritsOptions	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testWithOptionsInheritsOptions()$/;"	f
testWithOptionsInheritsOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testWithOptionsInheritsOptions()$/;"	f
testWithOptionsPassesOptions	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^    public function testWithOptionsPassesOptions()$/;"	f
testWithOptionsPassesOptions	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^    public function testWithOptionsPassesOptions()$/;"	f
testWritableStreamClose	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testWritableStreamClose()$/;"	f
testWritableStreamEof	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testWritableStreamEof()$/;"	f
testWritableStreamRead	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testWritableStreamRead()$/;"	f
testWritableStreamStat	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testWritableStreamStat()$/;"	f
testWritableStreamWrite	vendor/mongodb/mongodb/tests/GridFS/StreamWrapperFunctionalTest.php	/^    public function testWritableStreamWrite()$/;"	f
testWrite	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testWrite()$/;"	f
testWrite	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWrite()$/;"	f
testWrite	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    public function testWrite()$/;"	f
testWriteAfterCloseErrors	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^    public function testWriteAfterCloseErrors()$/;"	f
testWriteBatchContent	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    public function testWriteBatchContent()$/;"	f
testWriteBatchContent	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^    public function testWriteBatchContent()$/;"	f
testWriteBytesAlwaysUpdatesFileSize	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function testWriteBytesAlwaysUpdatesFileSize()$/;"	f
testWriteBytesCalculatesMD5	vendor/mongodb/mongodb/tests/GridFS/WritableStreamFunctionalTest.php	/^    public function testWriteBytesCalculatesMD5($input, $expectedMD5)$/;"	f
testWriteConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testWriteConcern()$/;"	f
testWriteConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testWriteConcern()$/;"	f
testWriteConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testWriteConcern()$/;"	f
testWriteConcernAsDocument	vendor/mongodb/mongodb/tests/FunctionsTest.php	/^    public function testWriteConcernAsDocument(WriteConcern $writeConcern, $expectedDocument)$/;"	f
testWriteConcernIsInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testWriteConcernIsInherited()$/;"	f
testWriteConcernIsInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testWriteConcernIsInherited()$/;"	f
testWriteConcernIsSetInDriver	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^    public function testWriteConcernIsSetInDriver()$/;"	f
testWriteConcernIsSetInDriver	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^    public function testWriteConcernIsSetInDriver()$/;"	f
testWriteConcernOptionsAreInherited	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoClientTest.php	/^    public function testWriteConcernOptionsAreInherited($options, $uri)$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteContent($content)$/;"	f
testWriteContent	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContent()$/;"	f
testWriteContentNotify	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentNotify($content)$/;"	f
testWriteContentUsesFormatterIfProvided	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentUsesFormatterIfProvided()$/;"	f
testWriteContentV2	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2($content)$/;"	f
testWriteContentV2Notify	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2Notify($content)$/;"	f
testWriteContentV2WithoutName	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteContentV2WithoutName()$/;"	f
testWriteContentWithColors	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithColors($level, $expectedColor)$/;"	f
testWriteContentWithEmoji	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithEmoji()$/;"	f
testWriteContentWithPlainTextMessage	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteContentWithPlainTextMessage()$/;"	f
testWriteCreatesTheStreamResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteCreatesTheStreamResource()$/;"	f
testWriteFailsIfStreamTimesOut	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsIfStreamTimesOut()$/;"	f
testWriteFailsOnIfFwriteReturnsFalse	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsOnIfFwriteReturnsFalse()$/;"	f
testWriteFailsOnIncompleteWrite	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteFailsOnIncompleteWrite()$/;"	f
testWriteHeader	vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteHeader	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteHeader	vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php	/^    public function testWriteHeader()$/;"	f
testWriteInvalidArgument	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteInvalidArgument($invalidArgument)$/;"	f
testWriteInvalidResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteInvalidResource()$/;"	f
testWriteLocking	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteLocking()$/;"	f
testWriteMissingResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteMissingResource()$/;"	f
testWriteNonExistingAndNotCreatableFileResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingAndNotCreatableFileResource()$/;"	f
testWriteNonExistingAndNotCreatablePath	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingAndNotCreatablePath()$/;"	f
testWriteNonExistingFileResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingFileResource()$/;"	f
testWriteNonExistingPath	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingPath()$/;"	f
testWriteNonExistingResource	vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php	/^    public function testWriteNonExistingResource()$/;"	f
testWriteOpensProcessAndWritesToStdInOfProcess	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testWriteOpensProcessAndWritesToStdInOfProcess()$/;"	f
testWriteSpecifyFilename	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoGridFSFileTest.php	/^    public function testWriteSpecifyFilename()$/;"	f
testWriteToMultipleUsers	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteToMultipleUsers()$/;"	f
testWriteTruncatesLongMessage	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteTruncatesLongMessage()$/;"	f
testWriteV2	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteV2()$/;"	f
testWriteV2Notify	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteV2Notify()$/;"	f
testWriteWithComplexMessage	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteWithComplexMessage()$/;"	f
testWriteWithComplexMessage	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithComplexMessage()$/;"	f
testWriteWithComplexTitle	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithComplexTitle()$/;"	f
testWriteWithEmergencyPriority	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithEmergencyPriority()$/;"	f
testWriteWithErrorLevelsAndColors	vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php	/^    public function testWriteWithErrorLevelsAndColors($level, $expectedColor)$/;"	f
testWriteWithHighPriority	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithHighPriority()$/;"	f
testWriteWithMemoryFile	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteWithMemoryFile()$/;"	f
testWriteWithMock	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    public function testWriteWithMock()$/;"	f
testWriteWithTooLongMessage	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    public function testWriteWithTooLongMessage()$/;"	f
testWritingWithErrorsOnStdOutOfProcessThrowsInvalidArgumentException	vendor/monolog/monolog/tests/Monolog/Handler/ProcessHandlerTest.php	/^    public function testWritingWithErrorsOnStdOutOfProcessThrowsInvalidArgumentException()$/;"	f
testWrongOptionsThrowsException	vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php	/^    public function testWrongOptionsThrowsException()$/;"	f
tester	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^        $tester = new \\Acme\\Tester;$/;"	v
tester	vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php	/^function tester($handler, $record)$/;"	f
tests	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCursorTest.php	/^        $tests = [$/;"	v
th	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $th = htmlspecialchars($th, ENT_NOQUOTES, 'UTF-8');$/;"	v
that	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^     * @param MongoCode|string $reduce A function that aggregates (reduces) the objects iterated.$/;"	f
that	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $that = $this;$/;"	v
that	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $that = $this;$/;"	v
that	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $that = $this;$/;"	v
that	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^        $that = $this;$/;"	v
throwEncodeError	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    private function throwEncodeError(int $code, $data)$/;"	f
throwTimeOutException	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public function throwTimeOutException()$/;"	f
throwable	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^        $throwable = new \\Error('Foo');$/;"	v
tickTime	vendor/pinguo/php-msf/src/Server.php	/^    public $tickTime;$/;"	v
tidPidTable	vendor/pinguo/php-msf/src/MSFCli.php	/^        $this->tidPidTable = new \\swoole_table(1024);$/;"	v
tidPidTable	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->tidPidTable = new \\swoole_table(8096);$/;"	v
tidPidTable	vendor/pinguo/php-msf/src/MSFServer.php	/^    public $tidPidTable;$/;"	v
time	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $time = microtime(true);$/;"	v
time	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $this->time = $time;$/;"	v
time	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^    protected $time;$/;"	v
time	vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php	/^        $time = '2014-01-07T12:34';$/;"	v
timeCrc32	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $timeCrc32 = microtime(true) - $start;$/;"	v
timeMd5	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $timeMd5 = microtime(true) - $start;$/;"	v
timeUsed	vendor/pinguo/php-log/src/PGLog.php	/^        $timeUsed = sprintf("%.0f", (microtime(true) - $this->accessRecord['beginTime']) * 1000);$/;"	v
timedFilename	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $timedFilename = str_replace($/;"	v
timeout	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function timeout($ms)$/;"	f
timeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    public static $timeout = 30000;$/;"	v
timeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursorInterface.php	/^    public function timeout($ms);$/;"	f
timeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->timeout = (float) $seconds;$/;"	v
timeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $timeout = 0;$/;"	v
timeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function __construct($url = '', $timeout = 0, $headers = [])$/;"	v
timeout	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public function goDnsLookup($url = '', $timeout = 0, $headers = [])$/;"	v
timeout	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->timeout = $config['timeout'];$/;"	v
timeout	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->timeout = static::$services[$service]['timeout'];$/;"	v
timeout	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $timeout = 0;$/;"	v
timeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^            $this->timeout = $timeout;$/;"	v
timeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^            $this->timeout = self::$maxTimeout;$/;"	v
timeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^        $this->timeout = $timeout;$/;"	v
timeout	vendor/pinguo/php-msf/src/Coroutine/Base.php	/^    public $timeout;$/;"	v
timeout	vendor/pinguo/php-msf/src/Server.php	/^                $timeout = 5;$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $timeout = 2000$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $timeout = 2000,$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $timeout = 5000,$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function add($doc, $timeout = 2000, $w = 1, $fsync = false)$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function command($command, $timeout = 5000)$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^        $this->timeout = $timeout;$/;"	v
timeout	vendor/pinguo/php-msf/src/Tasks/TaskProxy.php	/^    protected $timeout = 0;$/;"	v
timerProcess	vendor/pinguo/php-msf/src/MSFServer.php	/^            $timerProcess = new \\swoole_process(function ($process) {$/;"	v
timers	vendor/pinguo/php-msf/src/Helpers/Common.php	/^    $timers = getInstance()->sysTimers;$/;"	v
timestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $timestamp = $dateTime->format('U') . '.' . $dateTime->format('U');$/;"	v
timestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDateTest.php	/^        $timestamp = mktime (8, 8, 8); $date = new \\MongoDate($timestamp);$/;"	v
timestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $timestamp = new \\MongoTimestamp($bsonTimestamp);$/;"	v
timestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $timestamp = new \\MongoTimestamp(1234567890, 987654321);$/;"	v
timestamp	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $timestamp = new \\MongoTimestamp(67890, 12345);$/;"	v
timestamp	vendor/mongodb/mongodb/src/GridFS/StreamWrapper.php	/^            $timestamp = $file->uploadDate->toDateTime()->getTimestamp();$/;"	v
timestamp	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^            $timestamp = microtime(true);$/;"	v
timestamp	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $timestamp = $record['datetime']->getTimestamp();$/;"	v
timestamp1	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $timestamp1 = new \\MongoTimestamp(1234567890);$/;"	v
timestamp2	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoTimestampTest.php	/^        $timestamp2 = new \\MongoTimestamp(1234567890);$/;"	v
timestampValidity	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $timestampValidity = $record['datetime']->getTimestamp() - $this->time;$/;"	v
timestampValidity	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $timestampValidity = time() - $this->time;$/;"	v
timezone	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^    public function __construct($useMicroseconds, \\DateTimeZone $timezone = null)$/;"	v
timezone	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->timezone = $timezone ?: new DateTimeZone(date_default_timezone_get() ?: 'UTC');$/;"	v
timezone	vendor/monolog/monolog/src/Monolog/Logger.php	/^        $this->timezone = $tz;$/;"	v
timezone	vendor/monolog/monolog/src/Monolog/Logger.php	/^    protected $timezone;$/;"	v
timezone	vendor/pinguo/php-log/src/PGLog.php	/^        \\DateTimeZone $timezone = null$/;"	v
title	vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php	/^        $title = htmlspecialchars($title, ENT_NOQUOTES, 'UTF-8');$/;"	v
title	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->title = $title ?: gethostname();$/;"	v
title	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $title;$/;"	v
title	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function __construct($token, $users, $title = null, $level = Logger::CRITICAL, $bubble = true, $useSSL = true, $highPriorityLevel = Logger::CRITICAL, $emergencyLevel = Logger::EMERGENCY, $retry = 30, $expire = 25200)$/;"	v
tmpPattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                        $patternParams[$name] = $tmpPattern === '[^\\\/]+' ? '' : "#^$tmpPattern$#u";$/;"	v
tmpPattern	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^                    $tmpPattern = isset($match[2][0]) ? $match[2][0] : '[^\\\/]+';$/;"	v
to	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * The function to be called on events.$/;"	f
to	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^        $this->to = (array) $to;$/;"	v
to	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^    protected $to;$/;"	v
to	vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php	/^ * NativeMailerHandler uses the mail() function to send the emails$/;"	f
to	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^        $this->to = (array) $to;$/;"	v
to	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^    protected $to;$/;"	v
to	vendor/monolog/monolog/src/Monolog/Handler/SendGridHandler.php	/^ * SendGridrHandler uses the SendGrid API v2 function to send Log emails, more information in https:\/\/sendgrid.com\/docs\/API_Reference\/Web_API\/mail.html$/;"	f
to	vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php	/^        $to = 'spammer@example.org';$/;"	v
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeInterface.php	/^    public function toBSONType();$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCode.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoMaxKey.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoMinKey.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoRegex.php	/^    public function toBSONType()$/;"	f
toBSONType	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoTimestamp.php	/^    public function toBSONType()$/;"	f
toDateTime	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public function toDateTime()$/;"	f
toJson	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^    protected function toJson($data, bool $ignoreErrors = false)$/;"	f
toLegacy	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^    public static function toLegacy(Exception\\Exception $e, $fallbackClass = 'MongoException')$/;"	f
toLegacy	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    public static function toLegacy($value)$/;"	f
toMonologLevel	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public static function toMonologLevel($level): int$/;"	f
toResultArray	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^    public static function toResultArray(Exception\\Exception $e)$/;"	f
token	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    protected $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    private $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^        $this->token = $token;$/;"	v
token	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    private $token;$/;"	v
token	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^            $this->token = 0;$/;"	v
token	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $token                   = $this->token;$/;"	v
token	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $token = 0;$/;"	v
total	vendor/pinguo/php-log/src/PGLog.php	/^    public function counting($name, $hit, $total = null)$/;"	v
tr	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $tr = [$/;"	v
tr	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $tr = [];$/;"	v
tr2	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^            $tr2 = [];$/;"	v
trace	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $trace = $e->getTrace();$/;"	v
trace	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^        $trace = $e->getTrace();$/;"	v
trace	vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php	/^        $trace = debug_backtrace((PHP_VERSION_ID < 50306) ? 2 : DEBUG_BACKTRACE_IGNORE_ARGS);$/;"	v
trace	vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php	/^        $trace = $e->getTrace();$/;"	v
trace	vendor/pinguo/php-msf/src/Server.php	/^                    $trace = debug_backtrace();$/;"	v
transactionName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $this->transactionName = $transactionName;$/;"	v
transactionName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^        $transactionName = null$/;"	v
transactionName	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected $transactionName;$/;"	v
transactionName	vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php	/^    public static $transactionName;$/;"	v
trimSlashes	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    protected function trimSlashes($string)$/;"	f
trueFalseDataProvider	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    public function trueFalseDataProvider()$/;"	f
truncateMicroSeconds	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    private function truncateMicroSeconds($usec)$/;"	f
truncated	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $truncated  = false;$/;"	v
truncated	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $truncated  = true;$/;"	v
truncatedString	vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php	/^        $truncatedString = str_repeat("derp", 16254).'d';$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $type = \\MongoClient::RP_NEAREST;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $type = \\MongoClient::RP_PRIMARY;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $type = \\MongoClient::RP_PRIMARY_PREFERRED;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $type = \\MongoClient::RP_SECONDARY;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/ReadPreference.php	/^                $type = \\MongoClient::RP_SECONDARY_PREFERRED;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^            $this->type = $data->getType();$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^            $this->type = $type;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public $type;$/;"	v
type	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoBinData.php	/^    public function __construct($data, $type = 2)$/;"	v
type	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^            $type = key($operation);$/;"	v
type	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^        foreach ($dataModification as $type => $collectionName) {$/;"	v
type	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^        $this->type = $type;$/;"	v
type	vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php	/^    protected $type;$/;"	v
type	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $type  = $this->logLevels[$record['level']];$/;"	v
type	vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php	/^            $type  = 'TABLE';$/;"	v
type	vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php	/^        $type = ErrorLogHandler::OPERATING_SYSTEM;$/;"	v
type	vendor/pinguo/php-msf/src/MSFServer.php	/^        $type    = $unserializeData['type'] ?? '';$/;"	v
typeMap	vendor/mongodb/mongodb/src/Client.php	/^        $this->typeMap = isset($driverOptions['typeMap']) ? $driverOptions['typeMap'] : null;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Client.php	/^    private $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Collection.php	/^        $this->typeMap = isset($options['typeMap']) ? $options['typeMap'] : self::$defaultTypeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Collection.php	/^    private $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Database.php	/^        $this->typeMap = isset($options['typeMap']) ? $options['typeMap'] : self::$defaultTypeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Database.php	/^    private $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->typeMap = isset($options['typeMap']) ? $options['typeMap'] : self::$defaultTypeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $typeMap = ['root' => 'stdClass'] + $this->typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^        $this->typeMap = $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/src/Model/TypeMapArrayIterator.php	/^    private $typeMap;$/;"	v
typeMap	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap = null, array $expectedDocuments)$/;"	v
typeMap	vendor/mongodb/mongodb/tests/Operation/FindAndModifyFunctionalTest.php	/^    public function testTypeMapOption(array $typeMap = null, $expectedDocument)$/;"	v
typeString	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^                    $typeString = 'ARBITER';$/;"	v
typeString	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^                    $typeString = 'MONGOS';$/;"	v
typeString	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^                    $typeString = 'PRIMARY';$/;"	v
typeString	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^                    $typeString = 'SECONDARY';$/;"	v
typeString	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^                    $typeString = 'STANDALONE';$/;"	v
tz	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^            $tz = new \\DateTimeZone('America\/New_York');$/;"	v
udpConnection	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $this->udpConnection = socket_create(AF_INET, SOCK_DGRAM, 0);$/;"	v
udpConnection	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private $udpConnection;$/;"	v
uid	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^        $this->uid = substr(bin2hex(random_bytes((int) ceil($length \/ 2))), 0, $length);$/;"	v
uid	vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php	/^    private $uid;$/;"	v
unPack	vendor/pinguo/php-msf/src/Pack/IPack.php	/^    function unPack($data);$/;"	f
unPack	vendor/pinguo/php-msf/src/Pack/JsonPack.php	/^    public function unPack($data, ...$params)$/;"	f
unPack	vendor/pinguo/php-msf/src/Pack/MsgPack.php	/^    public function unPack($data)$/;"	f
unPack	vendor/pinguo/php-msf/src/Pack/SerializePack.php	/^    public function unPack($data)$/;"	f
unPackArgs	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $unPackArgs = (array)getInstance()->pack->unPack($arguments[0]);$/;"	v
unSerializeHandler	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^    protected function unSerializeHandler($data, $keys = [], $len = 0)$/;"	f
unSerializeHandler	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    protected function unSerializeHandler($data, $keys = [], $len = 0)$/;"	f
unacknowledgedWriteResultAccess	vendor/mongodb/mongodb/src/Exception/BadMethodCallException.php	/^    public static function unacknowledgedWriteResultAccess($method)$/;"	f
uncaughtExceptionLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^        $this->uncaughtExceptionLevelMap = $levelMap;$/;"	v
uncaughtExceptionLevelMap	vendor/monolog/monolog/src/Monolog/ErrorHandler.php	/^    private $uncaughtExceptionLevelMap;$/;"	v
under	vendor/composer/ClassLoader.php	/^ * the autoloader will first look for the class under the component\/$/;"	c
unexpectedIndex	vendor/mongodb/mongodb/src/GridFS/Exception/CorruptFileException.php	/^    public static function unexpectedIndex($index, $expectedIndex)$/;"	f
unexpectedSize	vendor/mongodb/mongodb/src/GridFS/Exception/CorruptFileException.php	/^    public static function unexpectedSize($size, $expectedSize)$/;"	f
unregister	vendor/composer/ClassLoader.php	/^    public function unregister()$/;"	f
unserialize	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoId.php	/^    public function unserialize($serialized)$/;"	f
unserializeData	vendor/pinguo/php-msf/src/MSFServer.php	/^            $unserializeData = $data;$/;"	v
unserializeData	vendor/pinguo/php-msf/src/MSFServer.php	/^            $unserializeData = unserialize($data);$/;"	v
unserialized	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoIdTest.php	/^        $unserialized = unserialize($serialized);$/;"	v
unsleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $unsleepProperties = $var->__unsleep();$/;"	v
unsleepProperties	vendor/pinguo/php-msf/src/Helpers/Common.php	/^                $unsleepProperties = [];$/;"	v
up	app/Controllers/MySQL.php	/^        $up         = yield $mysqlProxy->update('user')->set('name', '徐典阳-6')->where('id', 3)->go();$/;"	v
up	app/Controllers/MySQL.php	/^        $up = yield $mysqlPool->update('user')->set('name', '徐典阳-1')->where('id', 3)->go($id);$/;"	v
up	app/Controllers/MySQL.php	/^        $up = yield $mysqlProxy->update('user')->set('name', '徐典阳-2')->where('id', 3)->go($id);$/;"	v
up	app/Tasks/Demo.php	/^        $up = $mysqlPool->update('user')->set('name', '徐典阳-1')->where('id', 3)->go($id);$/;"	v
upMethod	vendor/pinguo/php-msf/src/Proxy/MysqlProxyMasterSlave.php	/^        $upMethod = strtoupper($method);$/;"	v
upMethod	vendor/pinguo/php-msf/src/Proxy/RedisProxyMasterSlave.php	/^        $upMethod = strtoupper($method);$/;"	v
update	app/Tasks/Idallloc.php	/^        $update = [$/;"	v
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                    $update = $options['update'];$/;"	v
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $update = TypeConverter::fromLegacy($update);$/;"	v
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^                $update = is_array($update) ? $update : [];$/;"	v
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function findAndModify(array $query, array $update = null, array $fields = null, array $options = [])$/;"	v
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function update(array $criteria, array $newobj, array $options = [])$/;"	f
update	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $update = [];$/;"	v
update	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^        $this->update = new Update($/;"	v
update	vendor/mongodb/mongodb/src/Operation/ReplaceOne.php	/^    private $update;$/;"	v
update	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $this->update = $update;$/;"	v
update	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private $update;$/;"	v
update	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^        $this->update = new Update($/;"	v
update	vendor/mongodb/mongodb/src/Operation/UpdateMany.php	/^    private $update;$/;"	v
update	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^        $this->update = new Update($/;"	v
update	vendor/mongodb/mongodb/src/Operation/UpdateOne.php	/^    private $update;$/;"	v
update	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $update = ['$inc' => ['x' => 1]];$/;"	v
update	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $update = ['$set' => ['x' => 1]];$/;"	v
update	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $update = ['$set' => ['x' => 55]];$/;"	v
update	vendor/mongodb/mongodb/tests/Operation/UpdateFunctionalTest.php	/^        $update = ['$set' => ['x' => 66]];$/;"	v
update	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->update = $table;$/;"	v
update	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->update = array();$/;"	v
update	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $update;$/;"	v
update	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function update($table)$/;"	f
updateDoc	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^    public function updateDoc($/;"	f
updateFilenameForId	vendor/mongodb/mongodb/src/GridFS/CollectionWrapper.php	/^    public function updateFilenameForId($id, $filename)$/;"	f
updateInto	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function updateInto($table)$/;"	f
updateMany	vendor/mongodb/mongodb/src/Collection.php	/^    public function updateMany($filter, $update, array $options = [])$/;"	f
updateOne	vendor/mongodb/mongodb/src/Collection.php	/^    public function updateOne($filter, $update, array $options = [])$/;"	f
updateOptions	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $updateOptions = [$/;"	v
updateResult	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $updateResult = $this->collectionWrapper->updateFilenameForId($id, $newFilename);$/;"	v
uploadFromStream	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    public function uploadFromStream($filename, $source, array $options = [])$/;"	f
uploadedFile	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $uploadedFile = $_FILES[$name];$/;"	v
upsert	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $upsert = false,$/;"	v
upsertedIds	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^                $upsertedIds = [];$/;"	v
upsertedIds	vendor/mongodb/mongodb/tests/Operation/BulkWriteFunctionalTest.php	/^        $upsertedIds = $result->getUpsertedIds();$/;"	v
uri	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/TestCase.php	/^    protected function getClient($options = null, $uri = 'mongodb:\/\/localhost')$/;"	v
uri	vendor/mongodb/mongodb/src/Client.php	/^        $this->uri = (string) $uri;$/;"	v
uri	vendor/mongodb/mongodb/src/Client.php	/^    private $uri;$/;"	v
uri	vendor/pinguo/plates/src/Extension/URI.php	/^        $this->uri = $uri;$/;"	v
uri	vendor/pinguo/plates/src/Extension/URI.php	/^    protected $uri;$/;"	v
uriOptions	vendor/mongodb/mongodb/src/Client.php	/^    public function __construct($uri = 'mongodb:\/\/127.0.0.1\/', array $uriOptions = [], array $driverOptions = [])$/;"	v
uriOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $uriOptions = [$/;"	v
uriOptions	vendor/mongodb/mongodb/tests/ClientTest.php	/^        $uriOptions = ['w' => WriteConcern::MAJORITY];$/;"	v
url	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^        $url = 'http:\/\/'.$basicAuth.$this->options['host'].':'.$this->options['port'].'\/'.$this->options['dbname'];$/;"	v
url	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^        $url = sprintf("https:\/\/%s\/%s\/%s\/", self::HOST, $endpoint, $this->token);$/;"	v
url	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^        $this->url = $this->getTimedFilename();$/;"	v
url	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^            $this->url = $stream;$/;"	v
url	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $url;$/;"	v
url	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                $url              = $request;$/;"	v
url	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^                $url = $request['url'];$/;"	v
urlData	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^            $this->urlData = self::parseUrl($url);$/;"	v
urlData	vendor/pinguo/php-msf/src/Client/Http/Client.php	/^    public $urlData;$/;"	v
urlInfo	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^        $urlInfo = parse_url($url);$/;"	v
urlOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $urlOptions = $this->extractUrlOptions($server);$/;"	v
urlOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^        $urlOptions = array_merge($urlOptions, $options);$/;"	v
urlPath	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^        $urlPath = '\/' .$this->urlPath . '\/' . $this->service . '\/' . $this->handler . '\/' . $this->method;$/;"	v
urlPath	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $urlPath = 'Rpc';$/;"	v
useAttachment	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->useAttachment = $useAttachment;$/;"	v
useAttachment	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $useAttachment;$/;"	v
useConnector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                    $useConnector = false;$/;"	v
useConnector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                    $useConnector = true;$/;"	v
useConnector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                $useConnector = true;$/;"	v
useConnector	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $useConnector = false;$/;"	v
useCount	vendor/pinguo/php-context/src/AbstractContext.php	/^    public $useCount;$/;"	v
useFormattedMessage	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->useFormattedMessage = (boolean) $value;$/;"	v
useFormattedMessage	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $useFormattedMessage = false;$/;"	v
useFormattedMessage	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    public function useFormattedMessage($value)$/;"	f
useFormatting	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^        $this->useFormatting = $useFormatting;$/;"	v
useFormatting	vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php	/^    protected $useFormatting;$/;"	v
useIncludePath	vendor/composer/ClassLoader.php	/^        $this->useIncludePath = $useIncludePath;$/;"	v
useIncludePath	vendor/composer/ClassLoader.php	/^    private $useIncludePath = false;$/;"	v
useLocking	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^        $this->useLocking = $useLocking;$/;"	v
useLocking	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected $useLocking;$/;"	v
useMicrosecondTimestamps	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function useMicrosecondTimestamps(bool $micro)$/;"	f
useMicrosecondTimestampsProvider	vendor/monolog/monolog/tests/Monolog/LoggerTest.php	/^    public function useMicrosecondTimestampsProvider()$/;"	f
useMicroseconds	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^        $this->useMicroseconds = $useMicroseconds;$/;"	v
useMicroseconds	vendor/monolog/monolog/src/Monolog/DateTimeImmutable.php	/^    private $useMicroseconds;$/;"	v
usePlaceholders	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $usePlaceholders = true,$/;"	v
useSSL	vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php	/^    public function __construct($token, $useSSL = true, $level = Logger::DEBUG, $bubble = true)$/;"	v
useSSL	vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php	/^        $useSSL = extension_loaded('openssl');$/;"	v
useSSL	vendor/monolog/monolog/tests/Monolog/Handler/LogmaticHandlerTest.php	/^        $useSSL = extension_loaded('openssl');$/;"	v
useShortAttachment	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->useShortAttachment = $useShortAttachment;$/;"	v
useShortAttachment	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $useShortAttachment;$/;"	v
useStaticLoader	vendor/composer/autoload_real.php	/^        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());$/;"	v
usec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $usec = ($time - $sec) * 1000000.0;$/;"	v
usec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^            $usec = ((int) substr($msecString, -3)) * 1000;$/;"	v
usec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^        $this->usec = (int) $this->truncateMicroSeconds($usec);$/;"	v
usec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public $usec;$/;"	v
usec	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDate.php	/^    public function __construct($sec = 0, $usec = 0)$/;"	v
used	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^     * Base header creation function used by init headers & record headers$/;"	f
user	app/Controllers/MySQL.php	/^        $user     = yield $demoTask->syncMySQLPool();$/;"	v
user	app/Controllers/MySQL.php	/^        $user     = yield $demoTask->syncMySQLPoolTransaction();$/;"	v
user	app/Controllers/MySQL.php	/^        $user     = yield $demoTask->syncMySQLProxy();$/;"	v
user	app/Controllers/MySQL.php	/^        $user     = yield $demoTask->syncMySQLProxyTransaction();$/;"	v
user	app/Tasks/Demo.php	/^        $user = $this->getMysqlPool('master')->select("*")->from("user")->go();$/;"	v
user	app/Tasks/Demo.php	/^        $user = $this->getMysqlProxy('master_slave')->select("*")->from("user")->go();$/;"	v
user	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^            $this->user = $user;$/;"	v
user	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->user = null;$/;"	v
user	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $user;$/;"	v
user	vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php	/^    private function createHandler($token = 'myToken', $user = 'myUser', $title = 'Monolog')$/;"	v
user	vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php	/^        $user = [$/;"	v
user	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^ * $user  = yield $this->getObject(RpcClient::class, ['user'])->handler('mobile', $construct)->getByUid($uid);$/;"	v
user	vendor/pinguo/php-msf/src/Server.php	/^        $this->user = $this->config->get('server.set.user', '');$/;"	v
user	vendor/pinguo/php-msf/src/Server.php	/^    public $user = '';$/;"	v
userDefined	vendor/pinguo/php-msf/src/Helpers/Context.php	/^        $this->userDefined    = [];$/;"	v
userDefined	vendor/pinguo/php-msf/src/Helpers/Context.php	/^    protected $userDefined = [];$/;"	v
userIcon	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->userIcon = $userIcon !== null ? trim($userIcon, ':') : null;$/;"	v
userIcon	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $userIcon;$/;"	v
userInfo	vendor/pinguo/php-msf/src/Server.php	/^        $userInfo = posix_getpwuid(posix_getuid());$/;"	v
username	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $this->username = $username;$/;"	v
username	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    private $username;$/;"	v
username	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^    public function __construct($channel = null, $username = null, $useAttachment = true, $userIcon = null, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array(), FormatterInterface $formatter = null)$/;"	v
username	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    public function __construct($token, $channel, $username = null, $useAttachment = true, $iconEmoji = null, $level = Logger::CRITICAL, $bubble = true, $useShortAttachment = false, $includeContextAndExtra = false, array $excludeFields = array())$/;"	v
username	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $username = 'Monolog bot';$/;"	v
users	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^        $this->users = (array) $users;$/;"	v
users	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    private $users;$/;"	v
users	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^ * $users = yield RpcClient::goConcurrent($rpc);$/;"	v
v	vendor/pinguo/php-log/src/PGLog.php	/^                    $v = $this->substrLog($v, $length);$/;"	v
val	app/Controllers/Redis.php	/^        $val = yield $this->getRedisPool('p1')->get('key1');$/;"	v
val	app/Controllers/Redis.php	/^        $val = yield $this->getRedisProxy('cluster')->get('proxy22');$/;"	v
val	app/Controllers/Redis.php	/^        $val = yield $this->getRedisProxy('master_slave')->get('M66');$/;"	v
val	vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php	/^            $val = is_scalar($val) || null === $val ? $val : $this->toJson($val);$/;"	v
val	vendor/pinguo/php-log/src/PGLog.php	/^                $val = $this->substrLog($val, $length);$/;"	v
val	vendor/pinguo/php-log/src/PGLog.php	/^            $val = substr($val, 0, $length) . '...<' . strlen($val) . 'chars>';$/;"	v
val	vendor/pinguo/php-log/src/PGLog.php	/^    public function pushLog($key, $val = '', $length = null)$/;"	v
val	vendor/pinguo/php-msf/src/Controllers/Bench.php	/^        $val = yield $this->getRedisPool('bench')->get('bench_set');$/;"	v
val	vendor/pinguo/php-msf/src/Coroutine/Redis.php	/^                        $val = $this->realUnserialize($val);$/;"	v
val	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $val = $this->realUnserialize($val);$/;"	v
valid	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $this->valid = false;$/;"	v
valid	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^        $this->valid = $this->ensureIterator()->valid();$/;"	v
valid	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    private $valid = false;$/;"	v
valid	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    public function valid()$/;"	f
valid	vendor/hassankhan/config/src/AbstractConfig.php	/^    public function valid()$/;"	f
valid	vendor/mongodb/mongodb/src/Model/DatabaseInfoLegacyIterator.php	/^    public function valid()$/;"	f
validLogs	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $validLogs = [];$/;"	v
validRef	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBRefTest.php	/^        $validRef = ['$ref' => 'test', '$id' => $id];$/;"	v
validate	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function validate($scan_data = false)$/;"	f
validate	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private function validate(array $item)$/;"	f
validateStringLength	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    private function validateStringLength($str, $length)$/;"	f
validateTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function validateTimeout($value)$/;"	f
value	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^            $value = method_exists($this, $converter) ? $this->$converter() : $this->$option;$/;"	v
value	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^        $this->value = (string) $value;$/;"	v
value	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt32.php	/^    public $value;$/;"	v
value	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^        $this->value = (string) $value;$/;"	v
value	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInt64.php	/^    public $value;$/;"	v
value	vendor/mongodb/mongodb/tests/FunctionalTestCase.php	/^            if ($value instanceof BSONArray || (is_array($value) && $value === array_values($value))) {$/;"	v
value	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^                $value = $createBinary$/;"	v
value	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^                $value = new ObjectId($value['$oid']);$/;"	v
value	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^                $value = new UTCDateTime(new DateTime($value['$date']));$/;"	v
value	vendor/mongodb/mongodb/tests/GridFS/SpecFunctionalTest.php	/^            $value = $this->convertTypes($value, $createBinary);$/;"	v
value	vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php	/^            $value = $instance->format($value);$/;"	v
value	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                    $value = 'JSON_ERROR';$/;"	v
value	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                    $value = json_decode($encoded, true);$/;"	v
value	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $value = $data->__toString();$/;"	v
value	vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php	/^                $value = $data->jsonSerialize();$/;"	v
value	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^                $value = self::quote('');$/;"	v
value	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^            $value = json_encode($value);$/;"	v
value	vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php	/^        $value = is_array($value)$/;"	v
value	vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php	/^            $value = json_encode($value);$/;"	v
value	vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php	/^                    && $value === $expectedMessage;$/;"	v
value	vendor/pinguo/php-msf/src/Base/Output.php	/^        $value = '',$/;"	v
value	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                $value = '';$/;"	v
value	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^                $value = null;$/;"	v
value	vendor/pinguo/php-msf/src/Coroutine/Task.php	/^            $value = $this->routine->current();$/;"	v
value	vendor/pinguo/php-msf/src/Pack/JsonPack.php	/^        $value = json_decode($data, ...$params);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                        $value = $decodeVal;$/;"	v
value	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $value = $this->unSerializeHandler($value);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^                    $value = $this->unSerializeHandler($value, $keys, $len);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^            $value = $this->redisAsynPool->getSync()->$name(...$arguments);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/CoroutineRedisProxy.php	/^    public function cache($context, string $key, $value = '', int $expire = 0)$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = "? " . self::LOGICAL_AND . " ?";$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = "?";$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = $this->autoQuote($/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = $this->autoQuote($criterion['value'], $autoQuote);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = self::BRACKET_OPEN . substr(str_repeat('?, ', count($criterion['value'])), 0, -2) .$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = self::BRACKET_OPEN;$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                            $value = substr($value, 0, -2);$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                        $value = $criterion['value'];$/;"	v
value	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function set($column, $value = null, $quote = null)$/;"	v
value	vendor/pinguo/php-msf/src/Pools/RedisAsynPool.php	/^                    $value = $arguments[1];$/;"	v
value_statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $value_statement = '(';$/;"	v
value_statement	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            $value_statement = substr($value_statement, 0, -2);$/;"	v
values	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $values = $this->getCollection()->distinct('foo');$/;"	v
values	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $values = $this->getCollection()->distinct('foo', ['foo' => 'bar']);$/;"	v
values	vendor/flexihash/flexihash/tests/BenchmarkTest.php	/^        $values = array_values($values);$/;"	v
values	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function values(array $values)$/;"	f
values	vendor/pinguo/php-msf/src/Proxy/RedisProxyCluster.php	/^                $values = yield $op;$/;"	v
var	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars as $var => $val) {$/;"	v
var	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars['context'] as $var => $val) {$/;"	v
var	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        foreach ($vars['extra'] as $var => $val) {$/;"	v
var	vendor/pinguo/plates/src/Template/Template.php	/^                $var = call_user_func($function, $var);$/;"	v
var	vendor/pinguo/plates/src/Template/Template.php	/^                $var = call_user_func(array($this, $function), $var);$/;"	v
var2	vendor/pinguo/plates/src/Extension/URI.php	/^    public function runUri($var1 = null, $var2 = null, $var3 = null, $var4 = null)$/;"	v
variable	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^     * This method will override the static class variable slaveOkay.$/;"	c
variable	vendor/pinguo/php-msf/src/Pools/Miner.php	/^            \/\/ Reset the array in case the class variable was previously set to a$/;"	c
vars	vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php	/^        $vars = parent::format($record);$/;"	v
vars	vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php	/^    public function capture($data, $stack, $vars = null)$/;"	v
vendorDir	vendor/composer/autoload_classmap.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	vendor/composer/autoload_files.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	vendor/composer/autoload_namespaces.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
vendorDir	vendor/composer/autoload_psr4.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
verb	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->verb    = static::$services[$service]['verb'];$/;"	v
verb	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^            $this->verb = $config['verb'] ?? 'POST';$/;"	v
verb	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public $verb = 'POST';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        $this->verb = $this->getContext()->getInput()->getRequestMethod();$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'DELETE';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'GET';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'HEAD';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'OPTIONS';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'PATCH';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'POST';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^        return $this->verb === 'PUT';$/;"	v
verb	vendor/pinguo/php-msf/src/Rest/Controller.php	/^    public $verb = 'GET';$/;"	v
verb	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public $verb;$/;"	v
verbs	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^        $verbs = 'GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS';$/;"	v
verbs	vendor/pinguo/php-msf/src/Route/RestRoute.php	/^    public static $verbs = [$/;"	v
version	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->version = 2;$/;"	v
version	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^            $this->version = 3;$/;"	v
version	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected $version;$/;"	v
version	vendor/pinguo/php-msf/src/Client/RpcClient.php	/^    public static $version = '0.9';$/;"	v
version	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^            $this->version   = $unPackArgs['version'] ?? null;$/;"	v
version	vendor/pinguo/php-msf/src/Controllers/Rpc.php	/^    public $version = null;$/;"	v
view	vendor/pinguo/php-msf/src/Base/Output.php	/^            $view = str_replace('\\\\', '\/', $this->getContext()->getControllerName()) . '\/' .$/;"	v
view	vendor/pinguo/php-msf/src/Base/Output.php	/^    public function outputView(array $data, $view = null)$/;"	v
view	vendor/pinguo/php-msf/src/Controllers/Controller.php	/^    public function outputView(array $data, $view = null)$/;"	v
viewFile	vendor/pinguo/php-msf/src/Base/Output.php	/^            $viewFile = ROOT_PATH . '\/app\/Views\/' . $view;$/;"	v
viewFile	vendor/pinguo/php-msf/src/Base/Output.php	/^            $viewFile = getInstance()->MSFSrcDir . '\/Views\/' . $view;$/;"	v
view_dir	vendor/pinguo/php-msf/src/HttpServer.php	/^        $view_dir = APP_DIR . '\/Views';$/;"	v
w	vendor/pinguo/php-msf/src/Tasks/MongoDbTask.php	/^        $w = 1,$/;"	v
wTimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $wTimeout = (isset($urlOptions['wTimeoutMs'])) ? $urlOptions['wTimeoutMs'] : null;$/;"	v
waitConnectNum	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $waitConnectNum = 0;$/;"	v
warning	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function warning($message, array $context = [])$/;"	f
warning	vendor/psr/log/Psr/Log/AbstractLogger.php	/^    public function warning($message, array $context = array())$/;"	f
warning	vendor/psr/log/Psr/Log/LoggerInterface.php	/^    public function warning($message, array $context = array());$/;"	f
warning	vendor/psr/log/Psr/Log/LoggerTrait.php	/^    public function warning($message, array $context = array())$/;"	f
warningLoggerRecord	vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php	/^        $warningLoggerRecord = $this->getRecord(Logger::WARNING);$/;"	v
wasObject	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/TypeConverter.php	/^    private static function ensureCorrectType(array $array, $wasObject = false)$/;"	v
wd	vendor/pinguo/php-msf/src/Process/Inotify.php	/^                        $wd = inotify_add_watch($inotifyFd, $path, IN_MODIFY | IN_CREATE | IN_IGNORED | IN_DELETE);$/;"	v
wd	vendor/pinguo/php-msf/src/Process/Inotify.php	/^                $wd = inotify_add_watch($this->inotifyFd, $fileInfo['dirname'], IN_MODIFY | IN_CREATE | IN_IGNORED | IN_DELETE);$/;"	v
webhookUrl	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^        $this->webhookUrl = $webhookUrl;$/;"	v
webhookUrl	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    private $webhookUrl;$/;"	v
weight	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function addTarget($target, $weight = 1)$/;"	v
weight	vendor/flexihash/flexihash/src/Flexihash.php	/^    public function addTargets($targets, $weight = 1)$/;"	v
where	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->where = array();$/;"	v
where	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $where;$/;"	v
where	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function where($column, $value, $operator = self::EQUALS, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
whereBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
whereIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
whereNotBetween	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereNotBetween($column, $min, $max, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
whereNotIn	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    public function whereNotIn($column, array $values, $connector = self::LOGICAL_AND, $quote = null)$/;"	f
wherePlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^        $this->wherePlaceholderValues = array();$/;"	v
wherePlaceholderValues	vendor/pinguo/php-msf/src/Pools/Miner.php	/^    private $wherePlaceholderValues;$/;"	v
wildfire	vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php	/^        $wildfire = new WildfireFormatter();$/;"	v
will	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoLog.php	/^     * This function will set a callback function to be called for {@link http:\/\/www.php.net\/manual\/en\/class.mongolog.php MongoLog} events$/;"	f
will	vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php	/^     * Unless the bubbling is interrupted (by returning true), the Logger class will keep on$/;"	c
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Delete.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCollation	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private static $wireVersionForCollation = 5;$/;"	v
wireVersionForCommand	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private static $wireVersionForCommand = 2;$/;"	v
wireVersionForCommand	vendor/mongodb/mongodb/src/Operation/ListCollections.php	/^    private static $wireVersionForCommand = 3;$/;"	v
wireVersionForCommand	vendor/mongodb/mongodb/src/Operation/ListIndexes.php	/^    private static $wireVersionForCommand = 3;$/;"	v
wireVersionForCommand	vendor/mongodb/mongodb/tests/Operation/CreateIndexesFunctionalTest.php	/^    private static $wireVersionForCommand = 2;$/;"	v
wireVersionForCursor	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private static $wireVersionForCursor = 2;$/;"	v
wireVersionForCursor	vendor/mongodb/mongodb/tests/Operation/AggregateFunctionalTest.php	/^    private static $wireVersionForCursor = 2;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForDocumentLevelValidation	vendor/mongodb/mongodb/src/Operation/Update.php	/^    private static $wireVersionForDocumentLevelValidation = 4;$/;"	v
wireVersionForFindAndModifyWriteConcern	vendor/mongodb/mongodb/src/Collection.php	/^    private static $wireVersionForFindAndModifyWriteConcern = 4;$/;"	v
wireVersionForReadConcern	vendor/mongodb/mongodb/src/Collection.php	/^    private static $wireVersionForReadConcern = 4;$/;"	v
wireVersionForReadConcern	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private static $wireVersionForReadConcern = 4;$/;"	v
wireVersionForReadConcern	vendor/mongodb/mongodb/src/Operation/Count.php	/^    private static $wireVersionForReadConcern = 4;$/;"	v
wireVersionForReadConcern	vendor/mongodb/mongodb/src/Operation/Distinct.php	/^    private static $wireVersionForReadConcern = 4;$/;"	v
wireVersionForReadConcern	vendor/mongodb/mongodb/src/Operation/Find.php	/^    private static $wireVersionForReadConcern = 4;$/;"	v
wireVersionForWritableCommandWriteConcern	vendor/mongodb/mongodb/src/Client.php	/^    private static $wireVersionForWritableCommandWriteConcern = 5;$/;"	v
wireVersionForWritableCommandWriteConcern	vendor/mongodb/mongodb/src/Collection.php	/^    private static $wireVersionForWritableCommandWriteConcern = 5;$/;"	v
wireVersionForWritableCommandWriteConcern	vendor/mongodb/mongodb/src/Database.php	/^    private static $wireVersionForWritableCommandWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/Aggregate.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/CreateCollection.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/CreateIndexes.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/DropCollection.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/DropDatabase.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/DropIndexes.php	/^    private static $wireVersionForWriteConcern = 5;$/;"	v
wireVersionForWriteConcern	vendor/mongodb/mongodb/src/Operation/FindAndModify.php	/^    private static $wireVersionForWriteConcern = 4;$/;"	v
withName	vendor/monolog/monolog/src/Monolog/Logger.php	/^    public function withName(string $name): self$/;"	f
withOptions	vendor/mongodb/mongodb/src/Collection.php	/^    public function withOptions(array $options = [])$/;"	f
withOptions	vendor/mongodb/mongodb/src/Database.php	/^    public function withOptions(array $options = [])$/;"	f
worker	server.php	/^$worker = new \\App\\AppServer();$/;"	v
workerID	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^            $workerID = $data['worker_id'];$/;"	v
workerId	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^        $this->workerId = $workerId;$/;"	v
workerId	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    protected $workerId;$/;"	v
workerIds	vendor/pinguo/php-msf/src/Process/Config.php	/^        $workerIds = range(0, $this->MSFServer->server->setting['worker_num'] - 1);$/;"	v
workerInfo	vendor/pinguo/php-msf/src/Process/Config.php	/^            $workerInfo = @$this->MSFServer->sysCache->get(Marco::SERVER_STATS . $workerId);$/;"	v
workerInit	vendor/pinguo/php-msf/src/Pools/AsynPool.php	/^    public function workerInit($workerId)$/;"	f
workerInit	vendor/pinguo/php-msf/src/Pools/IAsynPool.php	/^    function workerInit($workerId);$/;"	f
workerNum	vendor/pinguo/php-msf/src/MSFServer.php	/^        $this->workerNum = $set['worker_num'];$/;"	v
workerNum	vendor/pinguo/php-msf/src/Server.php	/^    public $workerNum = 0;$/;"	v
wrapTraversable	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/AbstractCursor.php	/^    protected function wrapTraversable(\\Traversable $traversable)$/;"	f
wrapTraversable	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCursor.php	/^    protected function wrapTraversable(\\Traversable $traversable)$/;"	f
wrapValuesForDataProvider	vendor/mongodb/mongodb/tests/TestCase.php	/^    protected function wrapValuesForDataProvider(array $values)$/;"	f
wrappedResource	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^            $wrappedResource = new TestFooNorm;$/;"	v
wrapper	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^        $this->wrapper = new HandlerWrapper($this->handler);$/;"	v
wrapper	vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php	/^    private $wrapper;$/;"	v
wrapperObject	vendor/pinguo/php-aop/src/Factory.php	/^        $wrapperObject = new Wrapper($object);$/;"	v
wrapperObject	vendor/pinguo/php-aop/src/Factory.php	/^        $wrapperObject = self::create($object, null, function ($method, $arguments, $result) {$/;"	v
write	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^    public function write($filename = null)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php	/^    abstract protected function write(array $record);$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php	/^    public function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php	/^    public function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SqsHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php	/^    public function write($line, $header = "")$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected function write(array $record)$/;"	f
write	vendor/pinguo/php-log/src/Handler/PGStreamHandler.php	/^    protected function write(array $record)$/;"	f
writeBytes	vendor/mongodb/mongodb/src/GridFS/WritableStream.php	/^    public function writeBytes($data)$/;"	f
writeCapped	vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php	/^    protected function writeCapped(array $record)$/;"	f
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^            $this->writeConcern = new \\MongoDB\\Driver\\WriteConcern(1);$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^        $this->writeConcern = $this->createWriteConcernFromArray($writeConcernArray);$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^        $this->writeConcern = $this->createWriteConcernFromParameters($wstring, $wtimeout);$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    protected $writeConcern;$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^            $writeConcern = (isset($urlOptions['w'])) ? $urlOptions['w'] : 1;$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^            $writeConcern = $this->createWriteConcernFromParameters($/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoCollectionTest.php	/^        $writeConcern = $collection->getCollection()->__debugInfo()['writeConcern'];$/;"	v
writeConcern	vendor/alcaeus/mongo-php-adapter/tests/Alcaeus/MongoDbAdapter/Mongo/MongoDBTest.php	/^        $writeConcern = $database->getDb()->__debugInfo()['writeConcern'];$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Client.php	/^        $this->writeConcern = $this->manager->getWriteConcern();$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Client.php	/^    private $writeConcern;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Collection.php	/^        $this->writeConcern = isset($options['writeConcern']) ? $options['writeConcern'] : $this->manager->getWriteConcern();$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Collection.php	/^    private $writeConcern;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Database.php	/^        $this->writeConcern = isset($options['writeConcern']) ? $options['writeConcern'] : $this->manager->getWriteConcern();$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Database.php	/^    private $writeConcern;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^        $this->writeConcern = isset($options['writeConcern']) ? $options['writeConcern'] : $this->manager->getWriteConcern();$/;"	v
writeConcern	vendor/mongodb/mongodb/src/GridFS/Bucket.php	/^    private $writeConcern;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $writeConcern = isset($this->options['writeConcern']) ? $this->options['writeConcern'] : null;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $writeConcern = isset($this->options['writeConcern']) ? $this->options['writeConcern'] : null;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $writeConcern = isset($this->options['writeConcern']) ? $this->options['writeConcern'] : null;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $writeConcern = isset($this->options['writeConcern']) ? $this->options['writeConcern'] : null;$/;"	v
writeConcern	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $writeConcern = isset($this->options['writeConcern']) ? $this->options['writeConcern'] : null;$/;"	v
writeConcernNotSupported	vendor/mongodb/mongodb/src/Exception/UnsupportedException.php	/^    public static function writeConcernNotSupported()$/;"	f
writeError	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                    $writeError = $writeResult->getWriteErrors()[0];$/;"	v
writeErrors	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^        $writeErrors = [];$/;"	v
writeHttp	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private function writeHttp($data)$/;"	f
writeLength	vendor/mongodb/mongodb/tests/GridFS/BucketFunctionalTest.php	/^            $writeLength = fwrite($stream, substr($input, $offset, 4096));$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDeleteBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoInsertBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoUpdateBatch.php	/^    public function __construct(MongoCollection $collection, array $writeOptions = [])$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^        $this->writeOptions = $writeOptions;$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    final public function execute(array $writeOptions = [])$/;"	v
writeOptions	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^    private $writeOptions;$/;"	v
writeOutput	vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php	/^    protected static function writeOutput($str)$/;"	f
writePipe	vendor/pinguo/php-msf/src/Pools/AsynPoolManager.php	/^    public function writePipe(IAsynPool $asyn, $data, $workerId)$/;"	f
writeProcessInput	vendor/monolog/monolog/src/Monolog/Handler/ProcessHandler.php	/^    protected function writeProcessInput($string)$/;"	f
writeRecord	vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php	/^    private function writeRecord($string)$/;"	f
writeResult	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/ExceptionConverter.php	/^                $writeResult = $e->getWriteResult();$/;"	v
writeResult	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $writeResult = $e->getWriteResult();$/;"	v
writeResult	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoWriteBatch.php	/^            $writeResult = $this->collection->getCollection()->bulkWrite($this->items, $options);$/;"	v
writeResult	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^        $this->writeResult = $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/BulkWriteResult.php	/^    private $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/DeleteResult.php	/^        $this->writeResult = $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/DeleteResult.php	/^    private $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/InsertManyResult.php	/^        $this->writeResult = $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/InsertManyResult.php	/^    private $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/InsertOneResult.php	/^        $this->writeResult = $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/InsertOneResult.php	/^    private $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/Operation/BulkWrite.php	/^        $writeResult = $server->executeBulkWrite($this->databaseName . '.' . $this->collectionName, $bulk, $writeConcern);$/;"	v
writeResult	vendor/mongodb/mongodb/src/Operation/Delete.php	/^        $writeResult = $server->executeBulkWrite($this->databaseName . '.' . $this->collectionName, $bulk, $writeConcern);$/;"	v
writeResult	vendor/mongodb/mongodb/src/Operation/InsertMany.php	/^        $writeResult = $server->executeBulkWrite($this->databaseName . '.' . $this->collectionName, $bulk, $writeConcern);$/;"	v
writeResult	vendor/mongodb/mongodb/src/Operation/InsertOne.php	/^        $writeResult = $server->executeBulkWrite($this->databaseName . '.' . $this->collectionName, $bulk, $writeConcern);$/;"	v
writeResult	vendor/mongodb/mongodb/src/Operation/Update.php	/^        $writeResult = $server->executeBulkWrite($this->databaseName . '.' . $this->collectionName, $bulk, $writeConcern);$/;"	v
writeResult	vendor/mongodb/mongodb/src/UpdateResult.php	/^        $this->writeResult = $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/src/UpdateResult.php	/^    private $writeResult;$/;"	v
writeResult	vendor/mongodb/mongodb/tests/ClientFunctionalTest.php	/^        $writeResult = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Collection/CollectionFunctionalTest.php	/^        $writeResult = $this->collection->insertOne(['x' => 1]);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Database/CollectionManagementFunctionalTest.php	/^        $writeResult = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Database/DatabaseFunctionalTest.php	/^        $writeResult = $this->manager->executeBulkWrite($this->getNamespace(), $bulkWrite);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Operation/DropCollectionFunctionalTest.php	/^        $writeResult = $insertOne->execute($server);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Operation/DropDatabaseFunctionalTest.php	/^        $writeResult = $insertOne->execute($server);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Operation/ListCollectionsFunctionalTest.php	/^        $writeResult = $insertOne->execute($server);$/;"	v
writeResult	vendor/mongodb/mongodb/tests/Operation/ListIndexesFunctionalTest.php	/^        $writeResult = $insertOne->execute($this->getPrimaryServer());$/;"	v
writeSuccess	vendor/pinguo/php-log/src/Handler/PGStreamHandler.php	/^                $writeSuccess = true;$/;"	v
writeSuccess	vendor/pinguo/php-log/src/Handler/PGStreamHandler.php	/^        $writeSuccess = false;$/;"	v
writeToSocket	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function writeToSocket($data)$/;"	f
writeUdp	vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php	/^    private function writeUdp($data)$/;"	f
writeZendMonitorCustomEvent	vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php	/^    protected function writeZendMonitorCustomEvent($level, $message, $formatted)$/;"	f
write_concern_as_document	vendor/mongodb/mongodb/src/functions.php	/^function write_concern_as_document(WriteConcern $writeConcern)$/;"	f
writeln	vendor/pinguo/php-msf/src/Helpers/Common.php	/^function writeln($messages)$/;"	f
writingIsTimedOut	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private function writingIsTimedOut($sent)$/;"	f
writingTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $this->writingTimeout = (float) $seconds;$/;"	v
writingTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^        $writingTimeout = (int) floor($this->writingTimeout);$/;"	v
writingTimeout	vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php	/^    private $writingTimeout = 10;$/;"	v
written	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFS.php	/^        $written = 0;$/;"	v
written	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $written = $this->copyToResource($handle);$/;"	v
written	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoGridFSFile.php	/^        $written = 0;$/;"	v
wrongOptions	vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php	/^        $wrongOptions = array_diff(array_keys($options), array_keys($this->options));$/;"	v
wstring	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcernConverter.php	/^            $wstring = (int) $wstring;$/;"	v
wstring	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcernConverter.php	/^        $wstring = isset($writeConcernArray['w']) ? $writeConcernArray['w'] : 1;$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    abstract public function setWriteConcern($wstring, $wtimeout = 0);$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcern.php	/^    protected function setWriteConcernFromParameters($wstring, $wtimeout = 0)$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Alcaeus/MongoDbAdapter/Helper/WriteConcernConverter.php	/^        $wtimeout = isset($writeConcernArray['wtimeout']) ? $writeConcernArray['wtimeout'] : 0;$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoClient.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoCollection.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	v
wtimeout	vendor/alcaeus/mongo-php-adapter/lib/Mongo/MongoDB.php	/^    public function setWriteConcern($wstring, $wtimeout = 0)$/;"	v
x	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $x = ['foo' => 'bar'];$/;"	v
x	vendor/pinguo/php-msf/src/Pools/Miner.php	/^                foreach ($join['criteria'] as $x => $criterion) {$/;"	v
y	vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php	/^        $y = ['x' => &$x];$/;"	v
yearCallback	vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php	/^        $yearCallback = function($ago) {$/;"	v
yesterday	vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php	/^        $yesterday = time() - 86400;$/;"	v
zendMonitor	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $zendMonitor = $this->getMockBuilder('Monolog\\Handler\\ZendMonitorHandler')$/;"	v
zendMonitor	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^        $zendMonitor = new ZendMonitorHandler();$/;"	v
zendMonitorHandler	vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php	/^    protected $zendMonitorHandler;$/;"	v
